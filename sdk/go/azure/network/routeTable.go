// *** WARNING: this file was generated by the Kulado Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package network

import (
	"github.com/pkg/errors"
	"github.com/kulado/kulado/sdk/go/kulado"
)

// Manages a Route Table
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-azurerm/blob/master/website/docs/r/route_table.html.markdown.
type RouteTable struct {
	s *kulado.ResourceState
}

// NewRouteTable registers a new resource with the given unique name, arguments, and options.
func NewRouteTable(ctx *kulado.Context,
	name string, args *RouteTableArgs, opts ...kulado.ResourceOpt) (*RouteTable, error) {
	if args == nil || args.ResourceGroupName == nil {
		return nil, errors.New("missing required argument 'ResourceGroupName'")
	}
	inputs := make(map[string]interface{})
	if args == nil {
		inputs["disableBgpRoutePropagation"] = nil
		inputs["location"] = nil
		inputs["name"] = nil
		inputs["resourceGroupName"] = nil
		inputs["routes"] = nil
		inputs["tags"] = nil
	} else {
		inputs["disableBgpRoutePropagation"] = args.DisableBgpRoutePropagation
		inputs["location"] = args.Location
		inputs["name"] = args.Name
		inputs["resourceGroupName"] = args.ResourceGroupName
		inputs["routes"] = args.Routes
		inputs["tags"] = args.Tags
	}
	inputs["subnets"] = nil
	s, err := ctx.RegisterResource("azure:network/routeTable:RouteTable", name, true, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &RouteTable{s: s}, nil
}

// GetRouteTable gets an existing RouteTable resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetRouteTable(ctx *kulado.Context,
	name string, id kulado.ID, state *RouteTableState, opts ...kulado.ResourceOpt) (*RouteTable, error) {
	inputs := make(map[string]interface{})
	if state != nil {
		inputs["disableBgpRoutePropagation"] = state.DisableBgpRoutePropagation
		inputs["location"] = state.Location
		inputs["name"] = state.Name
		inputs["resourceGroupName"] = state.ResourceGroupName
		inputs["routes"] = state.Routes
		inputs["subnets"] = state.Subnets
		inputs["tags"] = state.Tags
	}
	s, err := ctx.ReadResource("azure:network/routeTable:RouteTable", name, id, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &RouteTable{s: s}, nil
}

// URN is this resource's unique name assigned by Kulado.
func (r *RouteTable) URN() *kulado.URNOutput {
	return r.s.URN()
}

// ID is this resource's unique identifier assigned by its provider.
func (r *RouteTable) ID() *kulado.IDOutput {
	return r.s.ID()
}

// Boolean flag which controls propagation of routes learned by BGP on that route table. True means disable.
func (r *RouteTable) DisableBgpRoutePropagation() *kulado.BoolOutput {
	return (*kulado.BoolOutput)(r.s.State["disableBgpRoutePropagation"])
}

// Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
func (r *RouteTable) Location() *kulado.StringOutput {
	return (*kulado.StringOutput)(r.s.State["location"])
}

// The name of the route.
func (r *RouteTable) Name() *kulado.StringOutput {
	return (*kulado.StringOutput)(r.s.State["name"])
}

// The name of the resource group in which to create the route table. Changing this forces a new resource to be created.
func (r *RouteTable) ResourceGroupName() *kulado.StringOutput {
	return (*kulado.StringOutput)(r.s.State["resourceGroupName"])
}

// [List of objects](https://www.terraform.io/docs/configuration/attr-as-blocks.html) representing routes. Each object accepts the arguments documented below.
func (r *RouteTable) Routes() *kulado.ArrayOutput {
	return (*kulado.ArrayOutput)(r.s.State["routes"])
}

// The collection of Subnets associated with this route table.
func (r *RouteTable) Subnets() *kulado.ArrayOutput {
	return (*kulado.ArrayOutput)(r.s.State["subnets"])
}

// A mapping of tags to assign to the resource.
func (r *RouteTable) Tags() *kulado.MapOutput {
	return (*kulado.MapOutput)(r.s.State["tags"])
}

// Input properties used for looking up and filtering RouteTable resources.
type RouteTableState struct {
	// Boolean flag which controls propagation of routes learned by BGP on that route table. True means disable.
	DisableBgpRoutePropagation interface{}
	// Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
	Location interface{}
	// The name of the route.
	Name interface{}
	// The name of the resource group in which to create the route table. Changing this forces a new resource to be created.
	ResourceGroupName interface{}
	// [List of objects](https://www.terraform.io/docs/configuration/attr-as-blocks.html) representing routes. Each object accepts the arguments documented below.
	Routes interface{}
	// The collection of Subnets associated with this route table.
	Subnets interface{}
	// A mapping of tags to assign to the resource.
	Tags interface{}
}

// The set of arguments for constructing a RouteTable resource.
type RouteTableArgs struct {
	// Boolean flag which controls propagation of routes learned by BGP on that route table. True means disable.
	DisableBgpRoutePropagation interface{}
	// Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
	Location interface{}
	// The name of the route.
	Name interface{}
	// The name of the resource group in which to create the route table. Changing this forces a new resource to be created.
	ResourceGroupName interface{}
	// [List of objects](https://www.terraform.io/docs/configuration/attr-as-blocks.html) representing routes. Each object accepts the arguments documented below.
	Routes interface{}
	// A mapping of tags to assign to the resource.
	Tags interface{}
}
