// *** WARNING: this file was generated by the Kulado Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package network

import (
	"github.com/pkg/errors"
	"github.com/kulado/kulado/sdk/go/kulado"
)

// Manages a local network gateway connection over which specific connections can be configured.
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-azurerm/blob/master/website/docs/r/local_network_gateway.html.markdown.
type LocalNetworkGateway struct {
	s *kulado.ResourceState
}

// NewLocalNetworkGateway registers a new resource with the given unique name, arguments, and options.
func NewLocalNetworkGateway(ctx *kulado.Context,
	name string, args *LocalNetworkGatewayArgs, opts ...kulado.ResourceOpt) (*LocalNetworkGateway, error) {
	if args == nil || args.AddressSpaces == nil {
		return nil, errors.New("missing required argument 'AddressSpaces'")
	}
	if args == nil || args.GatewayAddress == nil {
		return nil, errors.New("missing required argument 'GatewayAddress'")
	}
	if args == nil || args.ResourceGroupName == nil {
		return nil, errors.New("missing required argument 'ResourceGroupName'")
	}
	inputs := make(map[string]interface{})
	if args == nil {
		inputs["addressSpaces"] = nil
		inputs["bgpSettings"] = nil
		inputs["gatewayAddress"] = nil
		inputs["location"] = nil
		inputs["name"] = nil
		inputs["resourceGroupName"] = nil
		inputs["tags"] = nil
	} else {
		inputs["addressSpaces"] = args.AddressSpaces
		inputs["bgpSettings"] = args.BgpSettings
		inputs["gatewayAddress"] = args.GatewayAddress
		inputs["location"] = args.Location
		inputs["name"] = args.Name
		inputs["resourceGroupName"] = args.ResourceGroupName
		inputs["tags"] = args.Tags
	}
	s, err := ctx.RegisterResource("azure:network/localNetworkGateway:LocalNetworkGateway", name, true, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &LocalNetworkGateway{s: s}, nil
}

// GetLocalNetworkGateway gets an existing LocalNetworkGateway resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetLocalNetworkGateway(ctx *kulado.Context,
	name string, id kulado.ID, state *LocalNetworkGatewayState, opts ...kulado.ResourceOpt) (*LocalNetworkGateway, error) {
	inputs := make(map[string]interface{})
	if state != nil {
		inputs["addressSpaces"] = state.AddressSpaces
		inputs["bgpSettings"] = state.BgpSettings
		inputs["gatewayAddress"] = state.GatewayAddress
		inputs["location"] = state.Location
		inputs["name"] = state.Name
		inputs["resourceGroupName"] = state.ResourceGroupName
		inputs["tags"] = state.Tags
	}
	s, err := ctx.ReadResource("azure:network/localNetworkGateway:LocalNetworkGateway", name, id, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &LocalNetworkGateway{s: s}, nil
}

// URN is this resource's unique name assigned by Kulado.
func (r *LocalNetworkGateway) URN() *kulado.URNOutput {
	return r.s.URN()
}

// ID is this resource's unique identifier assigned by its provider.
func (r *LocalNetworkGateway) ID() *kulado.IDOutput {
	return r.s.ID()
}

// The list of string CIDRs representing the
// address spaces the gateway exposes.
func (r *LocalNetworkGateway) AddressSpaces() *kulado.ArrayOutput {
	return (*kulado.ArrayOutput)(r.s.State["addressSpaces"])
}

// A `bgp_settings` block as defined below containing the
// Local Network Gateway's BGP speaker settings.
func (r *LocalNetworkGateway) BgpSettings() *kulado.Output {
	return r.s.State["bgpSettings"]
}

// The IP address of the gateway to which to
// connect.
func (r *LocalNetworkGateway) GatewayAddress() *kulado.StringOutput {
	return (*kulado.StringOutput)(r.s.State["gatewayAddress"])
}

// The location/region where the local network gateway is
// created. Changing this forces a new resource to be created.
func (r *LocalNetworkGateway) Location() *kulado.StringOutput {
	return (*kulado.StringOutput)(r.s.State["location"])
}

// The name of the local network gateway. Changing this
// forces a new resource to be created.
func (r *LocalNetworkGateway) Name() *kulado.StringOutput {
	return (*kulado.StringOutput)(r.s.State["name"])
}

// The name of the resource group in which to
// create the local network gateway.
func (r *LocalNetworkGateway) ResourceGroupName() *kulado.StringOutput {
	return (*kulado.StringOutput)(r.s.State["resourceGroupName"])
}

// A mapping of tags to assign to the resource.
func (r *LocalNetworkGateway) Tags() *kulado.MapOutput {
	return (*kulado.MapOutput)(r.s.State["tags"])
}

// Input properties used for looking up and filtering LocalNetworkGateway resources.
type LocalNetworkGatewayState struct {
	// The list of string CIDRs representing the
	// address spaces the gateway exposes.
	AddressSpaces interface{}
	// A `bgp_settings` block as defined below containing the
	// Local Network Gateway's BGP speaker settings.
	BgpSettings interface{}
	// The IP address of the gateway to which to
	// connect.
	GatewayAddress interface{}
	// The location/region where the local network gateway is
	// created. Changing this forces a new resource to be created.
	Location interface{}
	// The name of the local network gateway. Changing this
	// forces a new resource to be created.
	Name interface{}
	// The name of the resource group in which to
	// create the local network gateway.
	ResourceGroupName interface{}
	// A mapping of tags to assign to the resource.
	Tags interface{}
}

// The set of arguments for constructing a LocalNetworkGateway resource.
type LocalNetworkGatewayArgs struct {
	// The list of string CIDRs representing the
	// address spaces the gateway exposes.
	AddressSpaces interface{}
	// A `bgp_settings` block as defined below containing the
	// Local Network Gateway's BGP speaker settings.
	BgpSettings interface{}
	// The IP address of the gateway to which to
	// connect.
	GatewayAddress interface{}
	// The location/region where the local network gateway is
	// created. Changing this forces a new resource to be created.
	Location interface{}
	// The name of the local network gateway. Changing this
	// forces a new resource to be created.
	Name interface{}
	// The name of the resource group in which to
	// create the local network gateway.
	ResourceGroupName interface{}
	// A mapping of tags to assign to the resource.
	Tags interface{}
}
