// *** WARNING: this file was generated by the Kulado Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package apimanagement

import (
	"github.com/pkg/errors"
	"github.com/kulado/kulado/sdk/go/kulado"
)

// Manages an API Management API Assignment to a Product.
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-azurerm/blob/master/website/docs/r/api_management_product_api.html.markdown.
type ProductApi struct {
	s *kulado.ResourceState
}

// NewProductApi registers a new resource with the given unique name, arguments, and options.
func NewProductApi(ctx *kulado.Context,
	name string, args *ProductApiArgs, opts ...kulado.ResourceOpt) (*ProductApi, error) {
	if args == nil || args.ApiManagementName == nil {
		return nil, errors.New("missing required argument 'ApiManagementName'")
	}
	if args == nil || args.ApiName == nil {
		return nil, errors.New("missing required argument 'ApiName'")
	}
	if args == nil || args.ProductId == nil {
		return nil, errors.New("missing required argument 'ProductId'")
	}
	if args == nil || args.ResourceGroupName == nil {
		return nil, errors.New("missing required argument 'ResourceGroupName'")
	}
	inputs := make(map[string]interface{})
	if args == nil {
		inputs["apiManagementName"] = nil
		inputs["apiName"] = nil
		inputs["productId"] = nil
		inputs["resourceGroupName"] = nil
	} else {
		inputs["apiManagementName"] = args.ApiManagementName
		inputs["apiName"] = args.ApiName
		inputs["productId"] = args.ProductId
		inputs["resourceGroupName"] = args.ResourceGroupName
	}
	s, err := ctx.RegisterResource("azure:apimanagement/productApi:ProductApi", name, true, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &ProductApi{s: s}, nil
}

// GetProductApi gets an existing ProductApi resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetProductApi(ctx *kulado.Context,
	name string, id kulado.ID, state *ProductApiState, opts ...kulado.ResourceOpt) (*ProductApi, error) {
	inputs := make(map[string]interface{})
	if state != nil {
		inputs["apiManagementName"] = state.ApiManagementName
		inputs["apiName"] = state.ApiName
		inputs["productId"] = state.ProductId
		inputs["resourceGroupName"] = state.ResourceGroupName
	}
	s, err := ctx.ReadResource("azure:apimanagement/productApi:ProductApi", name, id, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &ProductApi{s: s}, nil
}

// URN is this resource's unique name assigned by Kulado.
func (r *ProductApi) URN() *kulado.URNOutput {
	return r.s.URN()
}

// ID is this resource's unique identifier assigned by its provider.
func (r *ProductApi) ID() *kulado.IDOutput {
	return r.s.ID()
}

// The name of the API Management Service. Changing this forces a new resource to be created.
func (r *ProductApi) ApiManagementName() *kulado.StringOutput {
	return (*kulado.StringOutput)(r.s.State["apiManagementName"])
}

// The Name of the API Management API within the API Management Service. Changing this forces a new resource to be created.
func (r *ProductApi) ApiName() *kulado.StringOutput {
	return (*kulado.StringOutput)(r.s.State["apiName"])
}

// The ID of the API Management Product within the API Management Service. Changing this forces a new resource to be created.
func (r *ProductApi) ProductId() *kulado.StringOutput {
	return (*kulado.StringOutput)(r.s.State["productId"])
}

// The name of the Resource Group in which the API Management Service exists. Changing this forces a new resource to be created.
func (r *ProductApi) ResourceGroupName() *kulado.StringOutput {
	return (*kulado.StringOutput)(r.s.State["resourceGroupName"])
}

// Input properties used for looking up and filtering ProductApi resources.
type ProductApiState struct {
	// The name of the API Management Service. Changing this forces a new resource to be created.
	ApiManagementName interface{}
	// The Name of the API Management API within the API Management Service. Changing this forces a new resource to be created.
	ApiName interface{}
	// The ID of the API Management Product within the API Management Service. Changing this forces a new resource to be created.
	ProductId interface{}
	// The name of the Resource Group in which the API Management Service exists. Changing this forces a new resource to be created.
	ResourceGroupName interface{}
}

// The set of arguments for constructing a ProductApi resource.
type ProductApiArgs struct {
	// The name of the API Management Service. Changing this forces a new resource to be created.
	ApiManagementName interface{}
	// The Name of the API Management API within the API Management Service. Changing this forces a new resource to be created.
	ApiName interface{}
	// The ID of the API Management Product within the API Management Service. Changing this forces a new resource to be created.
	ProductId interface{}
	// The name of the Resource Group in which the API Management Service exists. Changing this forces a new resource to be created.
	ResourceGroupName interface{}
}
