// *** WARNING: this file was generated by the Kulado Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package monitoring

import (
	"github.com/pkg/errors"
	"github.com/kulado/kulado/sdk/go/kulado"
)

// Manages an Action Group within Azure Monitor.
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-azurerm/blob/master/website/docs/r/monitor_action_group.html.markdown.
type ActionGroup struct {
	s *kulado.ResourceState
}

// NewActionGroup registers a new resource with the given unique name, arguments, and options.
func NewActionGroup(ctx *kulado.Context,
	name string, args *ActionGroupArgs, opts ...kulado.ResourceOpt) (*ActionGroup, error) {
	if args == nil || args.ResourceGroupName == nil {
		return nil, errors.New("missing required argument 'ResourceGroupName'")
	}
	if args == nil || args.ShortName == nil {
		return nil, errors.New("missing required argument 'ShortName'")
	}
	inputs := make(map[string]interface{})
	if args == nil {
		inputs["emailReceivers"] = nil
		inputs["enabled"] = nil
		inputs["name"] = nil
		inputs["resourceGroupName"] = nil
		inputs["shortName"] = nil
		inputs["smsReceivers"] = nil
		inputs["tags"] = nil
		inputs["webhookReceivers"] = nil
	} else {
		inputs["emailReceivers"] = args.EmailReceivers
		inputs["enabled"] = args.Enabled
		inputs["name"] = args.Name
		inputs["resourceGroupName"] = args.ResourceGroupName
		inputs["shortName"] = args.ShortName
		inputs["smsReceivers"] = args.SmsReceivers
		inputs["tags"] = args.Tags
		inputs["webhookReceivers"] = args.WebhookReceivers
	}
	s, err := ctx.RegisterResource("azure:monitoring/actionGroup:ActionGroup", name, true, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &ActionGroup{s: s}, nil
}

// GetActionGroup gets an existing ActionGroup resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetActionGroup(ctx *kulado.Context,
	name string, id kulado.ID, state *ActionGroupState, opts ...kulado.ResourceOpt) (*ActionGroup, error) {
	inputs := make(map[string]interface{})
	if state != nil {
		inputs["emailReceivers"] = state.EmailReceivers
		inputs["enabled"] = state.Enabled
		inputs["name"] = state.Name
		inputs["resourceGroupName"] = state.ResourceGroupName
		inputs["shortName"] = state.ShortName
		inputs["smsReceivers"] = state.SmsReceivers
		inputs["tags"] = state.Tags
		inputs["webhookReceivers"] = state.WebhookReceivers
	}
	s, err := ctx.ReadResource("azure:monitoring/actionGroup:ActionGroup", name, id, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &ActionGroup{s: s}, nil
}

// URN is this resource's unique name assigned by Kulado.
func (r *ActionGroup) URN() *kulado.URNOutput {
	return r.s.URN()
}

// ID is this resource's unique identifier assigned by its provider.
func (r *ActionGroup) ID() *kulado.IDOutput {
	return r.s.ID()
}

// One or more `email_receiver` blocks as defined below.
func (r *ActionGroup) EmailReceivers() *kulado.ArrayOutput {
	return (*kulado.ArrayOutput)(r.s.State["emailReceivers"])
}

// Whether this action group is enabled. If an action group is not enabled, then none of its receivers will receive communications. Defaults to `true`.
func (r *ActionGroup) Enabled() *kulado.BoolOutput {
	return (*kulado.BoolOutput)(r.s.State["enabled"])
}

// The name of the webhook receiver. Names must be unique (case-insensitive) across all receivers within an action group.
func (r *ActionGroup) Name() *kulado.StringOutput {
	return (*kulado.StringOutput)(r.s.State["name"])
}

// The name of the resource group in which to create the Action Group instance.
func (r *ActionGroup) ResourceGroupName() *kulado.StringOutput {
	return (*kulado.StringOutput)(r.s.State["resourceGroupName"])
}

// The short name of the action group. This will be used in SMS messages.
func (r *ActionGroup) ShortName() *kulado.StringOutput {
	return (*kulado.StringOutput)(r.s.State["shortName"])
}

// One or more `sms_receiver ` blocks as defined below.
func (r *ActionGroup) SmsReceivers() *kulado.ArrayOutput {
	return (*kulado.ArrayOutput)(r.s.State["smsReceivers"])
}

// A mapping of tags to assign to the resource.
func (r *ActionGroup) Tags() *kulado.MapOutput {
	return (*kulado.MapOutput)(r.s.State["tags"])
}

// One or more `webhook_receiver ` blocks as defined below.
func (r *ActionGroup) WebhookReceivers() *kulado.ArrayOutput {
	return (*kulado.ArrayOutput)(r.s.State["webhookReceivers"])
}

// Input properties used for looking up and filtering ActionGroup resources.
type ActionGroupState struct {
	// One or more `email_receiver` blocks as defined below.
	EmailReceivers interface{}
	// Whether this action group is enabled. If an action group is not enabled, then none of its receivers will receive communications. Defaults to `true`.
	Enabled interface{}
	// The name of the webhook receiver. Names must be unique (case-insensitive) across all receivers within an action group.
	Name interface{}
	// The name of the resource group in which to create the Action Group instance.
	ResourceGroupName interface{}
	// The short name of the action group. This will be used in SMS messages.
	ShortName interface{}
	// One or more `sms_receiver ` blocks as defined below.
	SmsReceivers interface{}
	// A mapping of tags to assign to the resource.
	Tags interface{}
	// One or more `webhook_receiver ` blocks as defined below.
	WebhookReceivers interface{}
}

// The set of arguments for constructing a ActionGroup resource.
type ActionGroupArgs struct {
	// One or more `email_receiver` blocks as defined below.
	EmailReceivers interface{}
	// Whether this action group is enabled. If an action group is not enabled, then none of its receivers will receive communications. Defaults to `true`.
	Enabled interface{}
	// The name of the webhook receiver. Names must be unique (case-insensitive) across all receivers within an action group.
	Name interface{}
	// The name of the resource group in which to create the Action Group instance.
	ResourceGroupName interface{}
	// The short name of the action group. This will be used in SMS messages.
	ShortName interface{}
	// One or more `sms_receiver ` blocks as defined below.
	SmsReceivers interface{}
	// A mapping of tags to assign to the resource.
	Tags interface{}
	// One or more `webhook_receiver ` blocks as defined below.
	WebhookReceivers interface{}
}
