// *** WARNING: this file was generated by the Kulado Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package appinsights

import (
	"github.com/pkg/errors"
	"github.com/kulado/kulado/sdk/go/kulado"
)

// Manages an Application Insights WebTest.
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-azurerm/blob/master/website/docs/r/application_insights_web_test.html.markdown.
type WebTest struct {
	s *kulado.ResourceState
}

// NewWebTest registers a new resource with the given unique name, arguments, and options.
func NewWebTest(ctx *kulado.Context,
	name string, args *WebTestArgs, opts ...kulado.ResourceOpt) (*WebTest, error) {
	if args == nil || args.ApplicationInsightsId == nil {
		return nil, errors.New("missing required argument 'ApplicationInsightsId'")
	}
	if args == nil || args.Configuration == nil {
		return nil, errors.New("missing required argument 'Configuration'")
	}
	if args == nil || args.GeoLocations == nil {
		return nil, errors.New("missing required argument 'GeoLocations'")
	}
	if args == nil || args.Kind == nil {
		return nil, errors.New("missing required argument 'Kind'")
	}
	if args == nil || args.ResourceGroupName == nil {
		return nil, errors.New("missing required argument 'ResourceGroupName'")
	}
	inputs := make(map[string]interface{})
	if args == nil {
		inputs["applicationInsightsId"] = nil
		inputs["configuration"] = nil
		inputs["description"] = nil
		inputs["enabled"] = nil
		inputs["frequency"] = nil
		inputs["geoLocations"] = nil
		inputs["kind"] = nil
		inputs["location"] = nil
		inputs["name"] = nil
		inputs["resourceGroupName"] = nil
		inputs["retryEnabled"] = nil
		inputs["tags"] = nil
		inputs["timeout"] = nil
	} else {
		inputs["applicationInsightsId"] = args.ApplicationInsightsId
		inputs["configuration"] = args.Configuration
		inputs["description"] = args.Description
		inputs["enabled"] = args.Enabled
		inputs["frequency"] = args.Frequency
		inputs["geoLocations"] = args.GeoLocations
		inputs["kind"] = args.Kind
		inputs["location"] = args.Location
		inputs["name"] = args.Name
		inputs["resourceGroupName"] = args.ResourceGroupName
		inputs["retryEnabled"] = args.RetryEnabled
		inputs["tags"] = args.Tags
		inputs["timeout"] = args.Timeout
	}
	inputs["syntheticMonitorId"] = nil
	s, err := ctx.RegisterResource("azure:appinsights/webTest:WebTest", name, true, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &WebTest{s: s}, nil
}

// GetWebTest gets an existing WebTest resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetWebTest(ctx *kulado.Context,
	name string, id kulado.ID, state *WebTestState, opts ...kulado.ResourceOpt) (*WebTest, error) {
	inputs := make(map[string]interface{})
	if state != nil {
		inputs["applicationInsightsId"] = state.ApplicationInsightsId
		inputs["configuration"] = state.Configuration
		inputs["description"] = state.Description
		inputs["enabled"] = state.Enabled
		inputs["frequency"] = state.Frequency
		inputs["geoLocations"] = state.GeoLocations
		inputs["kind"] = state.Kind
		inputs["location"] = state.Location
		inputs["name"] = state.Name
		inputs["resourceGroupName"] = state.ResourceGroupName
		inputs["retryEnabled"] = state.RetryEnabled
		inputs["syntheticMonitorId"] = state.SyntheticMonitorId
		inputs["tags"] = state.Tags
		inputs["timeout"] = state.Timeout
	}
	s, err := ctx.ReadResource("azure:appinsights/webTest:WebTest", name, id, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &WebTest{s: s}, nil
}

// URN is this resource's unique name assigned by Kulado.
func (r *WebTest) URN() *kulado.URNOutput {
	return r.s.URN()
}

// ID is this resource's unique identifier assigned by its provider.
func (r *WebTest) ID() *kulado.IDOutput {
	return r.s.ID()
}

// The ID of the Application Insights component on which the WebTest operates. Changing this forces a new resource to be created.
func (r *WebTest) ApplicationInsightsId() *kulado.StringOutput {
	return (*kulado.StringOutput)(r.s.State["applicationInsightsId"])
}

// An XML configuration specification for a WebTest.
func (r *WebTest) Configuration() *kulado.StringOutput {
	return (*kulado.StringOutput)(r.s.State["configuration"])
}

// Purpose/user defined descriptive test for this WebTest.
func (r *WebTest) Description() *kulado.StringOutput {
	return (*kulado.StringOutput)(r.s.State["description"])
}

// Is the test actively being monitored.
func (r *WebTest) Enabled() *kulado.BoolOutput {
	return (*kulado.BoolOutput)(r.s.State["enabled"])
}

// Interval in seconds between test runs for this WebTest. Default is `300`.
func (r *WebTest) Frequency() *kulado.IntOutput {
	return (*kulado.IntOutput)(r.s.State["frequency"])
}

// A list of where to physically run the tests from to give global coverage for accessibility of your application.
func (r *WebTest) GeoLocations() *kulado.ArrayOutput {
	return (*kulado.ArrayOutput)(r.s.State["geoLocations"])
}

func (r *WebTest) Kind() *kulado.StringOutput {
	return (*kulado.StringOutput)(r.s.State["kind"])
}

// The location of the resource group.
func (r *WebTest) Location() *kulado.StringOutput {
	return (*kulado.StringOutput)(r.s.State["location"])
}

// Specifies the name of the Application Insights WebTest. Changing this forces a
// new resource to be created.
func (r *WebTest) Name() *kulado.StringOutput {
	return (*kulado.StringOutput)(r.s.State["name"])
}

func (r *WebTest) ResourceGroupName() *kulado.StringOutput {
	return (*kulado.StringOutput)(r.s.State["resourceGroupName"])
}

// Allow for retries should this WebTest fail.
func (r *WebTest) RetryEnabled() *kulado.BoolOutput {
	return (*kulado.BoolOutput)(r.s.State["retryEnabled"])
}

func (r *WebTest) SyntheticMonitorId() *kulado.StringOutput {
	return (*kulado.StringOutput)(r.s.State["syntheticMonitorId"])
}

// Resource tags.
func (r *WebTest) Tags() *kulado.MapOutput {
	return (*kulado.MapOutput)(r.s.State["tags"])
}

// Seconds until this WebTest will timeout and fail. Default is `30`.
func (r *WebTest) Timeout() *kulado.IntOutput {
	return (*kulado.IntOutput)(r.s.State["timeout"])
}

// Input properties used for looking up and filtering WebTest resources.
type WebTestState struct {
	// The ID of the Application Insights component on which the WebTest operates. Changing this forces a new resource to be created.
	ApplicationInsightsId interface{}
	// An XML configuration specification for a WebTest.
	Configuration interface{}
	// Purpose/user defined descriptive test for this WebTest.
	Description interface{}
	// Is the test actively being monitored.
	Enabled interface{}
	// Interval in seconds between test runs for this WebTest. Default is `300`.
	Frequency interface{}
	// A list of where to physically run the tests from to give global coverage for accessibility of your application.
	GeoLocations interface{}
	Kind interface{}
	// The location of the resource group.
	Location interface{}
	// Specifies the name of the Application Insights WebTest. Changing this forces a
	// new resource to be created.
	Name interface{}
	ResourceGroupName interface{}
	// Allow for retries should this WebTest fail.
	RetryEnabled interface{}
	SyntheticMonitorId interface{}
	// Resource tags.
	Tags interface{}
	// Seconds until this WebTest will timeout and fail. Default is `30`.
	Timeout interface{}
}

// The set of arguments for constructing a WebTest resource.
type WebTestArgs struct {
	// The ID of the Application Insights component on which the WebTest operates. Changing this forces a new resource to be created.
	ApplicationInsightsId interface{}
	// An XML configuration specification for a WebTest.
	Configuration interface{}
	// Purpose/user defined descriptive test for this WebTest.
	Description interface{}
	// Is the test actively being monitored.
	Enabled interface{}
	// Interval in seconds between test runs for this WebTest. Default is `300`.
	Frequency interface{}
	// A list of where to physically run the tests from to give global coverage for accessibility of your application.
	GeoLocations interface{}
	Kind interface{}
	// The location of the resource group.
	Location interface{}
	// Specifies the name of the Application Insights WebTest. Changing this forces a
	// new resource to be created.
	Name interface{}
	ResourceGroupName interface{}
	// Allow for retries should this WebTest fail.
	RetryEnabled interface{}
	// Resource tags.
	Tags interface{}
	// Seconds until this WebTest will timeout and fail. Default is `30`.
	Timeout interface{}
}
