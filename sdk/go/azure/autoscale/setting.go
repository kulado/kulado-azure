// *** WARNING: this file was generated by the Kulado Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package autoscale

import (
	"github.com/pkg/errors"
	"github.com/kulado/kulado/sdk/go/kulado"
)

// Manages an AutoScale Setting which can be applied to Virtual Machine Scale Sets, App Services and other scalable resources.
// 
// > **NOTE:** This resource has been deprecated in favour of the `azurerm_monitor_autoscale_setting` resource and will be removed in the next major version of the AzureRM Provider. The new resource shares the same fields as this one, and information on migrating across can be found in this guide.
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-azurerm/blob/master/website/docs/r/autoscale_setting.html.markdown.
type Setting struct {
	s *kulado.ResourceState
}

// NewSetting registers a new resource with the given unique name, arguments, and options.
func NewSetting(ctx *kulado.Context,
	name string, args *SettingArgs, opts ...kulado.ResourceOpt) (*Setting, error) {
	if args == nil || args.Profiles == nil {
		return nil, errors.New("missing required argument 'Profiles'")
	}
	if args == nil || args.ResourceGroupName == nil {
		return nil, errors.New("missing required argument 'ResourceGroupName'")
	}
	if args == nil || args.TargetResourceId == nil {
		return nil, errors.New("missing required argument 'TargetResourceId'")
	}
	inputs := make(map[string]interface{})
	if args == nil {
		inputs["enabled"] = nil
		inputs["location"] = nil
		inputs["name"] = nil
		inputs["notification"] = nil
		inputs["profiles"] = nil
		inputs["resourceGroupName"] = nil
		inputs["tags"] = nil
		inputs["targetResourceId"] = nil
	} else {
		inputs["enabled"] = args.Enabled
		inputs["location"] = args.Location
		inputs["name"] = args.Name
		inputs["notification"] = args.Notification
		inputs["profiles"] = args.Profiles
		inputs["resourceGroupName"] = args.ResourceGroupName
		inputs["tags"] = args.Tags
		inputs["targetResourceId"] = args.TargetResourceId
	}
	s, err := ctx.RegisterResource("azure:autoscale/setting:Setting", name, true, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &Setting{s: s}, nil
}

// GetSetting gets an existing Setting resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSetting(ctx *kulado.Context,
	name string, id kulado.ID, state *SettingState, opts ...kulado.ResourceOpt) (*Setting, error) {
	inputs := make(map[string]interface{})
	if state != nil {
		inputs["enabled"] = state.Enabled
		inputs["location"] = state.Location
		inputs["name"] = state.Name
		inputs["notification"] = state.Notification
		inputs["profiles"] = state.Profiles
		inputs["resourceGroupName"] = state.ResourceGroupName
		inputs["tags"] = state.Tags
		inputs["targetResourceId"] = state.TargetResourceId
	}
	s, err := ctx.ReadResource("azure:autoscale/setting:Setting", name, id, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &Setting{s: s}, nil
}

// URN is this resource's unique name assigned by Kulado.
func (r *Setting) URN() *kulado.URNOutput {
	return r.s.URN()
}

// ID is this resource's unique identifier assigned by its provider.
func (r *Setting) ID() *kulado.IDOutput {
	return r.s.ID()
}

// Specifies whether automatic scaling is enabled for the target resource. Defaults to `true`.
func (r *Setting) Enabled() *kulado.BoolOutput {
	return (*kulado.BoolOutput)(r.s.State["enabled"])
}

// Specifies the supported Azure location where the AutoScale Setting should exist. Changing this forces a new resource to be created.
func (r *Setting) Location() *kulado.StringOutput {
	return (*kulado.StringOutput)(r.s.State["location"])
}

// The name of the AutoScale Setting. Changing this forces a new resource to be created.
func (r *Setting) Name() *kulado.StringOutput {
	return (*kulado.StringOutput)(r.s.State["name"])
}

// Specifies a `notification` block as defined below.
func (r *Setting) Notification() *kulado.Output {
	return r.s.State["notification"]
}

// Specifies one or more (up to 20) `profile` blocks as defined below.
func (r *Setting) Profiles() *kulado.ArrayOutput {
	return (*kulado.ArrayOutput)(r.s.State["profiles"])
}

// The name of the Resource Group in the AutoScale Setting should be created. Changing this forces a new resource to be created.
func (r *Setting) ResourceGroupName() *kulado.StringOutput {
	return (*kulado.StringOutput)(r.s.State["resourceGroupName"])
}

// A mapping of tags to assign to the resource.
func (r *Setting) Tags() *kulado.MapOutput {
	return (*kulado.MapOutput)(r.s.State["tags"])
}

// Specifies the resource ID of the resource that the autoscale setting should be added to.
func (r *Setting) TargetResourceId() *kulado.StringOutput {
	return (*kulado.StringOutput)(r.s.State["targetResourceId"])
}

// Input properties used for looking up and filtering Setting resources.
type SettingState struct {
	// Specifies whether automatic scaling is enabled for the target resource. Defaults to `true`.
	Enabled interface{}
	// Specifies the supported Azure location where the AutoScale Setting should exist. Changing this forces a new resource to be created.
	Location interface{}
	// The name of the AutoScale Setting. Changing this forces a new resource to be created.
	Name interface{}
	// Specifies a `notification` block as defined below.
	Notification interface{}
	// Specifies one or more (up to 20) `profile` blocks as defined below.
	Profiles interface{}
	// The name of the Resource Group in the AutoScale Setting should be created. Changing this forces a new resource to be created.
	ResourceGroupName interface{}
	// A mapping of tags to assign to the resource.
	Tags interface{}
	// Specifies the resource ID of the resource that the autoscale setting should be added to.
	TargetResourceId interface{}
}

// The set of arguments for constructing a Setting resource.
type SettingArgs struct {
	// Specifies whether automatic scaling is enabled for the target resource. Defaults to `true`.
	Enabled interface{}
	// Specifies the supported Azure location where the AutoScale Setting should exist. Changing this forces a new resource to be created.
	Location interface{}
	// The name of the AutoScale Setting. Changing this forces a new resource to be created.
	Name interface{}
	// Specifies a `notification` block as defined below.
	Notification interface{}
	// Specifies one or more (up to 20) `profile` blocks as defined below.
	Profiles interface{}
	// The name of the Resource Group in the AutoScale Setting should be created. Changing this forces a new resource to be created.
	ResourceGroupName interface{}
	// A mapping of tags to assign to the resource.
	Tags interface{}
	// Specifies the resource ID of the resource that the autoscale setting should be added to.
	TargetResourceId interface{}
}
