// *** WARNING: this file was generated by the Kulado Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package ddosprotection

import (
	"github.com/pkg/errors"
	"github.com/kulado/kulado/sdk/go/kulado"
)

// Manages an Azure DDoS Protection Plan.
// 
// > **NOTE** Azure only allow `one` DDoS Protection Plan per region.
// 
// > **NOTE:** This resource has been deprecated in favour of the `azurerm_network_ddos_protection_plan` resource and will be removed in the next major version of the AzureRM Provider. The new resource shares the same fields as this one, and information on migrating across can be found in this guide.
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-azurerm/blob/master/website/docs/r/ddos_protection_plan.html.markdown.
type Plan struct {
	s *kulado.ResourceState
}

// NewPlan registers a new resource with the given unique name, arguments, and options.
func NewPlan(ctx *kulado.Context,
	name string, args *PlanArgs, opts ...kulado.ResourceOpt) (*Plan, error) {
	if args == nil || args.ResourceGroupName == nil {
		return nil, errors.New("missing required argument 'ResourceGroupName'")
	}
	inputs := make(map[string]interface{})
	if args == nil {
		inputs["location"] = nil
		inputs["name"] = nil
		inputs["resourceGroupName"] = nil
		inputs["tags"] = nil
	} else {
		inputs["location"] = args.Location
		inputs["name"] = args.Name
		inputs["resourceGroupName"] = args.ResourceGroupName
		inputs["tags"] = args.Tags
	}
	inputs["virtualNetworkIds"] = nil
	s, err := ctx.RegisterResource("azure:ddosprotection/plan:Plan", name, true, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &Plan{s: s}, nil
}

// GetPlan gets an existing Plan resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPlan(ctx *kulado.Context,
	name string, id kulado.ID, state *PlanState, opts ...kulado.ResourceOpt) (*Plan, error) {
	inputs := make(map[string]interface{})
	if state != nil {
		inputs["location"] = state.Location
		inputs["name"] = state.Name
		inputs["resourceGroupName"] = state.ResourceGroupName
		inputs["tags"] = state.Tags
		inputs["virtualNetworkIds"] = state.VirtualNetworkIds
	}
	s, err := ctx.ReadResource("azure:ddosprotection/plan:Plan", name, id, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &Plan{s: s}, nil
}

// URN is this resource's unique name assigned by Kulado.
func (r *Plan) URN() *kulado.URNOutput {
	return r.s.URN()
}

// ID is this resource's unique identifier assigned by its provider.
func (r *Plan) ID() *kulado.IDOutput {
	return r.s.ID()
}

// Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
func (r *Plan) Location() *kulado.StringOutput {
	return (*kulado.StringOutput)(r.s.State["location"])
}

// Specifies the name of the DDoS Protection Plan. Changing this forces a new resource to be created.
func (r *Plan) Name() *kulado.StringOutput {
	return (*kulado.StringOutput)(r.s.State["name"])
}

// The name of the resource group in which to create the resource. Changing this forces a new resource to be created.
func (r *Plan) ResourceGroupName() *kulado.StringOutput {
	return (*kulado.StringOutput)(r.s.State["resourceGroupName"])
}

// A mapping of tags to assign to the resource.
func (r *Plan) Tags() *kulado.MapOutput {
	return (*kulado.MapOutput)(r.s.State["tags"])
}

// The Resource ID list of the Virtual Networks associated with DDoS Protection Plan.
func (r *Plan) VirtualNetworkIds() *kulado.ArrayOutput {
	return (*kulado.ArrayOutput)(r.s.State["virtualNetworkIds"])
}

// Input properties used for looking up and filtering Plan resources.
type PlanState struct {
	// Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
	Location interface{}
	// Specifies the name of the DDoS Protection Plan. Changing this forces a new resource to be created.
	Name interface{}
	// The name of the resource group in which to create the resource. Changing this forces a new resource to be created.
	ResourceGroupName interface{}
	// A mapping of tags to assign to the resource.
	Tags interface{}
	// The Resource ID list of the Virtual Networks associated with DDoS Protection Plan.
	VirtualNetworkIds interface{}
}

// The set of arguments for constructing a Plan resource.
type PlanArgs struct {
	// Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
	Location interface{}
	// Specifies the name of the DDoS Protection Plan. Changing this forces a new resource to be created.
	Name interface{}
	// The name of the resource group in which to create the resource. Changing this forces a new resource to be created.
	ResourceGroupName interface{}
	// A mapping of tags to assign to the resource.
	Tags interface{}
}
