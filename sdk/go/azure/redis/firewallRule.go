// *** WARNING: this file was generated by the Kulado Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package redis

import (
	"github.com/pkg/errors"
	"github.com/kulado/kulado/sdk/go/kulado"
)

// Manages a Firewall Rule associated with a Redis Cache.
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-azurerm/blob/master/website/docs/r/redis_firewall_rule.html.markdown.
type FirewallRule struct {
	s *kulado.ResourceState
}

// NewFirewallRule registers a new resource with the given unique name, arguments, and options.
func NewFirewallRule(ctx *kulado.Context,
	name string, args *FirewallRuleArgs, opts ...kulado.ResourceOpt) (*FirewallRule, error) {
	if args == nil || args.EndIp == nil {
		return nil, errors.New("missing required argument 'EndIp'")
	}
	if args == nil || args.RedisCacheName == nil {
		return nil, errors.New("missing required argument 'RedisCacheName'")
	}
	if args == nil || args.ResourceGroupName == nil {
		return nil, errors.New("missing required argument 'ResourceGroupName'")
	}
	if args == nil || args.StartIp == nil {
		return nil, errors.New("missing required argument 'StartIp'")
	}
	inputs := make(map[string]interface{})
	if args == nil {
		inputs["endIp"] = nil
		inputs["name"] = nil
		inputs["redisCacheName"] = nil
		inputs["resourceGroupName"] = nil
		inputs["startIp"] = nil
	} else {
		inputs["endIp"] = args.EndIp
		inputs["name"] = args.Name
		inputs["redisCacheName"] = args.RedisCacheName
		inputs["resourceGroupName"] = args.ResourceGroupName
		inputs["startIp"] = args.StartIp
	}
	s, err := ctx.RegisterResource("azure:redis/firewallRule:FirewallRule", name, true, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &FirewallRule{s: s}, nil
}

// GetFirewallRule gets an existing FirewallRule resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetFirewallRule(ctx *kulado.Context,
	name string, id kulado.ID, state *FirewallRuleState, opts ...kulado.ResourceOpt) (*FirewallRule, error) {
	inputs := make(map[string]interface{})
	if state != nil {
		inputs["endIp"] = state.EndIp
		inputs["name"] = state.Name
		inputs["redisCacheName"] = state.RedisCacheName
		inputs["resourceGroupName"] = state.ResourceGroupName
		inputs["startIp"] = state.StartIp
	}
	s, err := ctx.ReadResource("azure:redis/firewallRule:FirewallRule", name, id, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &FirewallRule{s: s}, nil
}

// URN is this resource's unique name assigned by Kulado.
func (r *FirewallRule) URN() *kulado.URNOutput {
	return r.s.URN()
}

// ID is this resource's unique identifier assigned by its provider.
func (r *FirewallRule) ID() *kulado.IDOutput {
	return r.s.ID()
}

// The highest IP address included in the range.
func (r *FirewallRule) EndIp() *kulado.StringOutput {
	return (*kulado.StringOutput)(r.s.State["endIp"])
}

// The name of the Firewall Rule. Changing this forces a new resource to be created.
func (r *FirewallRule) Name() *kulado.StringOutput {
	return (*kulado.StringOutput)(r.s.State["name"])
}

// The name of the Redis Cache. Changing this forces a new resource to be created.
func (r *FirewallRule) RedisCacheName() *kulado.StringOutput {
	return (*kulado.StringOutput)(r.s.State["redisCacheName"])
}

// The name of the resource group in which this Redis Cache exists.
func (r *FirewallRule) ResourceGroupName() *kulado.StringOutput {
	return (*kulado.StringOutput)(r.s.State["resourceGroupName"])
}

// The lowest IP address included in the range
func (r *FirewallRule) StartIp() *kulado.StringOutput {
	return (*kulado.StringOutput)(r.s.State["startIp"])
}

// Input properties used for looking up and filtering FirewallRule resources.
type FirewallRuleState struct {
	// The highest IP address included in the range.
	EndIp interface{}
	// The name of the Firewall Rule. Changing this forces a new resource to be created.
	Name interface{}
	// The name of the Redis Cache. Changing this forces a new resource to be created.
	RedisCacheName interface{}
	// The name of the resource group in which this Redis Cache exists.
	ResourceGroupName interface{}
	// The lowest IP address included in the range
	StartIp interface{}
}

// The set of arguments for constructing a FirewallRule resource.
type FirewallRuleArgs struct {
	// The highest IP address included in the range.
	EndIp interface{}
	// The name of the Firewall Rule. Changing this forces a new resource to be created.
	Name interface{}
	// The name of the Redis Cache. Changing this forces a new resource to be created.
	RedisCacheName interface{}
	// The name of the resource group in which this Redis Cache exists.
	ResourceGroupName interface{}
	// The lowest IP address included in the range
	StartIp interface{}
}
