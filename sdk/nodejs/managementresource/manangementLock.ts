// *** WARNING: this file was generated by the Kulado Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as kulado from "@kulado/kulado";
import * as utilities from "../utilities";

/**
 * Manages a Management Lock which is scoped to a Subscription, Resource Group or Resource.
 * 
 * ## Example Usage (Subscription Level Lock)
 * 
 * ```typescript
 * import * as kulado from "@kulado/kulado";
 * import * as azure from "@kulado/azure";
 * 
 * const current = kulado.output(azure.core.getSubscription({}));
 * const subscription_level = new azure.managementresource.ManangementLock("subscription-level", {
 *     lockLevel: "CanNotDelete",
 *     name: "subscription-level",
 *     notes: "Items can't be deleted in this subscription!",
 *     scope: current.id,
 * });
 * ```
 * 
 * ##Â Example Usage (Resource Group Level Lock)
 * 
 * ```typescript
 * import * as kulado from "@kulado/kulado";
 * import * as azure from "@kulado/azure";
 * 
 * const test = new azure.core.ResourceGroup("test", {
 *     location: "West Europe",
 *     name: "locked-resource-group",
 * });
 * const resource_group_level = new azure.managementresource.ManangementLock("resource-group-level", {
 *     lockLevel: "ReadOnly",
 *     name: "resource-group-level",
 *     notes: "This Resource Group is Read-Only",
 *     scope: test.id,
 * });
 * ```
 * 
 * ## Example Usage (Resource Level Lock)
 * 
 * ```typescript
 * import * as kulado from "@kulado/kulado";
 * import * as azure from "@kulado/azure";
 * 
 * const testResourceGroup = new azure.core.ResourceGroup("test", {
 *     location: "West Europe",
 *     name: "locked-resource-group",
 * });
 * const testPublicIp = new azure.network.PublicIp("test", {
 *     allocationMethod: "Static",
 *     idleTimeoutInMinutes: 30,
 *     location: testResourceGroup.location,
 *     name: "locked-publicip",
 *     resourceGroupName: testResourceGroup.name,
 * });
 * const public_ip = new azure.managementresource.ManangementLock("public-ip", {
 *     lockLevel: "CanNotDelete",
 *     name: "resource-ip",
 *     notes: "Locked because it's needed by a third-party",
 *     scope: testPublicIp.id,
 * });
 * ```
 *
 * > This content is derived from https://github.com/terraform-providers/terraform-provider-azurerm/blob/master/website/docs/r/management_lock.html.markdown.
 */
export class ManangementLock extends kulado.CustomResource {
    /**
     * Get an existing ManangementLock resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     */
    public static get(name: string, id: kulado.Input<kulado.ID>, state?: ManangementLockState, opts?: kulado.CustomResourceOptions): ManangementLock {
        return new ManangementLock(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __kuladoType = 'azure:managementresource/manangementLock:ManangementLock';

    /**
     * Returns true if the given object is an instance of ManangementLock.  This is designed to work even
     * when multiple copies of the Kulado SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ManangementLock {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__kuladoType'] === ManangementLock.__kuladoType;
    }

    /**
     * Specifies the Level to be used for this Lock. Possible values are `CanNotDelete` and `ReadOnly`. Changing this forces a new resource to be created.
     */
    public readonly lockLevel!: kulado.Output<string>;
    /**
     * Specifies the name of the Management Lock. Changing this forces a new resource to be created.
     */
    public readonly name!: kulado.Output<string>;
    /**
     * Specifies some notes about the lock. Maximum of 512 characters. Changing this forces a new resource to be created.
     */
    public readonly notes!: kulado.Output<string | undefined>;
    /**
     * Specifies the scope at which the Management Lock should be created. Changing this forces a new resource to be created.
     */
    public readonly scope!: kulado.Output<string>;

    /**
     * Create a ManangementLock resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ManangementLockArgs, opts?: kulado.CustomResourceOptions)
    constructor(name: string, argsOrState?: ManangementLockArgs | ManangementLockState, opts?: kulado.CustomResourceOptions) {
        let inputs: kulado.Inputs = {};
        if (opts && opts.id) {
            const state = argsOrState as ManangementLockState | undefined;
            inputs["lockLevel"] = state ? state.lockLevel : undefined;
            inputs["name"] = state ? state.name : undefined;
            inputs["notes"] = state ? state.notes : undefined;
            inputs["scope"] = state ? state.scope : undefined;
        } else {
            const args = argsOrState as ManangementLockArgs | undefined;
            if (!args || args.lockLevel === undefined) {
                throw new Error("Missing required property 'lockLevel'");
            }
            if (!args || args.scope === undefined) {
                throw new Error("Missing required property 'scope'");
            }
            inputs["lockLevel"] = args ? args.lockLevel : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["notes"] = args ? args.notes : undefined;
            inputs["scope"] = args ? args.scope : undefined;
        }
        super(ManangementLock.__kuladoType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ManangementLock resources.
 */
export interface ManangementLockState {
    /**
     * Specifies the Level to be used for this Lock. Possible values are `CanNotDelete` and `ReadOnly`. Changing this forces a new resource to be created.
     */
    readonly lockLevel?: kulado.Input<string>;
    /**
     * Specifies the name of the Management Lock. Changing this forces a new resource to be created.
     */
    readonly name?: kulado.Input<string>;
    /**
     * Specifies some notes about the lock. Maximum of 512 characters. Changing this forces a new resource to be created.
     */
    readonly notes?: kulado.Input<string>;
    /**
     * Specifies the scope at which the Management Lock should be created. Changing this forces a new resource to be created.
     */
    readonly scope?: kulado.Input<string>;
}

/**
 * The set of arguments for constructing a ManangementLock resource.
 */
export interface ManangementLockArgs {
    /**
     * Specifies the Level to be used for this Lock. Possible values are `CanNotDelete` and `ReadOnly`. Changing this forces a new resource to be created.
     */
    readonly lockLevel: kulado.Input<string>;
    /**
     * Specifies the name of the Management Lock. Changing this forces a new resource to be created.
     */
    readonly name?: kulado.Input<string>;
    /**
     * Specifies some notes about the lock. Maximum of 512 characters. Changing this forces a new resource to be created.
     */
    readonly notes?: kulado.Input<string>;
    /**
     * Specifies the scope at which the Management Lock should be created. Changing this forces a new resource to be created.
     */
    readonly scope: kulado.Input<string>;
}
