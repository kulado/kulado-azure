// *** WARNING: this file was generated by the Kulado Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as kulado from "@kulado/kulado";
import * as utilities from "../utilities";

/**
 * > This content is derived from https://github.com/terraform-providers/terraform-provider-azurerm/blob/master/website/docs/r/virtual_network.html.markdown.
 */
export class VirtualNetwork extends kulado.CustomResource {
    /**
     * Get an existing VirtualNetwork resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     */
    public static get(name: string, id: kulado.Input<kulado.ID>, state?: VirtualNetworkState, opts?: kulado.CustomResourceOptions): VirtualNetwork {
        return new VirtualNetwork(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __kuladoType = 'azure:network/virtualNetwork:VirtualNetwork';

    /**
     * Returns true if the given object is an instance of VirtualNetwork.  This is designed to work even
     * when multiple copies of the Kulado SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is VirtualNetwork {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__kuladoType'] === VirtualNetwork.__kuladoType;
    }

    /**
     * The address space that is used the virtual
     * network. You can supply more than one address space. Changing this forces
     * a new resource to be created.
     */
    public readonly addressSpaces!: kulado.Output<string[]>;
    /**
     * A `ddos_protection_plan` block as documented below.
     */
    public readonly ddosProtectionPlan!: kulado.Output<{ enable: boolean, id: string } | undefined>;
    /**
     * List of IP addresses of DNS servers
     */
    public readonly dnsServers!: kulado.Output<string[] | undefined>;
    /**
     * The location/region where the virtual network is
     * created. Changing this forces a new resource to be created.
     */
    public readonly location!: kulado.Output<string>;
    /**
     * The name of the virtual network. Changing this forces a
     * new resource to be created.
     */
    public readonly name!: kulado.Output<string>;
    /**
     * The name of the resource group in which to
     * create the virtual network.
     */
    public readonly resourceGroupName!: kulado.Output<string>;
    /**
     * Can be specified multiple times to define multiple
     * subnets. Each `subnet` block supports fields documented below.
     */
    public readonly subnets!: kulado.Output<{ addressPrefix: string, id: string, name: string, securityGroup?: string }[]>;
    /**
     * A mapping of tags to assign to the resource.
     */
    public readonly tags!: kulado.Output<{[key: string]: any}>;

    /**
     * Create a VirtualNetwork resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: VirtualNetworkArgs, opts?: kulado.CustomResourceOptions)
    constructor(name: string, argsOrState?: VirtualNetworkArgs | VirtualNetworkState, opts?: kulado.CustomResourceOptions) {
        let inputs: kulado.Inputs = {};
        if (opts && opts.id) {
            const state = argsOrState as VirtualNetworkState | undefined;
            inputs["addressSpaces"] = state ? state.addressSpaces : undefined;
            inputs["ddosProtectionPlan"] = state ? state.ddosProtectionPlan : undefined;
            inputs["dnsServers"] = state ? state.dnsServers : undefined;
            inputs["location"] = state ? state.location : undefined;
            inputs["name"] = state ? state.name : undefined;
            inputs["resourceGroupName"] = state ? state.resourceGroupName : undefined;
            inputs["subnets"] = state ? state.subnets : undefined;
            inputs["tags"] = state ? state.tags : undefined;
        } else {
            const args = argsOrState as VirtualNetworkArgs | undefined;
            if (!args || args.addressSpaces === undefined) {
                throw new Error("Missing required property 'addressSpaces'");
            }
            if (!args || args.resourceGroupName === undefined) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            inputs["addressSpaces"] = args ? args.addressSpaces : undefined;
            inputs["ddosProtectionPlan"] = args ? args.ddosProtectionPlan : undefined;
            inputs["dnsServers"] = args ? args.dnsServers : undefined;
            inputs["location"] = args ? args.location : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            inputs["subnets"] = args ? args.subnets : undefined;
            inputs["tags"] = args ? args.tags : undefined;
        }
        super(VirtualNetwork.__kuladoType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering VirtualNetwork resources.
 */
export interface VirtualNetworkState {
    /**
     * The address space that is used the virtual
     * network. You can supply more than one address space. Changing this forces
     * a new resource to be created.
     */
    readonly addressSpaces?: kulado.Input<kulado.Input<string>[]>;
    /**
     * A `ddos_protection_plan` block as documented below.
     */
    readonly ddosProtectionPlan?: kulado.Input<{ enable: kulado.Input<boolean>, id: kulado.Input<string> }>;
    /**
     * List of IP addresses of DNS servers
     */
    readonly dnsServers?: kulado.Input<kulado.Input<string>[]>;
    /**
     * The location/region where the virtual network is
     * created. Changing this forces a new resource to be created.
     */
    readonly location?: kulado.Input<string>;
    /**
     * The name of the virtual network. Changing this forces a
     * new resource to be created.
     */
    readonly name?: kulado.Input<string>;
    /**
     * The name of the resource group in which to
     * create the virtual network.
     */
    readonly resourceGroupName?: kulado.Input<string>;
    /**
     * Can be specified multiple times to define multiple
     * subnets. Each `subnet` block supports fields documented below.
     */
    readonly subnets?: kulado.Input<kulado.Input<{ addressPrefix: kulado.Input<string>, id?: kulado.Input<string>, name: kulado.Input<string>, securityGroup?: kulado.Input<string> }>[]>;
    /**
     * A mapping of tags to assign to the resource.
     */
    readonly tags?: kulado.Input<{[key: string]: any}>;
}

/**
 * The set of arguments for constructing a VirtualNetwork resource.
 */
export interface VirtualNetworkArgs {
    /**
     * The address space that is used the virtual
     * network. You can supply more than one address space. Changing this forces
     * a new resource to be created.
     */
    readonly addressSpaces: kulado.Input<kulado.Input<string>[]>;
    /**
     * A `ddos_protection_plan` block as documented below.
     */
    readonly ddosProtectionPlan?: kulado.Input<{ enable: kulado.Input<boolean>, id: kulado.Input<string> }>;
    /**
     * List of IP addresses of DNS servers
     */
    readonly dnsServers?: kulado.Input<kulado.Input<string>[]>;
    /**
     * The location/region where the virtual network is
     * created. Changing this forces a new resource to be created.
     */
    readonly location?: kulado.Input<string>;
    /**
     * The name of the virtual network. Changing this forces a
     * new resource to be created.
     */
    readonly name?: kulado.Input<string>;
    /**
     * The name of the resource group in which to
     * create the virtual network.
     */
    readonly resourceGroupName: kulado.Input<string>;
    /**
     * Can be specified multiple times to define multiple
     * subnets. Each `subnet` block supports fields documented below.
     */
    readonly subnets?: kulado.Input<kulado.Input<{ addressPrefix: kulado.Input<string>, id?: kulado.Input<string>, name: kulado.Input<string>, securityGroup?: kulado.Input<string> }>[]>;
    /**
     * A mapping of tags to assign to the resource.
     */
    readonly tags?: kulado.Input<{[key: string]: any}>;
}
