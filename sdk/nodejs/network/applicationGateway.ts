// *** WARNING: this file was generated by the Kulado Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as kulado from "@kulado/kulado";
import * as utilities from "../utilities";

/**
 * Manages an Application Gateway.
 * 
 * ## Example Usage
 * 
 * ```typescript
 * import * as kulado from "@kulado/kulado";
 * import * as azure from "@kulado/azure";
 * 
 * const testResourceGroup = new azure.core.ResourceGroup("test", {
 *     location: "West US",
 *     name: "example-resources",
 * });
 * const testVirtualNetwork = new azure.network.VirtualNetwork("test", {
 *     addressSpaces: ["10.254.0.0/16"],
 *     location: testResourceGroup.location,
 *     name: "example-network",
 *     resourceGroupName: testResourceGroup.name,
 * });
 * const backendAddressPoolName = kulado.interpolate`${testVirtualNetwork.name}-beap`;
 * const frontendIpConfigurationName = kulado.interpolate`${testVirtualNetwork.name}-feip`;
 * const frontendPortName = kulado.interpolate`${testVirtualNetwork.name}-feport`;
 * const httpSettingName = kulado.interpolate`${testVirtualNetwork.name}-be-htst`;
 * const listenerName = kulado.interpolate`${testVirtualNetwork.name}-httplstn`;
 * const redirectConfigurationName = kulado.interpolate`${testVirtualNetwork.name}-rdrcfg`;
 * const requestRoutingRuleName = kulado.interpolate`${testVirtualNetwork.name}-rqrt`;
 * const testPublicIp = new azure.network.PublicIp("test", {
 *     allocationMethod: "Dynamic",
 *     location: testResourceGroup.location,
 *     name: "example-pip",
 *     resourceGroupName: testResourceGroup.name,
 * });
 * const frontend = new azure.network.Subnet("frontend", {
 *     addressPrefix: "10.254.0.0/24",
 *     name: "frontend",
 *     resourceGroupName: testResourceGroup.name,
 *     virtualNetworkName: testVirtualNetwork.name,
 * });
 * const network = new azure.network.ApplicationGateway("network", {
 *     backendAddressPools: [{
 *         name: backendAddressPoolName,
 *     }],
 *     backendHttpSettings: [{
 *         cookieBasedAffinity: "Disabled",
 *         name: httpSettingName,
 *         path: "/path1/",
 *         port: 80,
 *         protocol: "Http",
 *         requestTimeout: 1,
 *     }],
 *     frontendIpConfigurations: [{
 *         name: frontendIpConfigurationName,
 *         publicIpAddressId: testPublicIp.id,
 *     }],
 *     frontendPorts: [{
 *         name: frontendPortName,
 *         port: 80,
 *     }],
 *     gatewayIpConfigurations: [{
 *         name: "my-gateway-ip-configuration",
 *         subnetId: frontend.id,
 *     }],
 *     httpListeners: [{
 *         frontendIpConfigurationName: frontendIpConfigurationName,
 *         frontendPortName: frontendPortName,
 *         name: listenerName,
 *         protocol: "Http",
 *     }],
 *     location: testResourceGroup.location,
 *     name: "example-appgateway",
 *     requestRoutingRules: [{
 *         backendAddressPoolName: backendAddressPoolName,
 *         backendHttpSettingsName: httpSettingName,
 *         httpListenerName: listenerName,
 *         name: requestRoutingRuleName,
 *         ruleType: "Basic",
 *     }],
 *     resourceGroupName: testResourceGroup.name,
 *     sku: {
 *         capacity: 2,
 *         name: "Standard_Small",
 *         tier: "Standard",
 *     },
 * });
 * const backend = new azure.network.Subnet("backend", {
 *     addressPrefix: "10.254.2.0/24",
 *     name: "backend",
 *     resourceGroupName: testResourceGroup.name,
 *     virtualNetworkName: testVirtualNetwork.name,
 * });
 * ```
 *
 * > This content is derived from https://github.com/terraform-providers/terraform-provider-azurerm/blob/master/website/docs/r/application_gateway.html.markdown.
 */
export class ApplicationGateway extends kulado.CustomResource {
    /**
     * Get an existing ApplicationGateway resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     */
    public static get(name: string, id: kulado.Input<kulado.ID>, state?: ApplicationGatewayState, opts?: kulado.CustomResourceOptions): ApplicationGateway {
        return new ApplicationGateway(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __kuladoType = 'azure:network/applicationGateway:ApplicationGateway';

    /**
     * Returns true if the given object is an instance of ApplicationGateway.  This is designed to work even
     * when multiple copies of the Kulado SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ApplicationGateway {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__kuladoType'] === ApplicationGateway.__kuladoType;
    }

    /**
     * One or more `authentication_certificate` blocks as defined below.
     */
    public readonly authenticationCertificates!: kulado.Output<{ data: string, id: string, name: string }[] | undefined>;
    /**
     * A `autoscale_configuration` block as defined below.
     */
    public readonly autoscaleConfiguration!: kulado.Output<{ maxCapacity?: number, minCapacity: number } | undefined>;
    /**
     * One or more `backend_address_pool` blocks as defined below.
     */
    public readonly backendAddressPools!: kulado.Output<{ fqdnLists: string[], fqdns: string[], id: string, ipAddressLists: string[], ipAddresses: string[], name: string }[]>;
    /**
     * One or more `backend_http_settings` blocks as defined below.
     */
    public readonly backendHttpSettings!: kulado.Output<{ affinityCookieName?: string, authenticationCertificates?: { id: string, name: string }[], connectionDraining?: { drainTimeoutSec: number, enabled: boolean }, cookieBasedAffinity: string, hostName?: string, id: string, name: string, path?: string, pickHostNameFromBackendAddress?: boolean, port: number, probeId: string, probeName?: string, protocol: string, requestTimeout?: number }[]>;
    /**
     * One or more `custom_error_configuration` blocks as defined below.
     */
    public readonly customErrorConfigurations!: kulado.Output<{ customErrorPageUrl: string, id: string, statusCode: string }[] | undefined>;
    /**
     * A list of SSL Protocols which should be disabled on this Application Gateway. Possible values are `TLSv1_0`, `TLSv1_1` and `TLSv1_2`.
     * > **NOTE:** `disabled_ssl_protocols ` has been deprecated in favour of `disabled_protocols` in the `ssl_policy` block.
     */
    public readonly disabledSslProtocols!: kulado.Output<string[]>;
    /**
     * Is HTTP2 enabled on the application gateway resource? Defaults to `false`.
     */
    public readonly enableHttp2!: kulado.Output<boolean | undefined>;
    /**
     * One or more `frontend_ip_configuration` blocks as defined below.
     */
    public readonly frontendIpConfigurations!: kulado.Output<{ id: string, name: string, privateIpAddress: string, privateIpAddressAllocation: string, publicIpAddressId: string, subnetId: string }[]>;
    /**
     * One or more `frontend_port` blocks as defined below.
     */
    public readonly frontendPorts!: kulado.Output<{ id: string, name: string, port: number }[]>;
    /**
     * One or more `gateway_ip_configuration` blocks as defined below.
     */
    public readonly gatewayIpConfigurations!: kulado.Output<{ id: string, name: string, subnetId: string }[]>;
    /**
     * One or more `http_listener` blocks as defined below.
     */
    public readonly httpListeners!: kulado.Output<{ customErrorConfigurations?: { customErrorPageUrl: string, id: string, statusCode: string }[], frontendIpConfigurationId: string, frontendIpConfigurationName: string, frontendPortId: string, frontendPortName: string, hostName?: string, id: string, name: string, protocol: string, requireSni?: boolean, sslCertificateId: string, sslCertificateName?: string }[]>;
    /**
     * The Azure region where the Application Gateway should exist. Changing this forces a new resource to be created.
     */
    public readonly location!: kulado.Output<string>;
    /**
     * The name of the Application Gateway. Changing this forces a new resource to be created.
     */
    public readonly name!: kulado.Output<string>;
    /**
     * One or more `probe` blocks as defined below.
     */
    public readonly probes!: kulado.Output<{ host?: string, id: string, interval: number, match: { body?: string, statusCodes?: string[] }, minimumServers?: number, name: string, path: string, pickHostNameFromBackendHttpSettings?: boolean, protocol: string, timeout: number, unhealthyThreshold: number }[] | undefined>;
    /**
     * A `redirect_configuration` block as defined below.
     */
    public readonly redirectConfigurations!: kulado.Output<{ id: string, includePath?: boolean, includeQueryString?: boolean, name: string, redirectType: string, targetListenerId: string, targetListenerName?: string, targetUrl?: string }[] | undefined>;
    /**
     * One or more `request_routing_rule` blocks as defined below.
     */
    public readonly requestRoutingRules!: kulado.Output<{ backendAddressPoolId: string, backendAddressPoolName?: string, backendHttpSettingsId: string, backendHttpSettingsName?: string, httpListenerId: string, httpListenerName: string, id: string, name: string, redirectConfigurationId: string, redirectConfigurationName?: string, rewriteRuleSetId: string, rewriteRuleSetName?: string, ruleType: string, urlPathMapId: string, urlPathMapName?: string }[]>;
    /**
     * The name of the resource group in which to the Application Gateway should exist. Changing this forces a new resource to be created.
     */
    public readonly resourceGroupName!: kulado.Output<string>;
    /**
     * One or more `rewrite_rule_set` blocks as defined below. Only valid for v2 SKUs.
     */
    public readonly rewriteRuleSets!: kulado.Output<{ id: string, name: string, rewriteRules?: { conditions?: { ignoreCase?: boolean, negate?: boolean, pattern: string, variable: string }[], name: string, requestHeaderConfigurations?: { headerName: string, headerValue: string }[], responseHeaderConfigurations?: { headerName: string, headerValue: string }[], ruleSequence: number }[] }[] | undefined>;
    /**
     * A `sku` block as defined below.
     */
    public readonly sku!: kulado.Output<{ capacity?: number, name: string, tier: string }>;
    /**
     * One or more `ssl_certificate` blocks as defined below.
     */
    public readonly sslCertificates!: kulado.Output<{ data: string, id: string, name: string, password: string, publicCertData: string }[] | undefined>;
    /**
     * a `ssl policy` block as defined below.
     */
    public readonly sslPolicies!: kulado.Output<{ cipherSuites?: string[], disabledProtocols: string[], minProtocolVersion?: string, policyName?: string, policyType?: string }[]>;
    /**
     * A mapping of tags to assign to the resource.
     */
    public readonly tags!: kulado.Output<{[key: string]: any}>;
    /**
     * One or more `url_path_map` blocks as defined below.
     */
    public readonly urlPathMaps!: kulado.Output<{ defaultBackendAddressPoolId: string, defaultBackendAddressPoolName?: string, defaultBackendHttpSettingsId: string, defaultBackendHttpSettingsName?: string, defaultRedirectConfigurationId: string, defaultRedirectConfigurationName?: string, defaultRewriteRuleSetId: string, defaultRewriteRuleSetName?: string, id: string, name: string, pathRules: { backendAddressPoolId: string, backendAddressPoolName?: string, backendHttpSettingsId: string, backendHttpSettingsName?: string, id: string, name: string, paths: string[], redirectConfigurationId: string, redirectConfigurationName?: string, rewriteRuleSetId: string, rewriteRuleSetName?: string }[] }[] | undefined>;
    /**
     * A `waf_configuration` block as defined below.
     */
    public readonly wafConfiguration!: kulado.Output<{ disabledRuleGroups?: { ruleGroupName: string, rules?: number[] }[], enabled: boolean, exclusions?: { matchVariable: string, selector?: string, selectorMatchOperator?: string }[], fileUploadLimitMb?: number, firewallMode: string, maxRequestBodySizeKb?: number, requestBodyCheck?: boolean, ruleSetType?: string, ruleSetVersion: string } | undefined>;
    /**
     * A collection of availability zones to spread the Application Gateway over.
     */
    public readonly zones!: kulado.Output<string[] | undefined>;

    /**
     * Create a ApplicationGateway resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ApplicationGatewayArgs, opts?: kulado.CustomResourceOptions)
    constructor(name: string, argsOrState?: ApplicationGatewayArgs | ApplicationGatewayState, opts?: kulado.CustomResourceOptions) {
        let inputs: kulado.Inputs = {};
        if (opts && opts.id) {
            const state = argsOrState as ApplicationGatewayState | undefined;
            inputs["authenticationCertificates"] = state ? state.authenticationCertificates : undefined;
            inputs["autoscaleConfiguration"] = state ? state.autoscaleConfiguration : undefined;
            inputs["backendAddressPools"] = state ? state.backendAddressPools : undefined;
            inputs["backendHttpSettings"] = state ? state.backendHttpSettings : undefined;
            inputs["customErrorConfigurations"] = state ? state.customErrorConfigurations : undefined;
            inputs["disabledSslProtocols"] = state ? state.disabledSslProtocols : undefined;
            inputs["enableHttp2"] = state ? state.enableHttp2 : undefined;
            inputs["frontendIpConfigurations"] = state ? state.frontendIpConfigurations : undefined;
            inputs["frontendPorts"] = state ? state.frontendPorts : undefined;
            inputs["gatewayIpConfigurations"] = state ? state.gatewayIpConfigurations : undefined;
            inputs["httpListeners"] = state ? state.httpListeners : undefined;
            inputs["location"] = state ? state.location : undefined;
            inputs["name"] = state ? state.name : undefined;
            inputs["probes"] = state ? state.probes : undefined;
            inputs["redirectConfigurations"] = state ? state.redirectConfigurations : undefined;
            inputs["requestRoutingRules"] = state ? state.requestRoutingRules : undefined;
            inputs["resourceGroupName"] = state ? state.resourceGroupName : undefined;
            inputs["rewriteRuleSets"] = state ? state.rewriteRuleSets : undefined;
            inputs["sku"] = state ? state.sku : undefined;
            inputs["sslCertificates"] = state ? state.sslCertificates : undefined;
            inputs["sslPolicies"] = state ? state.sslPolicies : undefined;
            inputs["tags"] = state ? state.tags : undefined;
            inputs["urlPathMaps"] = state ? state.urlPathMaps : undefined;
            inputs["wafConfiguration"] = state ? state.wafConfiguration : undefined;
            inputs["zones"] = state ? state.zones : undefined;
        } else {
            const args = argsOrState as ApplicationGatewayArgs | undefined;
            if (!args || args.backendAddressPools === undefined) {
                throw new Error("Missing required property 'backendAddressPools'");
            }
            if (!args || args.backendHttpSettings === undefined) {
                throw new Error("Missing required property 'backendHttpSettings'");
            }
            if (!args || args.frontendIpConfigurations === undefined) {
                throw new Error("Missing required property 'frontendIpConfigurations'");
            }
            if (!args || args.frontendPorts === undefined) {
                throw new Error("Missing required property 'frontendPorts'");
            }
            if (!args || args.gatewayIpConfigurations === undefined) {
                throw new Error("Missing required property 'gatewayIpConfigurations'");
            }
            if (!args || args.httpListeners === undefined) {
                throw new Error("Missing required property 'httpListeners'");
            }
            if (!args || args.requestRoutingRules === undefined) {
                throw new Error("Missing required property 'requestRoutingRules'");
            }
            if (!args || args.resourceGroupName === undefined) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            if (!args || args.sku === undefined) {
                throw new Error("Missing required property 'sku'");
            }
            inputs["authenticationCertificates"] = args ? args.authenticationCertificates : undefined;
            inputs["autoscaleConfiguration"] = args ? args.autoscaleConfiguration : undefined;
            inputs["backendAddressPools"] = args ? args.backendAddressPools : undefined;
            inputs["backendHttpSettings"] = args ? args.backendHttpSettings : undefined;
            inputs["customErrorConfigurations"] = args ? args.customErrorConfigurations : undefined;
            inputs["disabledSslProtocols"] = args ? args.disabledSslProtocols : undefined;
            inputs["enableHttp2"] = args ? args.enableHttp2 : undefined;
            inputs["frontendIpConfigurations"] = args ? args.frontendIpConfigurations : undefined;
            inputs["frontendPorts"] = args ? args.frontendPorts : undefined;
            inputs["gatewayIpConfigurations"] = args ? args.gatewayIpConfigurations : undefined;
            inputs["httpListeners"] = args ? args.httpListeners : undefined;
            inputs["location"] = args ? args.location : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["probes"] = args ? args.probes : undefined;
            inputs["redirectConfigurations"] = args ? args.redirectConfigurations : undefined;
            inputs["requestRoutingRules"] = args ? args.requestRoutingRules : undefined;
            inputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            inputs["rewriteRuleSets"] = args ? args.rewriteRuleSets : undefined;
            inputs["sku"] = args ? args.sku : undefined;
            inputs["sslCertificates"] = args ? args.sslCertificates : undefined;
            inputs["sslPolicies"] = args ? args.sslPolicies : undefined;
            inputs["tags"] = args ? args.tags : undefined;
            inputs["urlPathMaps"] = args ? args.urlPathMaps : undefined;
            inputs["wafConfiguration"] = args ? args.wafConfiguration : undefined;
            inputs["zones"] = args ? args.zones : undefined;
        }
        super(ApplicationGateway.__kuladoType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ApplicationGateway resources.
 */
export interface ApplicationGatewayState {
    /**
     * One or more `authentication_certificate` blocks as defined below.
     */
    readonly authenticationCertificates?: kulado.Input<kulado.Input<{ data: kulado.Input<string>, id?: kulado.Input<string>, name: kulado.Input<string> }>[]>;
    /**
     * A `autoscale_configuration` block as defined below.
     */
    readonly autoscaleConfiguration?: kulado.Input<{ maxCapacity?: kulado.Input<number>, minCapacity: kulado.Input<number> }>;
    /**
     * One or more `backend_address_pool` blocks as defined below.
     */
    readonly backendAddressPools?: kulado.Input<kulado.Input<{ fqdnLists?: kulado.Input<kulado.Input<string>[]>, fqdns?: kulado.Input<kulado.Input<string>[]>, id?: kulado.Input<string>, ipAddressLists?: kulado.Input<kulado.Input<string>[]>, ipAddresses?: kulado.Input<kulado.Input<string>[]>, name: kulado.Input<string> }>[]>;
    /**
     * One or more `backend_http_settings` blocks as defined below.
     */
    readonly backendHttpSettings?: kulado.Input<kulado.Input<{ affinityCookieName?: kulado.Input<string>, authenticationCertificates?: kulado.Input<kulado.Input<{ id?: kulado.Input<string>, name: kulado.Input<string> }>[]>, connectionDraining?: kulado.Input<{ drainTimeoutSec: kulado.Input<number>, enabled: kulado.Input<boolean> }>, cookieBasedAffinity: kulado.Input<string>, hostName?: kulado.Input<string>, id?: kulado.Input<string>, name: kulado.Input<string>, path?: kulado.Input<string>, pickHostNameFromBackendAddress?: kulado.Input<boolean>, port: kulado.Input<number>, probeId?: kulado.Input<string>, probeName?: kulado.Input<string>, protocol: kulado.Input<string>, requestTimeout?: kulado.Input<number> }>[]>;
    /**
     * One or more `custom_error_configuration` blocks as defined below.
     */
    readonly customErrorConfigurations?: kulado.Input<kulado.Input<{ customErrorPageUrl: kulado.Input<string>, id?: kulado.Input<string>, statusCode: kulado.Input<string> }>[]>;
    /**
     * A list of SSL Protocols which should be disabled on this Application Gateway. Possible values are `TLSv1_0`, `TLSv1_1` and `TLSv1_2`.
     * > **NOTE:** `disabled_ssl_protocols ` has been deprecated in favour of `disabled_protocols` in the `ssl_policy` block.
     */
    readonly disabledSslProtocols?: kulado.Input<kulado.Input<string>[]>;
    /**
     * Is HTTP2 enabled on the application gateway resource? Defaults to `false`.
     */
    readonly enableHttp2?: kulado.Input<boolean>;
    /**
     * One or more `frontend_ip_configuration` blocks as defined below.
     */
    readonly frontendIpConfigurations?: kulado.Input<kulado.Input<{ id?: kulado.Input<string>, name: kulado.Input<string>, privateIpAddress?: kulado.Input<string>, privateIpAddressAllocation?: kulado.Input<string>, publicIpAddressId?: kulado.Input<string>, subnetId?: kulado.Input<string> }>[]>;
    /**
     * One or more `frontend_port` blocks as defined below.
     */
    readonly frontendPorts?: kulado.Input<kulado.Input<{ id?: kulado.Input<string>, name: kulado.Input<string>, port: kulado.Input<number> }>[]>;
    /**
     * One or more `gateway_ip_configuration` blocks as defined below.
     */
    readonly gatewayIpConfigurations?: kulado.Input<kulado.Input<{ id?: kulado.Input<string>, name: kulado.Input<string>, subnetId: kulado.Input<string> }>[]>;
    /**
     * One or more `http_listener` blocks as defined below.
     */
    readonly httpListeners?: kulado.Input<kulado.Input<{ customErrorConfigurations?: kulado.Input<kulado.Input<{ customErrorPageUrl: kulado.Input<string>, id?: kulado.Input<string>, statusCode: kulado.Input<string> }>[]>, frontendIpConfigurationId?: kulado.Input<string>, frontendIpConfigurationName: kulado.Input<string>, frontendPortId?: kulado.Input<string>, frontendPortName: kulado.Input<string>, hostName?: kulado.Input<string>, id?: kulado.Input<string>, name: kulado.Input<string>, protocol: kulado.Input<string>, requireSni?: kulado.Input<boolean>, sslCertificateId?: kulado.Input<string>, sslCertificateName?: kulado.Input<string> }>[]>;
    /**
     * The Azure region where the Application Gateway should exist. Changing this forces a new resource to be created.
     */
    readonly location?: kulado.Input<string>;
    /**
     * The name of the Application Gateway. Changing this forces a new resource to be created.
     */
    readonly name?: kulado.Input<string>;
    /**
     * One or more `probe` blocks as defined below.
     */
    readonly probes?: kulado.Input<kulado.Input<{ host?: kulado.Input<string>, id?: kulado.Input<string>, interval: kulado.Input<number>, match?: kulado.Input<{ body?: kulado.Input<string>, statusCodes?: kulado.Input<kulado.Input<string>[]> }>, minimumServers?: kulado.Input<number>, name: kulado.Input<string>, path: kulado.Input<string>, pickHostNameFromBackendHttpSettings?: kulado.Input<boolean>, protocol: kulado.Input<string>, timeout: kulado.Input<number>, unhealthyThreshold: kulado.Input<number> }>[]>;
    /**
     * A `redirect_configuration` block as defined below.
     */
    readonly redirectConfigurations?: kulado.Input<kulado.Input<{ id?: kulado.Input<string>, includePath?: kulado.Input<boolean>, includeQueryString?: kulado.Input<boolean>, name: kulado.Input<string>, redirectType: kulado.Input<string>, targetListenerId?: kulado.Input<string>, targetListenerName?: kulado.Input<string>, targetUrl?: kulado.Input<string> }>[]>;
    /**
     * One or more `request_routing_rule` blocks as defined below.
     */
    readonly requestRoutingRules?: kulado.Input<kulado.Input<{ backendAddressPoolId?: kulado.Input<string>, backendAddressPoolName?: kulado.Input<string>, backendHttpSettingsId?: kulado.Input<string>, backendHttpSettingsName?: kulado.Input<string>, httpListenerId?: kulado.Input<string>, httpListenerName: kulado.Input<string>, id?: kulado.Input<string>, name: kulado.Input<string>, redirectConfigurationId?: kulado.Input<string>, redirectConfigurationName?: kulado.Input<string>, rewriteRuleSetId?: kulado.Input<string>, rewriteRuleSetName?: kulado.Input<string>, ruleType: kulado.Input<string>, urlPathMapId?: kulado.Input<string>, urlPathMapName?: kulado.Input<string> }>[]>;
    /**
     * The name of the resource group in which to the Application Gateway should exist. Changing this forces a new resource to be created.
     */
    readonly resourceGroupName?: kulado.Input<string>;
    /**
     * One or more `rewrite_rule_set` blocks as defined below. Only valid for v2 SKUs.
     */
    readonly rewriteRuleSets?: kulado.Input<kulado.Input<{ id?: kulado.Input<string>, name: kulado.Input<string>, rewriteRules?: kulado.Input<kulado.Input<{ conditions?: kulado.Input<kulado.Input<{ ignoreCase?: kulado.Input<boolean>, negate?: kulado.Input<boolean>, pattern: kulado.Input<string>, variable: kulado.Input<string> }>[]>, name: kulado.Input<string>, requestHeaderConfigurations?: kulado.Input<kulado.Input<{ headerName: kulado.Input<string>, headerValue: kulado.Input<string> }>[]>, responseHeaderConfigurations?: kulado.Input<kulado.Input<{ headerName: kulado.Input<string>, headerValue: kulado.Input<string> }>[]>, ruleSequence: kulado.Input<number> }>[]> }>[]>;
    /**
     * A `sku` block as defined below.
     */
    readonly sku?: kulado.Input<{ capacity?: kulado.Input<number>, name: kulado.Input<string>, tier: kulado.Input<string> }>;
    /**
     * One or more `ssl_certificate` blocks as defined below.
     */
    readonly sslCertificates?: kulado.Input<kulado.Input<{ data: kulado.Input<string>, id?: kulado.Input<string>, name: kulado.Input<string>, password: kulado.Input<string>, publicCertData?: kulado.Input<string> }>[]>;
    /**
     * a `ssl policy` block as defined below.
     */
    readonly sslPolicies?: kulado.Input<kulado.Input<{ cipherSuites?: kulado.Input<kulado.Input<string>[]>, disabledProtocols?: kulado.Input<kulado.Input<string>[]>, minProtocolVersion?: kulado.Input<string>, policyName?: kulado.Input<string>, policyType?: kulado.Input<string> }>[]>;
    /**
     * A mapping of tags to assign to the resource.
     */
    readonly tags?: kulado.Input<{[key: string]: any}>;
    /**
     * One or more `url_path_map` blocks as defined below.
     */
    readonly urlPathMaps?: kulado.Input<kulado.Input<{ defaultBackendAddressPoolId?: kulado.Input<string>, defaultBackendAddressPoolName?: kulado.Input<string>, defaultBackendHttpSettingsId?: kulado.Input<string>, defaultBackendHttpSettingsName?: kulado.Input<string>, defaultRedirectConfigurationId?: kulado.Input<string>, defaultRedirectConfigurationName?: kulado.Input<string>, defaultRewriteRuleSetId?: kulado.Input<string>, defaultRewriteRuleSetName?: kulado.Input<string>, id?: kulado.Input<string>, name: kulado.Input<string>, pathRules: kulado.Input<kulado.Input<{ backendAddressPoolId?: kulado.Input<string>, backendAddressPoolName?: kulado.Input<string>, backendHttpSettingsId?: kulado.Input<string>, backendHttpSettingsName?: kulado.Input<string>, id?: kulado.Input<string>, name: kulado.Input<string>, paths: kulado.Input<kulado.Input<string>[]>, redirectConfigurationId?: kulado.Input<string>, redirectConfigurationName?: kulado.Input<string>, rewriteRuleSetId?: kulado.Input<string>, rewriteRuleSetName?: kulado.Input<string> }>[]> }>[]>;
    /**
     * A `waf_configuration` block as defined below.
     */
    readonly wafConfiguration?: kulado.Input<{ disabledRuleGroups?: kulado.Input<kulado.Input<{ ruleGroupName: kulado.Input<string>, rules?: kulado.Input<kulado.Input<number>[]> }>[]>, enabled: kulado.Input<boolean>, exclusions?: kulado.Input<kulado.Input<{ matchVariable: kulado.Input<string>, selector?: kulado.Input<string>, selectorMatchOperator?: kulado.Input<string> }>[]>, fileUploadLimitMb?: kulado.Input<number>, firewallMode: kulado.Input<string>, maxRequestBodySizeKb?: kulado.Input<number>, requestBodyCheck?: kulado.Input<boolean>, ruleSetType?: kulado.Input<string>, ruleSetVersion: kulado.Input<string> }>;
    /**
     * A collection of availability zones to spread the Application Gateway over.
     */
    readonly zones?: kulado.Input<kulado.Input<string>[]>;
}

/**
 * The set of arguments for constructing a ApplicationGateway resource.
 */
export interface ApplicationGatewayArgs {
    /**
     * One or more `authentication_certificate` blocks as defined below.
     */
    readonly authenticationCertificates?: kulado.Input<kulado.Input<{ data: kulado.Input<string>, id?: kulado.Input<string>, name: kulado.Input<string> }>[]>;
    /**
     * A `autoscale_configuration` block as defined below.
     */
    readonly autoscaleConfiguration?: kulado.Input<{ maxCapacity?: kulado.Input<number>, minCapacity: kulado.Input<number> }>;
    /**
     * One or more `backend_address_pool` blocks as defined below.
     */
    readonly backendAddressPools: kulado.Input<kulado.Input<{ fqdnLists?: kulado.Input<kulado.Input<string>[]>, fqdns?: kulado.Input<kulado.Input<string>[]>, id?: kulado.Input<string>, ipAddressLists?: kulado.Input<kulado.Input<string>[]>, ipAddresses?: kulado.Input<kulado.Input<string>[]>, name: kulado.Input<string> }>[]>;
    /**
     * One or more `backend_http_settings` blocks as defined below.
     */
    readonly backendHttpSettings: kulado.Input<kulado.Input<{ affinityCookieName?: kulado.Input<string>, authenticationCertificates?: kulado.Input<kulado.Input<{ id?: kulado.Input<string>, name: kulado.Input<string> }>[]>, connectionDraining?: kulado.Input<{ drainTimeoutSec: kulado.Input<number>, enabled: kulado.Input<boolean> }>, cookieBasedAffinity: kulado.Input<string>, hostName?: kulado.Input<string>, id?: kulado.Input<string>, name: kulado.Input<string>, path?: kulado.Input<string>, pickHostNameFromBackendAddress?: kulado.Input<boolean>, port: kulado.Input<number>, probeId?: kulado.Input<string>, probeName?: kulado.Input<string>, protocol: kulado.Input<string>, requestTimeout?: kulado.Input<number> }>[]>;
    /**
     * One or more `custom_error_configuration` blocks as defined below.
     */
    readonly customErrorConfigurations?: kulado.Input<kulado.Input<{ customErrorPageUrl: kulado.Input<string>, id?: kulado.Input<string>, statusCode: kulado.Input<string> }>[]>;
    /**
     * A list of SSL Protocols which should be disabled on this Application Gateway. Possible values are `TLSv1_0`, `TLSv1_1` and `TLSv1_2`.
     * > **NOTE:** `disabled_ssl_protocols ` has been deprecated in favour of `disabled_protocols` in the `ssl_policy` block.
     */
    readonly disabledSslProtocols?: kulado.Input<kulado.Input<string>[]>;
    /**
     * Is HTTP2 enabled on the application gateway resource? Defaults to `false`.
     */
    readonly enableHttp2?: kulado.Input<boolean>;
    /**
     * One or more `frontend_ip_configuration` blocks as defined below.
     */
    readonly frontendIpConfigurations: kulado.Input<kulado.Input<{ id?: kulado.Input<string>, name: kulado.Input<string>, privateIpAddress?: kulado.Input<string>, privateIpAddressAllocation?: kulado.Input<string>, publicIpAddressId?: kulado.Input<string>, subnetId?: kulado.Input<string> }>[]>;
    /**
     * One or more `frontend_port` blocks as defined below.
     */
    readonly frontendPorts: kulado.Input<kulado.Input<{ id?: kulado.Input<string>, name: kulado.Input<string>, port: kulado.Input<number> }>[]>;
    /**
     * One or more `gateway_ip_configuration` blocks as defined below.
     */
    readonly gatewayIpConfigurations: kulado.Input<kulado.Input<{ id?: kulado.Input<string>, name: kulado.Input<string>, subnetId: kulado.Input<string> }>[]>;
    /**
     * One or more `http_listener` blocks as defined below.
     */
    readonly httpListeners: kulado.Input<kulado.Input<{ customErrorConfigurations?: kulado.Input<kulado.Input<{ customErrorPageUrl: kulado.Input<string>, id?: kulado.Input<string>, statusCode: kulado.Input<string> }>[]>, frontendIpConfigurationId?: kulado.Input<string>, frontendIpConfigurationName: kulado.Input<string>, frontendPortId?: kulado.Input<string>, frontendPortName: kulado.Input<string>, hostName?: kulado.Input<string>, id?: kulado.Input<string>, name: kulado.Input<string>, protocol: kulado.Input<string>, requireSni?: kulado.Input<boolean>, sslCertificateId?: kulado.Input<string>, sslCertificateName?: kulado.Input<string> }>[]>;
    /**
     * The Azure region where the Application Gateway should exist. Changing this forces a new resource to be created.
     */
    readonly location?: kulado.Input<string>;
    /**
     * The name of the Application Gateway. Changing this forces a new resource to be created.
     */
    readonly name?: kulado.Input<string>;
    /**
     * One or more `probe` blocks as defined below.
     */
    readonly probes?: kulado.Input<kulado.Input<{ host?: kulado.Input<string>, id?: kulado.Input<string>, interval: kulado.Input<number>, match?: kulado.Input<{ body?: kulado.Input<string>, statusCodes?: kulado.Input<kulado.Input<string>[]> }>, minimumServers?: kulado.Input<number>, name: kulado.Input<string>, path: kulado.Input<string>, pickHostNameFromBackendHttpSettings?: kulado.Input<boolean>, protocol: kulado.Input<string>, timeout: kulado.Input<number>, unhealthyThreshold: kulado.Input<number> }>[]>;
    /**
     * A `redirect_configuration` block as defined below.
     */
    readonly redirectConfigurations?: kulado.Input<kulado.Input<{ id?: kulado.Input<string>, includePath?: kulado.Input<boolean>, includeQueryString?: kulado.Input<boolean>, name: kulado.Input<string>, redirectType: kulado.Input<string>, targetListenerId?: kulado.Input<string>, targetListenerName?: kulado.Input<string>, targetUrl?: kulado.Input<string> }>[]>;
    /**
     * One or more `request_routing_rule` blocks as defined below.
     */
    readonly requestRoutingRules: kulado.Input<kulado.Input<{ backendAddressPoolId?: kulado.Input<string>, backendAddressPoolName?: kulado.Input<string>, backendHttpSettingsId?: kulado.Input<string>, backendHttpSettingsName?: kulado.Input<string>, httpListenerId?: kulado.Input<string>, httpListenerName: kulado.Input<string>, id?: kulado.Input<string>, name: kulado.Input<string>, redirectConfigurationId?: kulado.Input<string>, redirectConfigurationName?: kulado.Input<string>, rewriteRuleSetId?: kulado.Input<string>, rewriteRuleSetName?: kulado.Input<string>, ruleType: kulado.Input<string>, urlPathMapId?: kulado.Input<string>, urlPathMapName?: kulado.Input<string> }>[]>;
    /**
     * The name of the resource group in which to the Application Gateway should exist. Changing this forces a new resource to be created.
     */
    readonly resourceGroupName: kulado.Input<string>;
    /**
     * One or more `rewrite_rule_set` blocks as defined below. Only valid for v2 SKUs.
     */
    readonly rewriteRuleSets?: kulado.Input<kulado.Input<{ id?: kulado.Input<string>, name: kulado.Input<string>, rewriteRules?: kulado.Input<kulado.Input<{ conditions?: kulado.Input<kulado.Input<{ ignoreCase?: kulado.Input<boolean>, negate?: kulado.Input<boolean>, pattern: kulado.Input<string>, variable: kulado.Input<string> }>[]>, name: kulado.Input<string>, requestHeaderConfigurations?: kulado.Input<kulado.Input<{ headerName: kulado.Input<string>, headerValue: kulado.Input<string> }>[]>, responseHeaderConfigurations?: kulado.Input<kulado.Input<{ headerName: kulado.Input<string>, headerValue: kulado.Input<string> }>[]>, ruleSequence: kulado.Input<number> }>[]> }>[]>;
    /**
     * A `sku` block as defined below.
     */
    readonly sku: kulado.Input<{ capacity?: kulado.Input<number>, name: kulado.Input<string>, tier: kulado.Input<string> }>;
    /**
     * One or more `ssl_certificate` blocks as defined below.
     */
    readonly sslCertificates?: kulado.Input<kulado.Input<{ data: kulado.Input<string>, id?: kulado.Input<string>, name: kulado.Input<string>, password: kulado.Input<string>, publicCertData?: kulado.Input<string> }>[]>;
    /**
     * a `ssl policy` block as defined below.
     */
    readonly sslPolicies?: kulado.Input<kulado.Input<{ cipherSuites?: kulado.Input<kulado.Input<string>[]>, disabledProtocols?: kulado.Input<kulado.Input<string>[]>, minProtocolVersion?: kulado.Input<string>, policyName?: kulado.Input<string>, policyType?: kulado.Input<string> }>[]>;
    /**
     * A mapping of tags to assign to the resource.
     */
    readonly tags?: kulado.Input<{[key: string]: any}>;
    /**
     * One or more `url_path_map` blocks as defined below.
     */
    readonly urlPathMaps?: kulado.Input<kulado.Input<{ defaultBackendAddressPoolId?: kulado.Input<string>, defaultBackendAddressPoolName?: kulado.Input<string>, defaultBackendHttpSettingsId?: kulado.Input<string>, defaultBackendHttpSettingsName?: kulado.Input<string>, defaultRedirectConfigurationId?: kulado.Input<string>, defaultRedirectConfigurationName?: kulado.Input<string>, defaultRewriteRuleSetId?: kulado.Input<string>, defaultRewriteRuleSetName?: kulado.Input<string>, id?: kulado.Input<string>, name: kulado.Input<string>, pathRules: kulado.Input<kulado.Input<{ backendAddressPoolId?: kulado.Input<string>, backendAddressPoolName?: kulado.Input<string>, backendHttpSettingsId?: kulado.Input<string>, backendHttpSettingsName?: kulado.Input<string>, id?: kulado.Input<string>, name: kulado.Input<string>, paths: kulado.Input<kulado.Input<string>[]>, redirectConfigurationId?: kulado.Input<string>, redirectConfigurationName?: kulado.Input<string>, rewriteRuleSetId?: kulado.Input<string>, rewriteRuleSetName?: kulado.Input<string> }>[]> }>[]>;
    /**
     * A `waf_configuration` block as defined below.
     */
    readonly wafConfiguration?: kulado.Input<{ disabledRuleGroups?: kulado.Input<kulado.Input<{ ruleGroupName: kulado.Input<string>, rules?: kulado.Input<kulado.Input<number>[]> }>[]>, enabled: kulado.Input<boolean>, exclusions?: kulado.Input<kulado.Input<{ matchVariable: kulado.Input<string>, selector?: kulado.Input<string>, selectorMatchOperator?: kulado.Input<string> }>[]>, fileUploadLimitMb?: kulado.Input<number>, firewallMode: kulado.Input<string>, maxRequestBodySizeKb?: kulado.Input<number>, requestBodyCheck?: kulado.Input<boolean>, ruleSetType?: kulado.Input<string>, ruleSetVersion: kulado.Input<string> }>;
    /**
     * A collection of availability zones to spread the Application Gateway over.
     */
    readonly zones?: kulado.Input<kulado.Input<string>[]>;
}
