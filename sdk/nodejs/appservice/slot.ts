// *** WARNING: this file was generated by the Kulado Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as kulado from "@kulado/kulado";
import * as utilities from "../utilities";

/**
 * Manages an App Service Slot (within an App Service).
 * 
 * > **Note:** When using Slots - the `app_settings`, `connection_string` and `site_config` blocks on the `azurerm_app_service` resource will be overwritten when promoting a Slot using the `azurerm_app_service_active_slot` resource.
 * 
 * 
 * ## Example Usage (.net 4.x)
 * 
 * ```typescript
 * import * as kulado from "@kulado/kulado";
 * import * as azure from "@kulado/azure";
 * import * as random from "@kulado/random";
 * 
 * const testResourceGroup = new azure.core.ResourceGroup("test", {
 *     location: "West Europe",
 *     name: "some-resource-group",
 * });
 * const server = new random.RandomId("server", {
 *     byteLength: 8,
 *     keepers: {
 *         azi_id: 1,
 *     },
 * });
 * const testPlan = new azure.appservice.Plan("test", {
 *     location: testResourceGroup.location,
 *     name: "some-app-service-plan",
 *     resourceGroupName: testResourceGroup.name,
 *     sku: {
 *         size: "S1",
 *         tier: "Standard",
 *     },
 * });
 * const testAppService = new azure.appservice.AppService("test", {
 *     appServicePlanId: testPlan.id,
 *     appSettings: {
 *         SOME_KEY: "some-value",
 *     },
 *     connectionStrings: [{
 *         name: "Database",
 *         type: "SQLServer",
 *         value: "Server=some-server.mydomain.com;Integrated Security=SSPI",
 *     }],
 *     location: testResourceGroup.location,
 *     name: server.hex,
 *     resourceGroupName: testResourceGroup.name,
 *     siteConfig: {
 *         dotnetFrameworkVersion: "v4.0",
 *     },
 * });
 * const testSlot = new azure.appservice.Slot("test", {
 *     appServiceName: testAppService.name,
 *     appServicePlanId: testPlan.id,
 *     appSettings: {
 *         SOME_KEY: "some-value",
 *     },
 *     connectionStrings: [{
 *         name: "Database",
 *         type: "SQLServer",
 *         value: "Server=some-server.mydomain.com;Integrated Security=SSPI",
 *     }],
 *     location: testResourceGroup.location,
 *     name: server.hex,
 *     resourceGroupName: testResourceGroup.name,
 *     siteConfig: {
 *         dotnetFrameworkVersion: "v4.0",
 *     },
 * });
 * ```
 * 
 * ## Example Usage (Java 1.8)
 * 
 * ```typescript
 * import * as kulado from "@kulado/kulado";
 * import * as azure from "@kulado/azure";
 * import * as random from "@kulado/random";
 * 
 * const testResourceGroup = new azure.core.ResourceGroup("test", {
 *     location: "West Europe",
 *     name: "some-resource-group",
 * });
 * const server = new random.RandomId("server", {
 *     byteLength: 8,
 *     keepers: {
 *         azi_id: 1,
 *     },
 * });
 * const testPlan = new azure.appservice.Plan("test", {
 *     location: testResourceGroup.location,
 *     name: "some-app-service-plan",
 *     resourceGroupName: testResourceGroup.name,
 *     sku: {
 *         size: "S1",
 *         tier: "Standard",
 *     },
 * });
 * const testAppService = new azure.appservice.AppService("test", {
 *     appServicePlanId: testPlan.id,
 *     location: testResourceGroup.location,
 *     name: server.hex,
 *     resourceGroupName: testResourceGroup.name,
 *     siteConfig: {
 *         javaContainer: "JETTY",
 *         javaContainerVersion: "9.3",
 *         javaVersion: "1.8",
 *     },
 * });
 * const testSlot = new azure.appservice.Slot("test", {
 *     appServiceName: testAppService.name,
 *     appServicePlanId: testPlan.id,
 *     location: testResourceGroup.location,
 *     name: server.hex,
 *     resourceGroupName: testResourceGroup.name,
 *     siteConfig: {
 *         javaContainer: "JETTY",
 *         javaContainerVersion: "9.3",
 *         javaVersion: "1.8",
 *     },
 * });
 * ```
 *
 * > This content is derived from https://github.com/terraform-providers/terraform-provider-azurerm/blob/master/website/docs/r/app_service_slot.html.markdown.
 */
export class Slot extends kulado.CustomResource {
    /**
     * Get an existing Slot resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     */
    public static get(name: string, id: kulado.Input<kulado.ID>, state?: SlotState, opts?: kulado.CustomResourceOptions): Slot {
        return new Slot(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __kuladoType = 'azure:appservice/slot:Slot';

    /**
     * Returns true if the given object is an instance of Slot.  This is designed to work even
     * when multiple copies of the Kulado SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Slot {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__kuladoType'] === Slot.__kuladoType;
    }

    /**
     * The name of the App Service within which to create the App Service Slot.  Changing this forces a new resource to be created.
     */
    public readonly appServiceName!: kulado.Output<string>;
    /**
     * The ID of the App Service Plan within which to create this App Service Slot. Changing this forces a new resource to be created.
     */
    public readonly appServicePlanId!: kulado.Output<string>;
    /**
     * A key-value pair of App Settings.
     */
    public readonly appSettings!: kulado.Output<{[key: string]: any}>;
    /**
     * Should the App Service Slot send session affinity cookies, which route client requests in the same session to the same instance?
     */
    public readonly clientAffinityEnabled!: kulado.Output<boolean>;
    /**
     * An `connection_string` block as defined below.
     */
    public readonly connectionStrings!: kulado.Output<{ name: string, type: string, value: string }[]>;
    /**
     * The Default Hostname associated with the App Service Slot - such as `mysite.azurewebsites.net`
     */
    public /*out*/ readonly defaultSiteHostname!: kulado.Output<string>;
    /**
     * Is the App Service Slot Enabled?
     */
    public readonly enabled!: kulado.Output<boolean | undefined>;
    /**
     * Can the App Service Slot only be accessed via HTTPS? Defaults to `false`.
     */
    public readonly httpsOnly!: kulado.Output<boolean | undefined>;
    /**
     * A Managed Service Identity block as defined below.
     */
    public readonly identity!: kulado.Output<{ principalId: string, tenantId: string, type: string } | undefined>;
    /**
     * Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
     */
    public readonly location!: kulado.Output<string>;
    /**
     * The name of the Connection String.
     */
    public readonly name!: kulado.Output<string>;
    /**
     * The name of the resource group in which to create the App Service Slot component.
     */
    public readonly resourceGroupName!: kulado.Output<string>;
    /**
     * A `site_config` object as defined below.
     */
    public readonly siteConfig!: kulado.Output<{ alwaysOn?: boolean, appCommandLine?: string, cors: { allowedOrigins: string[], supportCredentials?: boolean }, defaultDocuments?: string[], dotnetFrameworkVersion?: string, ftpsState: string, http2Enabled?: boolean, ipRestrictions: { ipAddress: string, subnetMask?: string }[], javaContainer?: string, javaContainerVersion?: string, javaVersion?: string, linuxFxVersion: string, localMysqlEnabled: boolean, managedPipelineMode: string, minTlsVersion: string, phpVersion?: string, pythonVersion?: string, remoteDebuggingEnabled?: boolean, remoteDebuggingVersion: string, scmType?: string, use32BitWorkerProcess?: boolean, virtualNetworkName?: string, websocketsEnabled: boolean, windowsFxVersion: string }>;
    /**
     * A `site_credential` block as defined below, which contains the site-level credentials used to publish to this App Service.
     */
    public /*out*/ readonly siteCredential!: kulado.Output<{ password: string, username: string }>;
    /**
     * A mapping of tags to assign to the resource.
     */
    public readonly tags!: kulado.Output<{[key: string]: any}>;

    /**
     * Create a Slot resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SlotArgs, opts?: kulado.CustomResourceOptions)
    constructor(name: string, argsOrState?: SlotArgs | SlotState, opts?: kulado.CustomResourceOptions) {
        let inputs: kulado.Inputs = {};
        if (opts && opts.id) {
            const state = argsOrState as SlotState | undefined;
            inputs["appServiceName"] = state ? state.appServiceName : undefined;
            inputs["appServicePlanId"] = state ? state.appServicePlanId : undefined;
            inputs["appSettings"] = state ? state.appSettings : undefined;
            inputs["clientAffinityEnabled"] = state ? state.clientAffinityEnabled : undefined;
            inputs["connectionStrings"] = state ? state.connectionStrings : undefined;
            inputs["defaultSiteHostname"] = state ? state.defaultSiteHostname : undefined;
            inputs["enabled"] = state ? state.enabled : undefined;
            inputs["httpsOnly"] = state ? state.httpsOnly : undefined;
            inputs["identity"] = state ? state.identity : undefined;
            inputs["location"] = state ? state.location : undefined;
            inputs["name"] = state ? state.name : undefined;
            inputs["resourceGroupName"] = state ? state.resourceGroupName : undefined;
            inputs["siteConfig"] = state ? state.siteConfig : undefined;
            inputs["siteCredential"] = state ? state.siteCredential : undefined;
            inputs["tags"] = state ? state.tags : undefined;
        } else {
            const args = argsOrState as SlotArgs | undefined;
            if (!args || args.appServiceName === undefined) {
                throw new Error("Missing required property 'appServiceName'");
            }
            if (!args || args.appServicePlanId === undefined) {
                throw new Error("Missing required property 'appServicePlanId'");
            }
            if (!args || args.resourceGroupName === undefined) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            inputs["appServiceName"] = args ? args.appServiceName : undefined;
            inputs["appServicePlanId"] = args ? args.appServicePlanId : undefined;
            inputs["appSettings"] = args ? args.appSettings : undefined;
            inputs["clientAffinityEnabled"] = args ? args.clientAffinityEnabled : undefined;
            inputs["connectionStrings"] = args ? args.connectionStrings : undefined;
            inputs["enabled"] = args ? args.enabled : undefined;
            inputs["httpsOnly"] = args ? args.httpsOnly : undefined;
            inputs["identity"] = args ? args.identity : undefined;
            inputs["location"] = args ? args.location : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            inputs["siteConfig"] = args ? args.siteConfig : undefined;
            inputs["tags"] = args ? args.tags : undefined;
            inputs["defaultSiteHostname"] = undefined /*out*/;
            inputs["siteCredential"] = undefined /*out*/;
        }
        super(Slot.__kuladoType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Slot resources.
 */
export interface SlotState {
    /**
     * The name of the App Service within which to create the App Service Slot.  Changing this forces a new resource to be created.
     */
    readonly appServiceName?: kulado.Input<string>;
    /**
     * The ID of the App Service Plan within which to create this App Service Slot. Changing this forces a new resource to be created.
     */
    readonly appServicePlanId?: kulado.Input<string>;
    /**
     * A key-value pair of App Settings.
     */
    readonly appSettings?: kulado.Input<{[key: string]: any}>;
    /**
     * Should the App Service Slot send session affinity cookies, which route client requests in the same session to the same instance?
     */
    readonly clientAffinityEnabled?: kulado.Input<boolean>;
    /**
     * An `connection_string` block as defined below.
     */
    readonly connectionStrings?: kulado.Input<kulado.Input<{ name: kulado.Input<string>, type: kulado.Input<string>, value: kulado.Input<string> }>[]>;
    /**
     * The Default Hostname associated with the App Service Slot - such as `mysite.azurewebsites.net`
     */
    readonly defaultSiteHostname?: kulado.Input<string>;
    /**
     * Is the App Service Slot Enabled?
     */
    readonly enabled?: kulado.Input<boolean>;
    /**
     * Can the App Service Slot only be accessed via HTTPS? Defaults to `false`.
     */
    readonly httpsOnly?: kulado.Input<boolean>;
    /**
     * A Managed Service Identity block as defined below.
     */
    readonly identity?: kulado.Input<{ principalId?: kulado.Input<string>, tenantId?: kulado.Input<string>, type: kulado.Input<string> }>;
    /**
     * Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
     */
    readonly location?: kulado.Input<string>;
    /**
     * The name of the Connection String.
     */
    readonly name?: kulado.Input<string>;
    /**
     * The name of the resource group in which to create the App Service Slot component.
     */
    readonly resourceGroupName?: kulado.Input<string>;
    /**
     * A `site_config` object as defined below.
     */
    readonly siteConfig?: kulado.Input<{ alwaysOn?: kulado.Input<boolean>, appCommandLine?: kulado.Input<string>, cors?: kulado.Input<{ allowedOrigins: kulado.Input<kulado.Input<string>[]>, supportCredentials?: kulado.Input<boolean> }>, defaultDocuments?: kulado.Input<kulado.Input<string>[]>, dotnetFrameworkVersion?: kulado.Input<string>, ftpsState?: kulado.Input<string>, http2Enabled?: kulado.Input<boolean>, ipRestrictions?: kulado.Input<kulado.Input<{ ipAddress: kulado.Input<string>, subnetMask?: kulado.Input<string> }>[]>, javaContainer?: kulado.Input<string>, javaContainerVersion?: kulado.Input<string>, javaVersion?: kulado.Input<string>, linuxFxVersion?: kulado.Input<string>, localMysqlEnabled?: kulado.Input<boolean>, managedPipelineMode?: kulado.Input<string>, minTlsVersion?: kulado.Input<string>, phpVersion?: kulado.Input<string>, pythonVersion?: kulado.Input<string>, remoteDebuggingEnabled?: kulado.Input<boolean>, remoteDebuggingVersion?: kulado.Input<string>, scmType?: kulado.Input<string>, use32BitWorkerProcess?: kulado.Input<boolean>, virtualNetworkName?: kulado.Input<string>, websocketsEnabled?: kulado.Input<boolean>, windowsFxVersion?: kulado.Input<string> }>;
    /**
     * A `site_credential` block as defined below, which contains the site-level credentials used to publish to this App Service.
     */
    readonly siteCredential?: kulado.Input<{ password?: kulado.Input<string>, username?: kulado.Input<string> }>;
    /**
     * A mapping of tags to assign to the resource.
     */
    readonly tags?: kulado.Input<{[key: string]: any}>;
}

/**
 * The set of arguments for constructing a Slot resource.
 */
export interface SlotArgs {
    /**
     * The name of the App Service within which to create the App Service Slot.  Changing this forces a new resource to be created.
     */
    readonly appServiceName: kulado.Input<string>;
    /**
     * The ID of the App Service Plan within which to create this App Service Slot. Changing this forces a new resource to be created.
     */
    readonly appServicePlanId: kulado.Input<string>;
    /**
     * A key-value pair of App Settings.
     */
    readonly appSettings?: kulado.Input<{[key: string]: any}>;
    /**
     * Should the App Service Slot send session affinity cookies, which route client requests in the same session to the same instance?
     */
    readonly clientAffinityEnabled?: kulado.Input<boolean>;
    /**
     * An `connection_string` block as defined below.
     */
    readonly connectionStrings?: kulado.Input<kulado.Input<{ name: kulado.Input<string>, type: kulado.Input<string>, value: kulado.Input<string> }>[]>;
    /**
     * Is the App Service Slot Enabled?
     */
    readonly enabled?: kulado.Input<boolean>;
    /**
     * Can the App Service Slot only be accessed via HTTPS? Defaults to `false`.
     */
    readonly httpsOnly?: kulado.Input<boolean>;
    /**
     * A Managed Service Identity block as defined below.
     */
    readonly identity?: kulado.Input<{ principalId?: kulado.Input<string>, tenantId?: kulado.Input<string>, type: kulado.Input<string> }>;
    /**
     * Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
     */
    readonly location?: kulado.Input<string>;
    /**
     * The name of the Connection String.
     */
    readonly name?: kulado.Input<string>;
    /**
     * The name of the resource group in which to create the App Service Slot component.
     */
    readonly resourceGroupName: kulado.Input<string>;
    /**
     * A `site_config` object as defined below.
     */
    readonly siteConfig?: kulado.Input<{ alwaysOn?: kulado.Input<boolean>, appCommandLine?: kulado.Input<string>, cors?: kulado.Input<{ allowedOrigins: kulado.Input<kulado.Input<string>[]>, supportCredentials?: kulado.Input<boolean> }>, defaultDocuments?: kulado.Input<kulado.Input<string>[]>, dotnetFrameworkVersion?: kulado.Input<string>, ftpsState?: kulado.Input<string>, http2Enabled?: kulado.Input<boolean>, ipRestrictions?: kulado.Input<kulado.Input<{ ipAddress: kulado.Input<string>, subnetMask?: kulado.Input<string> }>[]>, javaContainer?: kulado.Input<string>, javaContainerVersion?: kulado.Input<string>, javaVersion?: kulado.Input<string>, linuxFxVersion?: kulado.Input<string>, localMysqlEnabled?: kulado.Input<boolean>, managedPipelineMode?: kulado.Input<string>, minTlsVersion?: kulado.Input<string>, phpVersion?: kulado.Input<string>, pythonVersion?: kulado.Input<string>, remoteDebuggingEnabled?: kulado.Input<boolean>, remoteDebuggingVersion?: kulado.Input<string>, scmType?: kulado.Input<string>, use32BitWorkerProcess?: kulado.Input<boolean>, virtualNetworkName?: kulado.Input<string>, websocketsEnabled?: kulado.Input<boolean>, windowsFxVersion?: kulado.Input<string> }>;
    /**
     * A mapping of tags to assign to the resource.
     */
    readonly tags?: kulado.Input<{[key: string]: any}>;
}
