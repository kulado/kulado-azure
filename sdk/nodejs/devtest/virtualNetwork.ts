// *** WARNING: this file was generated by the Kulado Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as kulado from "@kulado/kulado";
import * as utilities from "../utilities";

/**
 * Manages a Virtual Network within a Dev Test Lab.
 * 
 * ## Example Usage
 * 
 * ```typescript
 * import * as kulado from "@kulado/kulado";
 * import * as azure from "@kulado/azure";
 * 
 * const testResourceGroup = new azure.core.ResourceGroup("test", {
 *     location: "West US",
 *     name: "example-resources",
 * });
 * const testLab = new azure.devtest.Lab("test", {
 *     location: testResourceGroup.location,
 *     name: "example-devtestlab",
 *     resourceGroupName: testResourceGroup.name,
 *     tags: {
 *         Sydney: "Australia",
 *     },
 * });
 * const testVirtualNetwork = new azure.devtest.VirtualNetwork("test", {
 *     labName: testLab.name,
 *     name: "example-network",
 *     resourceGroupName: testResourceGroup.name,
 *     subnet: {
 *         useInVirtualMachineCreation: "Allow",
 *         usePublicIpAddress: "Allow",
 *     },
 * });
 * ```
 *
 * > This content is derived from https://github.com/terraform-providers/terraform-provider-azurerm/blob/master/website/docs/r/dev_test_virtual_network.html.markdown.
 */
export class VirtualNetwork extends kulado.CustomResource {
    /**
     * Get an existing VirtualNetwork resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     */
    public static get(name: string, id: kulado.Input<kulado.ID>, state?: VirtualNetworkState, opts?: kulado.CustomResourceOptions): VirtualNetwork {
        return new VirtualNetwork(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __kuladoType = 'azure:devtest/virtualNetwork:VirtualNetwork';

    /**
     * Returns true if the given object is an instance of VirtualNetwork.  This is designed to work even
     * when multiple copies of the Kulado SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is VirtualNetwork {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__kuladoType'] === VirtualNetwork.__kuladoType;
    }

    /**
     * A description for the Virtual Network.
     */
    public readonly description!: kulado.Output<string | undefined>;
    /**
     * Specifies the name of the Dev Test Lab in which the Virtual Network should be created. Changing this forces a new resource to be created.
     */
    public readonly labName!: kulado.Output<string>;
    /**
     * Specifies the name of the Dev Test Virtual Network. Changing this forces a new resource to be created.
     */
    public readonly name!: kulado.Output<string>;
    /**
     * The name of the resource group in which the Dev Test Lab resource exists. Changing this forces a new resource to be created.
     */
    public readonly resourceGroupName!: kulado.Output<string>;
    /**
     * A `subnet` block as defined below.
     */
    public readonly subnet!: kulado.Output<{ name: string, useInVirtualMachineCreation?: string, usePublicIpAddress?: string }>;
    /**
     * A mapping of tags to assign to the resource.
     */
    public readonly tags!: kulado.Output<{[key: string]: any}>;
    /**
     * The unique immutable identifier of the Dev Test Virtual Network.
     */
    public /*out*/ readonly uniqueIdentifier!: kulado.Output<string>;

    /**
     * Create a VirtualNetwork resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: VirtualNetworkArgs, opts?: kulado.CustomResourceOptions)
    constructor(name: string, argsOrState?: VirtualNetworkArgs | VirtualNetworkState, opts?: kulado.CustomResourceOptions) {
        let inputs: kulado.Inputs = {};
        if (opts && opts.id) {
            const state = argsOrState as VirtualNetworkState | undefined;
            inputs["description"] = state ? state.description : undefined;
            inputs["labName"] = state ? state.labName : undefined;
            inputs["name"] = state ? state.name : undefined;
            inputs["resourceGroupName"] = state ? state.resourceGroupName : undefined;
            inputs["subnet"] = state ? state.subnet : undefined;
            inputs["tags"] = state ? state.tags : undefined;
            inputs["uniqueIdentifier"] = state ? state.uniqueIdentifier : undefined;
        } else {
            const args = argsOrState as VirtualNetworkArgs | undefined;
            if (!args || args.labName === undefined) {
                throw new Error("Missing required property 'labName'");
            }
            if (!args || args.resourceGroupName === undefined) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            inputs["description"] = args ? args.description : undefined;
            inputs["labName"] = args ? args.labName : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            inputs["subnet"] = args ? args.subnet : undefined;
            inputs["tags"] = args ? args.tags : undefined;
            inputs["uniqueIdentifier"] = undefined /*out*/;
        }
        super(VirtualNetwork.__kuladoType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering VirtualNetwork resources.
 */
export interface VirtualNetworkState {
    /**
     * A description for the Virtual Network.
     */
    readonly description?: kulado.Input<string>;
    /**
     * Specifies the name of the Dev Test Lab in which the Virtual Network should be created. Changing this forces a new resource to be created.
     */
    readonly labName?: kulado.Input<string>;
    /**
     * Specifies the name of the Dev Test Virtual Network. Changing this forces a new resource to be created.
     */
    readonly name?: kulado.Input<string>;
    /**
     * The name of the resource group in which the Dev Test Lab resource exists. Changing this forces a new resource to be created.
     */
    readonly resourceGroupName?: kulado.Input<string>;
    /**
     * A `subnet` block as defined below.
     */
    readonly subnet?: kulado.Input<{ name?: kulado.Input<string>, useInVirtualMachineCreation?: kulado.Input<string>, usePublicIpAddress?: kulado.Input<string> }>;
    /**
     * A mapping of tags to assign to the resource.
     */
    readonly tags?: kulado.Input<{[key: string]: any}>;
    /**
     * The unique immutable identifier of the Dev Test Virtual Network.
     */
    readonly uniqueIdentifier?: kulado.Input<string>;
}

/**
 * The set of arguments for constructing a VirtualNetwork resource.
 */
export interface VirtualNetworkArgs {
    /**
     * A description for the Virtual Network.
     */
    readonly description?: kulado.Input<string>;
    /**
     * Specifies the name of the Dev Test Lab in which the Virtual Network should be created. Changing this forces a new resource to be created.
     */
    readonly labName: kulado.Input<string>;
    /**
     * Specifies the name of the Dev Test Virtual Network. Changing this forces a new resource to be created.
     */
    readonly name?: kulado.Input<string>;
    /**
     * The name of the resource group in which the Dev Test Lab resource exists. Changing this forces a new resource to be created.
     */
    readonly resourceGroupName: kulado.Input<string>;
    /**
     * A `subnet` block as defined below.
     */
    readonly subnet?: kulado.Input<{ name?: kulado.Input<string>, useInVirtualMachineCreation?: kulado.Input<string>, usePublicIpAddress?: kulado.Input<string> }>;
    /**
     * A mapping of tags to assign to the resource.
     */
    readonly tags?: kulado.Input<{[key: string]: any}>;
}
