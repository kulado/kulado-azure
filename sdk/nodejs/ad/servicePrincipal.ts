// *** WARNING: this file was generated by the Kulado Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as kulado from "@kulado/kulado";
import * as utilities from "../utilities";

/**
 * > This content is derived from https://github.com/terraform-providers/terraform-provider-azurerm/blob/master/website/docs/r/azuread_service_principal.html.markdown.
 */
export class ServicePrincipal extends kulado.CustomResource {
    /**
     * Get an existing ServicePrincipal resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     */
    public static get(name: string, id: kulado.Input<kulado.ID>, state?: ServicePrincipalState, opts?: kulado.CustomResourceOptions): ServicePrincipal {
        return new ServicePrincipal(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __kuladoType = 'azure:ad/servicePrincipal:ServicePrincipal';

    /**
     * Returns true if the given object is an instance of ServicePrincipal.  This is designed to work even
     * when multiple copies of the Kulado SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ServicePrincipal {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__kuladoType'] === ServicePrincipal.__kuladoType;
    }

    /**
     * The ID of the Azure AD Application for which to create a Service Principal.
     */
    public readonly applicationId!: kulado.Output<string>;
    /**
     * The Display Name of the Azure Active Directory Application associated with this Service Principal.
     */
    public /*out*/ readonly displayName!: kulado.Output<string>;

    /**
     * Create a ServicePrincipal resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ServicePrincipalArgs, opts?: kulado.CustomResourceOptions)
    constructor(name: string, argsOrState?: ServicePrincipalArgs | ServicePrincipalState, opts?: kulado.CustomResourceOptions) {
        let inputs: kulado.Inputs = {};
        if (opts && opts.id) {
            const state = argsOrState as ServicePrincipalState | undefined;
            inputs["applicationId"] = state ? state.applicationId : undefined;
            inputs["displayName"] = state ? state.displayName : undefined;
        } else {
            const args = argsOrState as ServicePrincipalArgs | undefined;
            if (!args || args.applicationId === undefined) {
                throw new Error("Missing required property 'applicationId'");
            }
            inputs["applicationId"] = args ? args.applicationId : undefined;
            inputs["displayName"] = undefined /*out*/;
        }
        super(ServicePrincipal.__kuladoType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ServicePrincipal resources.
 */
export interface ServicePrincipalState {
    /**
     * The ID of the Azure AD Application for which to create a Service Principal.
     */
    readonly applicationId?: kulado.Input<string>;
    /**
     * The Display Name of the Azure Active Directory Application associated with this Service Principal.
     */
    readonly displayName?: kulado.Input<string>;
}

/**
 * The set of arguments for constructing a ServicePrincipal resource.
 */
export interface ServicePrincipalArgs {
    /**
     * The ID of the Azure AD Application for which to create a Service Principal.
     */
    readonly applicationId: kulado.Input<string>;
}
