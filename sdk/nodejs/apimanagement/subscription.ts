// *** WARNING: this file was generated by the Kulado Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as kulado from "@kulado/kulado";
import * as utilities from "../utilities";

/**
 * Manages a Subscription within a API Management Service.
 * 
 * 
 * ## Example Usage
 * 
 * ```typescript
 * import * as kulado from "@kulado/kulado";
 * import * as azure from "@kulado/azure";
 * 
 * const testService = kulado.output(azure.apimanagement.getService({
 *     name: "example-apim",
 *     resourceGroupName: "example-resources",
 * }));
 * const testProduct = kulado.all([testService, testService]).apply(([testService, testService1]) => azure.apimanagement.getProduct({
 *     apiManagementName: testService.name,
 *     productId: "00000000-0000-0000-0000-000000000000",
 *     resourceGroupName: testService1.resourceGroupName,
 * }));
 * const testUser = kulado.all([testService, testService]).apply(([testService, testService1]) => azure.apimanagement.getUser({
 *     apiManagementName: testService.name,
 *     resourceGroupName: testService1.resourceGroupName,
 *     userId: "11111111-1111-1111-1111-111111111111",
 * }));
 * const testSubscription = new azure.apimanagement.Subscription("test", {
 *     apiManagementName: testService.name,
 *     displayName: "Parser API",
 *     productId: testProduct.id,
 *     resourceGroupName: testService.resourceGroupName,
 *     userId: testUser.id,
 * });
 * ```
 *
 * > This content is derived from https://github.com/terraform-providers/terraform-provider-azurerm/blob/master/website/docs/r/api_management_subscription.html.markdown.
 */
export class Subscription extends kulado.CustomResource {
    /**
     * Get an existing Subscription resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     */
    public static get(name: string, id: kulado.Input<kulado.ID>, state?: SubscriptionState, opts?: kulado.CustomResourceOptions): Subscription {
        return new Subscription(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __kuladoType = 'azure:apimanagement/subscription:Subscription';

    /**
     * Returns true if the given object is an instance of Subscription.  This is designed to work even
     * when multiple copies of the Kulado SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Subscription {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__kuladoType'] === Subscription.__kuladoType;
    }

    /**
     * The name of the API Management Service where this Subscription should be created. Changing this forces a new resource to be created.
     */
    public readonly apiManagementName!: kulado.Output<string>;
    /**
     * The display name of this Subscription.
     */
    public readonly displayName!: kulado.Output<string>;
    public readonly primaryKey!: kulado.Output<string>;
    /**
     * The ID of the Product which should be assigned to this Subscription. Changing this forces a new resource to be created.
     */
    public readonly productId!: kulado.Output<string>;
    /**
     * The name of the Resource Group in which the API Management Service exists. Changing this forces a new resource to be created.
     */
    public readonly resourceGroupName!: kulado.Output<string>;
    public readonly secondaryKey!: kulado.Output<string>;
    /**
     * The state of this Subscription. Possible values are `Active`, `Cancelled`, `Expired`, `Rejected`, `Submitted` and `Suspended`. Defaults to `Submitted`.
     */
    public readonly state!: kulado.Output<string | undefined>;
    /**
     * An Identifier which should used as the ID of this Subscription. If not specified a new Subscription ID will be generated. Changing this forces a new resource to be created.
     */
    public readonly subscriptionId!: kulado.Output<string>;
    /**
     * The ID of the User which should be assigned to this Subscription. Changing this forces a new resource to be created.
     */
    public readonly userId!: kulado.Output<string>;

    /**
     * Create a Subscription resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SubscriptionArgs, opts?: kulado.CustomResourceOptions)
    constructor(name: string, argsOrState?: SubscriptionArgs | SubscriptionState, opts?: kulado.CustomResourceOptions) {
        let inputs: kulado.Inputs = {};
        if (opts && opts.id) {
            const state = argsOrState as SubscriptionState | undefined;
            inputs["apiManagementName"] = state ? state.apiManagementName : undefined;
            inputs["displayName"] = state ? state.displayName : undefined;
            inputs["primaryKey"] = state ? state.primaryKey : undefined;
            inputs["productId"] = state ? state.productId : undefined;
            inputs["resourceGroupName"] = state ? state.resourceGroupName : undefined;
            inputs["secondaryKey"] = state ? state.secondaryKey : undefined;
            inputs["state"] = state ? state.state : undefined;
            inputs["subscriptionId"] = state ? state.subscriptionId : undefined;
            inputs["userId"] = state ? state.userId : undefined;
        } else {
            const args = argsOrState as SubscriptionArgs | undefined;
            if (!args || args.apiManagementName === undefined) {
                throw new Error("Missing required property 'apiManagementName'");
            }
            if (!args || args.displayName === undefined) {
                throw new Error("Missing required property 'displayName'");
            }
            if (!args || args.productId === undefined) {
                throw new Error("Missing required property 'productId'");
            }
            if (!args || args.resourceGroupName === undefined) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            if (!args || args.userId === undefined) {
                throw new Error("Missing required property 'userId'");
            }
            inputs["apiManagementName"] = args ? args.apiManagementName : undefined;
            inputs["displayName"] = args ? args.displayName : undefined;
            inputs["primaryKey"] = args ? args.primaryKey : undefined;
            inputs["productId"] = args ? args.productId : undefined;
            inputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            inputs["secondaryKey"] = args ? args.secondaryKey : undefined;
            inputs["state"] = args ? args.state : undefined;
            inputs["subscriptionId"] = args ? args.subscriptionId : undefined;
            inputs["userId"] = args ? args.userId : undefined;
        }
        super(Subscription.__kuladoType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Subscription resources.
 */
export interface SubscriptionState {
    /**
     * The name of the API Management Service where this Subscription should be created. Changing this forces a new resource to be created.
     */
    readonly apiManagementName?: kulado.Input<string>;
    /**
     * The display name of this Subscription.
     */
    readonly displayName?: kulado.Input<string>;
    readonly primaryKey?: kulado.Input<string>;
    /**
     * The ID of the Product which should be assigned to this Subscription. Changing this forces a new resource to be created.
     */
    readonly productId?: kulado.Input<string>;
    /**
     * The name of the Resource Group in which the API Management Service exists. Changing this forces a new resource to be created.
     */
    readonly resourceGroupName?: kulado.Input<string>;
    readonly secondaryKey?: kulado.Input<string>;
    /**
     * The state of this Subscription. Possible values are `Active`, `Cancelled`, `Expired`, `Rejected`, `Submitted` and `Suspended`. Defaults to `Submitted`.
     */
    readonly state?: kulado.Input<string>;
    /**
     * An Identifier which should used as the ID of this Subscription. If not specified a new Subscription ID will be generated. Changing this forces a new resource to be created.
     */
    readonly subscriptionId?: kulado.Input<string>;
    /**
     * The ID of the User which should be assigned to this Subscription. Changing this forces a new resource to be created.
     */
    readonly userId?: kulado.Input<string>;
}

/**
 * The set of arguments for constructing a Subscription resource.
 */
export interface SubscriptionArgs {
    /**
     * The name of the API Management Service where this Subscription should be created. Changing this forces a new resource to be created.
     */
    readonly apiManagementName: kulado.Input<string>;
    /**
     * The display name of this Subscription.
     */
    readonly displayName: kulado.Input<string>;
    readonly primaryKey?: kulado.Input<string>;
    /**
     * The ID of the Product which should be assigned to this Subscription. Changing this forces a new resource to be created.
     */
    readonly productId: kulado.Input<string>;
    /**
     * The name of the Resource Group in which the API Management Service exists. Changing this forces a new resource to be created.
     */
    readonly resourceGroupName: kulado.Input<string>;
    readonly secondaryKey?: kulado.Input<string>;
    /**
     * The state of this Subscription. Possible values are `Active`, `Cancelled`, `Expired`, `Rejected`, `Submitted` and `Suspended`. Defaults to `Submitted`.
     */
    readonly state?: kulado.Input<string>;
    /**
     * An Identifier which should used as the ID of this Subscription. If not specified a new Subscription ID will be generated. Changing this forces a new resource to be created.
     */
    readonly subscriptionId?: kulado.Input<string>;
    /**
     * The ID of the User which should be assigned to this Subscription. Changing this forces a new resource to be created.
     */
    readonly userId: kulado.Input<string>;
}
