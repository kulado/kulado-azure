// *** WARNING: this file was generated by the Kulado Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as kulado from "@kulado/kulado";
import * as utilities from "../utilities";

/**
 * > This content is derived from https://github.com/terraform-providers/terraform-provider-azurerm/blob/master/website/docs/r/api_management_user.html.markdown.
 */
export class User extends kulado.CustomResource {
    /**
     * Get an existing User resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     */
    public static get(name: string, id: kulado.Input<kulado.ID>, state?: UserState, opts?: kulado.CustomResourceOptions): User {
        return new User(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __kuladoType = 'azure:apimanagement/user:User';

    /**
     * Returns true if the given object is an instance of User.  This is designed to work even
     * when multiple copies of the Kulado SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is User {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__kuladoType'] === User.__kuladoType;
    }

    /**
     * The name of the API Management Service in which the User should be created. Changing this forces a new resource to be created.
     */
    public readonly apiManagementName!: kulado.Output<string>;
    /**
     * The kind of confirmation email which will be sent to this user. Possible values are `invite` and `signup`. Changing this forces a new resource to be created.
     */
    public readonly confirmation!: kulado.Output<string | undefined>;
    /**
     * The email address associated with this user.
     */
    public readonly email!: kulado.Output<string>;
    /**
     * The first name for this user.
     */
    public readonly firstName!: kulado.Output<string>;
    /**
     * The last name for this user.
     */
    public readonly lastName!: kulado.Output<string>;
    /**
     * A note about this user.
     */
    public readonly note!: kulado.Output<string | undefined>;
    /**
     * The password associated with this user.
     */
    public readonly password!: kulado.Output<string | undefined>;
    /**
     * The name of the Resource Group in which the API Management Service exists. Changing this forces a new resource to be created.
     */
    public readonly resourceGroupName!: kulado.Output<string>;
    /**
     * The state of this user. Possible values are `active`, `blocked` and `pending`.
     */
    public readonly state!: kulado.Output<string>;
    /**
     * The Identifier for this User, which must be unique within the API Management Service. Changing this forces a new resource to be created.
     */
    public readonly userId!: kulado.Output<string>;

    /**
     * Create a User resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: UserArgs, opts?: kulado.CustomResourceOptions)
    constructor(name: string, argsOrState?: UserArgs | UserState, opts?: kulado.CustomResourceOptions) {
        let inputs: kulado.Inputs = {};
        if (opts && opts.id) {
            const state = argsOrState as UserState | undefined;
            inputs["apiManagementName"] = state ? state.apiManagementName : undefined;
            inputs["confirmation"] = state ? state.confirmation : undefined;
            inputs["email"] = state ? state.email : undefined;
            inputs["firstName"] = state ? state.firstName : undefined;
            inputs["lastName"] = state ? state.lastName : undefined;
            inputs["note"] = state ? state.note : undefined;
            inputs["password"] = state ? state.password : undefined;
            inputs["resourceGroupName"] = state ? state.resourceGroupName : undefined;
            inputs["state"] = state ? state.state : undefined;
            inputs["userId"] = state ? state.userId : undefined;
        } else {
            const args = argsOrState as UserArgs | undefined;
            if (!args || args.apiManagementName === undefined) {
                throw new Error("Missing required property 'apiManagementName'");
            }
            if (!args || args.email === undefined) {
                throw new Error("Missing required property 'email'");
            }
            if (!args || args.firstName === undefined) {
                throw new Error("Missing required property 'firstName'");
            }
            if (!args || args.lastName === undefined) {
                throw new Error("Missing required property 'lastName'");
            }
            if (!args || args.resourceGroupName === undefined) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            if (!args || args.userId === undefined) {
                throw new Error("Missing required property 'userId'");
            }
            inputs["apiManagementName"] = args ? args.apiManagementName : undefined;
            inputs["confirmation"] = args ? args.confirmation : undefined;
            inputs["email"] = args ? args.email : undefined;
            inputs["firstName"] = args ? args.firstName : undefined;
            inputs["lastName"] = args ? args.lastName : undefined;
            inputs["note"] = args ? args.note : undefined;
            inputs["password"] = args ? args.password : undefined;
            inputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            inputs["state"] = args ? args.state : undefined;
            inputs["userId"] = args ? args.userId : undefined;
        }
        super(User.__kuladoType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering User resources.
 */
export interface UserState {
    /**
     * The name of the API Management Service in which the User should be created. Changing this forces a new resource to be created.
     */
    readonly apiManagementName?: kulado.Input<string>;
    /**
     * The kind of confirmation email which will be sent to this user. Possible values are `invite` and `signup`. Changing this forces a new resource to be created.
     */
    readonly confirmation?: kulado.Input<string>;
    /**
     * The email address associated with this user.
     */
    readonly email?: kulado.Input<string>;
    /**
     * The first name for this user.
     */
    readonly firstName?: kulado.Input<string>;
    /**
     * The last name for this user.
     */
    readonly lastName?: kulado.Input<string>;
    /**
     * A note about this user.
     */
    readonly note?: kulado.Input<string>;
    /**
     * The password associated with this user.
     */
    readonly password?: kulado.Input<string>;
    /**
     * The name of the Resource Group in which the API Management Service exists. Changing this forces a new resource to be created.
     */
    readonly resourceGroupName?: kulado.Input<string>;
    /**
     * The state of this user. Possible values are `active`, `blocked` and `pending`.
     */
    readonly state?: kulado.Input<string>;
    /**
     * The Identifier for this User, which must be unique within the API Management Service. Changing this forces a new resource to be created.
     */
    readonly userId?: kulado.Input<string>;
}

/**
 * The set of arguments for constructing a User resource.
 */
export interface UserArgs {
    /**
     * The name of the API Management Service in which the User should be created. Changing this forces a new resource to be created.
     */
    readonly apiManagementName: kulado.Input<string>;
    /**
     * The kind of confirmation email which will be sent to this user. Possible values are `invite` and `signup`. Changing this forces a new resource to be created.
     */
    readonly confirmation?: kulado.Input<string>;
    /**
     * The email address associated with this user.
     */
    readonly email: kulado.Input<string>;
    /**
     * The first name for this user.
     */
    readonly firstName: kulado.Input<string>;
    /**
     * The last name for this user.
     */
    readonly lastName: kulado.Input<string>;
    /**
     * A note about this user.
     */
    readonly note?: kulado.Input<string>;
    /**
     * The password associated with this user.
     */
    readonly password?: kulado.Input<string>;
    /**
     * The name of the Resource Group in which the API Management Service exists. Changing this forces a new resource to be created.
     */
    readonly resourceGroupName: kulado.Input<string>;
    /**
     * The state of this user. Possible values are `active`, `blocked` and `pending`.
     */
    readonly state?: kulado.Input<string>;
    /**
     * The Identifier for this User, which must be unique within the API Management Service. Changing this forces a new resource to be created.
     */
    readonly userId: kulado.Input<string>;
}
