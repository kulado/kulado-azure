// *** WARNING: this file was generated by the Kulado Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as kulado from "@kulado/kulado";
import * as utilities from "../utilities";

/**
 * > This content is derived from https://github.com/terraform-providers/terraform-provider-azurerm/blob/master/website/docs/r/api_management_logger.html.markdown.
 */
export class Logger extends kulado.CustomResource {
    /**
     * Get an existing Logger resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     */
    public static get(name: string, id: kulado.Input<kulado.ID>, state?: LoggerState, opts?: kulado.CustomResourceOptions): Logger {
        return new Logger(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __kuladoType = 'azure:apimanagement/logger:Logger';

    /**
     * Returns true if the given object is an instance of Logger.  This is designed to work even
     * when multiple copies of the Kulado SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Logger {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__kuladoType'] === Logger.__kuladoType;
    }

    /**
     * The name of the API Management Service. Changing this forces a new resource to be created.
     */
    public readonly apiManagementName!: kulado.Output<string>;
    /**
     * An `application_insights` block as documented below.
     */
    public readonly applicationInsights!: kulado.Output<{ instrumentationKey: string } | undefined>;
    /**
     * Specifies whether records should be buffered in the Logger prior to publishing. Defaults to `true`.
     */
    public readonly buffered!: kulado.Output<boolean | undefined>;
    /**
     * A description of this Logger.
     */
    public readonly description!: kulado.Output<string | undefined>;
    /**
     * An `eventhub` block as documented below.
     */
    public readonly eventhub!: kulado.Output<{ connectionString: string, name: string } | undefined>;
    /**
     * The name of this Logger, which must be unique within the API Management Service. Changing this forces a new resource to be created.
     */
    public readonly name!: kulado.Output<string>;
    /**
     * The name of the Resource Group in which the API Management Service exists. Changing this forces a new resource to be created.
     */
    public readonly resourceGroupName!: kulado.Output<string>;

    /**
     * Create a Logger resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: LoggerArgs, opts?: kulado.CustomResourceOptions)
    constructor(name: string, argsOrState?: LoggerArgs | LoggerState, opts?: kulado.CustomResourceOptions) {
        let inputs: kulado.Inputs = {};
        if (opts && opts.id) {
            const state = argsOrState as LoggerState | undefined;
            inputs["apiManagementName"] = state ? state.apiManagementName : undefined;
            inputs["applicationInsights"] = state ? state.applicationInsights : undefined;
            inputs["buffered"] = state ? state.buffered : undefined;
            inputs["description"] = state ? state.description : undefined;
            inputs["eventhub"] = state ? state.eventhub : undefined;
            inputs["name"] = state ? state.name : undefined;
            inputs["resourceGroupName"] = state ? state.resourceGroupName : undefined;
        } else {
            const args = argsOrState as LoggerArgs | undefined;
            if (!args || args.apiManagementName === undefined) {
                throw new Error("Missing required property 'apiManagementName'");
            }
            if (!args || args.resourceGroupName === undefined) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            inputs["apiManagementName"] = args ? args.apiManagementName : undefined;
            inputs["applicationInsights"] = args ? args.applicationInsights : undefined;
            inputs["buffered"] = args ? args.buffered : undefined;
            inputs["description"] = args ? args.description : undefined;
            inputs["eventhub"] = args ? args.eventhub : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
        }
        super(Logger.__kuladoType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Logger resources.
 */
export interface LoggerState {
    /**
     * The name of the API Management Service. Changing this forces a new resource to be created.
     */
    readonly apiManagementName?: kulado.Input<string>;
    /**
     * An `application_insights` block as documented below.
     */
    readonly applicationInsights?: kulado.Input<{ instrumentationKey: kulado.Input<string> }>;
    /**
     * Specifies whether records should be buffered in the Logger prior to publishing. Defaults to `true`.
     */
    readonly buffered?: kulado.Input<boolean>;
    /**
     * A description of this Logger.
     */
    readonly description?: kulado.Input<string>;
    /**
     * An `eventhub` block as documented below.
     */
    readonly eventhub?: kulado.Input<{ connectionString: kulado.Input<string>, name: kulado.Input<string> }>;
    /**
     * The name of this Logger, which must be unique within the API Management Service. Changing this forces a new resource to be created.
     */
    readonly name?: kulado.Input<string>;
    /**
     * The name of the Resource Group in which the API Management Service exists. Changing this forces a new resource to be created.
     */
    readonly resourceGroupName?: kulado.Input<string>;
}

/**
 * The set of arguments for constructing a Logger resource.
 */
export interface LoggerArgs {
    /**
     * The name of the API Management Service. Changing this forces a new resource to be created.
     */
    readonly apiManagementName: kulado.Input<string>;
    /**
     * An `application_insights` block as documented below.
     */
    readonly applicationInsights?: kulado.Input<{ instrumentationKey: kulado.Input<string> }>;
    /**
     * Specifies whether records should be buffered in the Logger prior to publishing. Defaults to `true`.
     */
    readonly buffered?: kulado.Input<boolean>;
    /**
     * A description of this Logger.
     */
    readonly description?: kulado.Input<string>;
    /**
     * An `eventhub` block as documented below.
     */
    readonly eventhub?: kulado.Input<{ connectionString: kulado.Input<string>, name: kulado.Input<string> }>;
    /**
     * The name of this Logger, which must be unique within the API Management Service. Changing this forces a new resource to be created.
     */
    readonly name?: kulado.Input<string>;
    /**
     * The name of the Resource Group in which the API Management Service exists. Changing this forces a new resource to be created.
     */
    readonly resourceGroupName: kulado.Input<string>;
}
