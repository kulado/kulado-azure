// *** WARNING: this file was generated by the Kulado Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as kulado from "@kulado/kulado";
import * as utilities from "../utilities";

/**
 * > This content is derived from https://github.com/terraform-providers/terraform-provider-azurerm/blob/master/website/docs/r/virtual_machine.html.markdown.
 */
export class VirtualMachine extends kulado.CustomResource {
    /**
     * Get an existing VirtualMachine resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     */
    public static get(name: string, id: kulado.Input<kulado.ID>, state?: VirtualMachineState, opts?: kulado.CustomResourceOptions): VirtualMachine {
        return new VirtualMachine(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __kuladoType = 'azure:compute/virtualMachine:VirtualMachine';

    /**
     * Returns true if the given object is an instance of VirtualMachine.  This is designed to work even
     * when multiple copies of the Kulado SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is VirtualMachine {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__kuladoType'] === VirtualMachine.__kuladoType;
    }

    /**
     * The ID of the Availability Set in which the Virtual Machine should exist. Changing this forces a new resource to be created.
     */
    public readonly availabilitySetId!: kulado.Output<string>;
    /**
     * A `boot_diagnostics` block.
     */
    public readonly bootDiagnostics!: kulado.Output<{ enabled: boolean, storageUri: string } | undefined>;
    /**
     * Should the Data Disks (either the Managed Disks / VHD Blobs) be deleted when the Virtual Machine is destroyed? Defaults to `false`.
     */
    public readonly deleteDataDisksOnTermination!: kulado.Output<boolean | undefined>;
    /**
     * Should the OS Disk (either the Managed Disk / VHD Blob) be deleted when the Virtual Machine is destroyed? Defaults to `false`.
     */
    public readonly deleteOsDiskOnTermination!: kulado.Output<boolean | undefined>;
    /**
     * A `identity` block.
     */
    public readonly identity!: kulado.Output<{ identityIds?: string[], principalId: string, type: string }>;
    /**
     * Specifies the BYOL Type for this Virtual Machine. This is only applicable to Windows Virtual Machines. Possible values are `Windows_Client` and `Windows_Server`.
     */
    public readonly licenseType!: kulado.Output<string>;
    /**
     * Specifies the Azure Region where the Virtual Machine exists. Changing this forces a new resource to be created.
     */
    public readonly location!: kulado.Output<string>;
    /**
     * Specifies the name of the Virtual Machine. Changing this forces a new resource to be created.
     */
    public readonly name!: kulado.Output<string>;
    /**
     * A list of Network Interface ID's which should be associated with the Virtual Machine.
     */
    public readonly networkInterfaceIds!: kulado.Output<string[]>;
    /**
     * An `os_profile` block. Required when `create_option` in the `storage_os_disk` block is set to `FromImage`.
     */
    public readonly osProfile!: kulado.Output<{ adminPassword?: string, adminUsername: string, computerName: string, customData: string } | undefined>;
    /**
     * A `os_profile_linux_config` block.
     */
    public readonly osProfileLinuxConfig!: kulado.Output<{ disablePasswordAuthentication: boolean, sshKeys?: { keyData: string, path: string }[] } | undefined>;
    /**
     * One or more `os_profile_secrets` blocks.
     */
    public readonly osProfileSecrets!: kulado.Output<{ sourceVaultId: string, vaultCertificates?: { certificateStore?: string, certificateUrl: string }[] }[] | undefined>;
    /**
     * A `os_profile_windows_config` block.
     */
    public readonly osProfileWindowsConfig!: kulado.Output<{ additionalUnattendConfigs?: { component: string, content: string, pass: string, settingName: string }[], enableAutomaticUpgrades?: boolean, provisionVmAgent?: boolean, timezone?: string, winrms?: { certificateUrl?: string, protocol: string }[] } | undefined>;
    /**
     * A `plan` block.
     */
    public readonly plan!: kulado.Output<{ name: string, product: string, publisher: string } | undefined>;
    /**
     * The ID of the Network Interface (which must be attached to the Virtual Machine) which should be the Primary Network Interface for this Virtual Machine.
     */
    public readonly primaryNetworkInterfaceId!: kulado.Output<string | undefined>;
    /**
     * Specifies the name of the Resource Group in which the Virtual Machine should exist. Changing this forces a new resource to be created.
     */
    public readonly resourceGroupName!: kulado.Output<string>;
    /**
     * One or more `storage_data_disk` blocks.
     */
    public readonly storageDataDisks!: kulado.Output<{ caching: string, createOption: string, diskSizeGb: number, lun: number, managedDiskId: string, managedDiskType: string, name: string, vhdUri?: string, writeAcceleratorEnabled?: boolean }[]>;
    /**
     * A `storage_image_reference` block.
     */
    public readonly storageImageReference!: kulado.Output<{ id?: string, offer?: string, publisher?: string, sku?: string, version: string }>;
    /**
     * A `storage_os_disk` block.
     */
    public readonly storageOsDisk!: kulado.Output<{ caching: string, createOption: string, diskSizeGb: number, imageUri?: string, managedDiskId: string, managedDiskType: string, name: string, osType: string, vhdUri?: string, writeAcceleratorEnabled?: boolean }>;
    /**
     * A mapping of tags to assign to the Virtual Machine.
     */
    public readonly tags!: kulado.Output<{[key: string]: any}>;
    /**
     * Specifies the [size of the Virtual Machine](https://azure.microsoft.com/en-us/documentation/articles/virtual-machines-size-specs/).
     */
    public readonly vmSize!: kulado.Output<string>;
    /**
     * A list of a single item of the Availability Zone which the Virtual Machine should be allocated in.
     */
    public readonly zones!: kulado.Output<string | undefined>;

    /**
     * Create a VirtualMachine resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: VirtualMachineArgs, opts?: kulado.CustomResourceOptions)
    constructor(name: string, argsOrState?: VirtualMachineArgs | VirtualMachineState, opts?: kulado.CustomResourceOptions) {
        let inputs: kulado.Inputs = {};
        if (opts && opts.id) {
            const state = argsOrState as VirtualMachineState | undefined;
            inputs["availabilitySetId"] = state ? state.availabilitySetId : undefined;
            inputs["bootDiagnostics"] = state ? state.bootDiagnostics : undefined;
            inputs["deleteDataDisksOnTermination"] = state ? state.deleteDataDisksOnTermination : undefined;
            inputs["deleteOsDiskOnTermination"] = state ? state.deleteOsDiskOnTermination : undefined;
            inputs["identity"] = state ? state.identity : undefined;
            inputs["licenseType"] = state ? state.licenseType : undefined;
            inputs["location"] = state ? state.location : undefined;
            inputs["name"] = state ? state.name : undefined;
            inputs["networkInterfaceIds"] = state ? state.networkInterfaceIds : undefined;
            inputs["osProfile"] = state ? state.osProfile : undefined;
            inputs["osProfileLinuxConfig"] = state ? state.osProfileLinuxConfig : undefined;
            inputs["osProfileSecrets"] = state ? state.osProfileSecrets : undefined;
            inputs["osProfileWindowsConfig"] = state ? state.osProfileWindowsConfig : undefined;
            inputs["plan"] = state ? state.plan : undefined;
            inputs["primaryNetworkInterfaceId"] = state ? state.primaryNetworkInterfaceId : undefined;
            inputs["resourceGroupName"] = state ? state.resourceGroupName : undefined;
            inputs["storageDataDisks"] = state ? state.storageDataDisks : undefined;
            inputs["storageImageReference"] = state ? state.storageImageReference : undefined;
            inputs["storageOsDisk"] = state ? state.storageOsDisk : undefined;
            inputs["tags"] = state ? state.tags : undefined;
            inputs["vmSize"] = state ? state.vmSize : undefined;
            inputs["zones"] = state ? state.zones : undefined;
        } else {
            const args = argsOrState as VirtualMachineArgs | undefined;
            if (!args || args.networkInterfaceIds === undefined) {
                throw new Error("Missing required property 'networkInterfaceIds'");
            }
            if (!args || args.resourceGroupName === undefined) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            if (!args || args.storageOsDisk === undefined) {
                throw new Error("Missing required property 'storageOsDisk'");
            }
            if (!args || args.vmSize === undefined) {
                throw new Error("Missing required property 'vmSize'");
            }
            inputs["availabilitySetId"] = args ? args.availabilitySetId : undefined;
            inputs["bootDiagnostics"] = args ? args.bootDiagnostics : undefined;
            inputs["deleteDataDisksOnTermination"] = args ? args.deleteDataDisksOnTermination : undefined;
            inputs["deleteOsDiskOnTermination"] = args ? args.deleteOsDiskOnTermination : undefined;
            inputs["identity"] = args ? args.identity : undefined;
            inputs["licenseType"] = args ? args.licenseType : undefined;
            inputs["location"] = args ? args.location : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["networkInterfaceIds"] = args ? args.networkInterfaceIds : undefined;
            inputs["osProfile"] = args ? args.osProfile : undefined;
            inputs["osProfileLinuxConfig"] = args ? args.osProfileLinuxConfig : undefined;
            inputs["osProfileSecrets"] = args ? args.osProfileSecrets : undefined;
            inputs["osProfileWindowsConfig"] = args ? args.osProfileWindowsConfig : undefined;
            inputs["plan"] = args ? args.plan : undefined;
            inputs["primaryNetworkInterfaceId"] = args ? args.primaryNetworkInterfaceId : undefined;
            inputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            inputs["storageDataDisks"] = args ? args.storageDataDisks : undefined;
            inputs["storageImageReference"] = args ? args.storageImageReference : undefined;
            inputs["storageOsDisk"] = args ? args.storageOsDisk : undefined;
            inputs["tags"] = args ? args.tags : undefined;
            inputs["vmSize"] = args ? args.vmSize : undefined;
            inputs["zones"] = args ? args.zones : undefined;
        }
        super(VirtualMachine.__kuladoType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering VirtualMachine resources.
 */
export interface VirtualMachineState {
    /**
     * The ID of the Availability Set in which the Virtual Machine should exist. Changing this forces a new resource to be created.
     */
    readonly availabilitySetId?: kulado.Input<string>;
    /**
     * A `boot_diagnostics` block.
     */
    readonly bootDiagnostics?: kulado.Input<{ enabled: kulado.Input<boolean>, storageUri: kulado.Input<string> }>;
    /**
     * Should the Data Disks (either the Managed Disks / VHD Blobs) be deleted when the Virtual Machine is destroyed? Defaults to `false`.
     */
    readonly deleteDataDisksOnTermination?: kulado.Input<boolean>;
    /**
     * Should the OS Disk (either the Managed Disk / VHD Blob) be deleted when the Virtual Machine is destroyed? Defaults to `false`.
     */
    readonly deleteOsDiskOnTermination?: kulado.Input<boolean>;
    /**
     * A `identity` block.
     */
    readonly identity?: kulado.Input<{ identityIds?: kulado.Input<kulado.Input<string>[]>, principalId?: kulado.Input<string>, type: kulado.Input<string> }>;
    /**
     * Specifies the BYOL Type for this Virtual Machine. This is only applicable to Windows Virtual Machines. Possible values are `Windows_Client` and `Windows_Server`.
     */
    readonly licenseType?: kulado.Input<string>;
    /**
     * Specifies the Azure Region where the Virtual Machine exists. Changing this forces a new resource to be created.
     */
    readonly location?: kulado.Input<string>;
    /**
     * Specifies the name of the Virtual Machine. Changing this forces a new resource to be created.
     */
    readonly name?: kulado.Input<string>;
    /**
     * A list of Network Interface ID's which should be associated with the Virtual Machine.
     */
    readonly networkInterfaceIds?: kulado.Input<kulado.Input<string>[]>;
    /**
     * An `os_profile` block. Required when `create_option` in the `storage_os_disk` block is set to `FromImage`.
     */
    readonly osProfile?: kulado.Input<{ adminPassword?: kulado.Input<string>, adminUsername: kulado.Input<string>, computerName: kulado.Input<string>, customData?: kulado.Input<string> }>;
    /**
     * A `os_profile_linux_config` block.
     */
    readonly osProfileLinuxConfig?: kulado.Input<{ disablePasswordAuthentication: kulado.Input<boolean>, sshKeys?: kulado.Input<kulado.Input<{ keyData: kulado.Input<string>, path: kulado.Input<string> }>[]> }>;
    /**
     * One or more `os_profile_secrets` blocks.
     */
    readonly osProfileSecrets?: kulado.Input<kulado.Input<{ sourceVaultId: kulado.Input<string>, vaultCertificates?: kulado.Input<kulado.Input<{ certificateStore?: kulado.Input<string>, certificateUrl: kulado.Input<string> }>[]> }>[]>;
    /**
     * A `os_profile_windows_config` block.
     */
    readonly osProfileWindowsConfig?: kulado.Input<{ additionalUnattendConfigs?: kulado.Input<kulado.Input<{ component: kulado.Input<string>, content: kulado.Input<string>, pass: kulado.Input<string>, settingName: kulado.Input<string> }>[]>, enableAutomaticUpgrades?: kulado.Input<boolean>, provisionVmAgent?: kulado.Input<boolean>, timezone?: kulado.Input<string>, winrms?: kulado.Input<kulado.Input<{ certificateUrl?: kulado.Input<string>, protocol: kulado.Input<string> }>[]> }>;
    /**
     * A `plan` block.
     */
    readonly plan?: kulado.Input<{ name: kulado.Input<string>, product: kulado.Input<string>, publisher: kulado.Input<string> }>;
    /**
     * The ID of the Network Interface (which must be attached to the Virtual Machine) which should be the Primary Network Interface for this Virtual Machine.
     */
    readonly primaryNetworkInterfaceId?: kulado.Input<string>;
    /**
     * Specifies the name of the Resource Group in which the Virtual Machine should exist. Changing this forces a new resource to be created.
     */
    readonly resourceGroupName?: kulado.Input<string>;
    /**
     * One or more `storage_data_disk` blocks.
     */
    readonly storageDataDisks?: kulado.Input<kulado.Input<{ caching?: kulado.Input<string>, createOption: kulado.Input<string>, diskSizeGb?: kulado.Input<number>, lun: kulado.Input<number>, managedDiskId?: kulado.Input<string>, managedDiskType?: kulado.Input<string>, name: kulado.Input<string>, vhdUri?: kulado.Input<string>, writeAcceleratorEnabled?: kulado.Input<boolean> }>[]>;
    /**
     * A `storage_image_reference` block.
     */
    readonly storageImageReference?: kulado.Input<{ id?: kulado.Input<string>, offer?: kulado.Input<string>, publisher?: kulado.Input<string>, sku?: kulado.Input<string>, version?: kulado.Input<string> }>;
    /**
     * A `storage_os_disk` block.
     */
    readonly storageOsDisk?: kulado.Input<{ caching?: kulado.Input<string>, createOption: kulado.Input<string>, diskSizeGb?: kulado.Input<number>, imageUri?: kulado.Input<string>, managedDiskId?: kulado.Input<string>, managedDiskType?: kulado.Input<string>, name: kulado.Input<string>, osType?: kulado.Input<string>, vhdUri?: kulado.Input<string>, writeAcceleratorEnabled?: kulado.Input<boolean> }>;
    /**
     * A mapping of tags to assign to the Virtual Machine.
     */
    readonly tags?: kulado.Input<{[key: string]: any}>;
    /**
     * Specifies the [size of the Virtual Machine](https://azure.microsoft.com/en-us/documentation/articles/virtual-machines-size-specs/).
     */
    readonly vmSize?: kulado.Input<string>;
    /**
     * A list of a single item of the Availability Zone which the Virtual Machine should be allocated in.
     */
    readonly zones?: kulado.Input<string>;
}

/**
 * The set of arguments for constructing a VirtualMachine resource.
 */
export interface VirtualMachineArgs {
    /**
     * The ID of the Availability Set in which the Virtual Machine should exist. Changing this forces a new resource to be created.
     */
    readonly availabilitySetId?: kulado.Input<string>;
    /**
     * A `boot_diagnostics` block.
     */
    readonly bootDiagnostics?: kulado.Input<{ enabled: kulado.Input<boolean>, storageUri: kulado.Input<string> }>;
    /**
     * Should the Data Disks (either the Managed Disks / VHD Blobs) be deleted when the Virtual Machine is destroyed? Defaults to `false`.
     */
    readonly deleteDataDisksOnTermination?: kulado.Input<boolean>;
    /**
     * Should the OS Disk (either the Managed Disk / VHD Blob) be deleted when the Virtual Machine is destroyed? Defaults to `false`.
     */
    readonly deleteOsDiskOnTermination?: kulado.Input<boolean>;
    /**
     * A `identity` block.
     */
    readonly identity?: kulado.Input<{ identityIds?: kulado.Input<kulado.Input<string>[]>, principalId?: kulado.Input<string>, type: kulado.Input<string> }>;
    /**
     * Specifies the BYOL Type for this Virtual Machine. This is only applicable to Windows Virtual Machines. Possible values are `Windows_Client` and `Windows_Server`.
     */
    readonly licenseType?: kulado.Input<string>;
    /**
     * Specifies the Azure Region where the Virtual Machine exists. Changing this forces a new resource to be created.
     */
    readonly location?: kulado.Input<string>;
    /**
     * Specifies the name of the Virtual Machine. Changing this forces a new resource to be created.
     */
    readonly name?: kulado.Input<string>;
    /**
     * A list of Network Interface ID's which should be associated with the Virtual Machine.
     */
    readonly networkInterfaceIds: kulado.Input<kulado.Input<string>[]>;
    /**
     * An `os_profile` block. Required when `create_option` in the `storage_os_disk` block is set to `FromImage`.
     */
    readonly osProfile?: kulado.Input<{ adminPassword?: kulado.Input<string>, adminUsername: kulado.Input<string>, computerName: kulado.Input<string>, customData?: kulado.Input<string> }>;
    /**
     * A `os_profile_linux_config` block.
     */
    readonly osProfileLinuxConfig?: kulado.Input<{ disablePasswordAuthentication: kulado.Input<boolean>, sshKeys?: kulado.Input<kulado.Input<{ keyData: kulado.Input<string>, path: kulado.Input<string> }>[]> }>;
    /**
     * One or more `os_profile_secrets` blocks.
     */
    readonly osProfileSecrets?: kulado.Input<kulado.Input<{ sourceVaultId: kulado.Input<string>, vaultCertificates?: kulado.Input<kulado.Input<{ certificateStore?: kulado.Input<string>, certificateUrl: kulado.Input<string> }>[]> }>[]>;
    /**
     * A `os_profile_windows_config` block.
     */
    readonly osProfileWindowsConfig?: kulado.Input<{ additionalUnattendConfigs?: kulado.Input<kulado.Input<{ component: kulado.Input<string>, content: kulado.Input<string>, pass: kulado.Input<string>, settingName: kulado.Input<string> }>[]>, enableAutomaticUpgrades?: kulado.Input<boolean>, provisionVmAgent?: kulado.Input<boolean>, timezone?: kulado.Input<string>, winrms?: kulado.Input<kulado.Input<{ certificateUrl?: kulado.Input<string>, protocol: kulado.Input<string> }>[]> }>;
    /**
     * A `plan` block.
     */
    readonly plan?: kulado.Input<{ name: kulado.Input<string>, product: kulado.Input<string>, publisher: kulado.Input<string> }>;
    /**
     * The ID of the Network Interface (which must be attached to the Virtual Machine) which should be the Primary Network Interface for this Virtual Machine.
     */
    readonly primaryNetworkInterfaceId?: kulado.Input<string>;
    /**
     * Specifies the name of the Resource Group in which the Virtual Machine should exist. Changing this forces a new resource to be created.
     */
    readonly resourceGroupName: kulado.Input<string>;
    /**
     * One or more `storage_data_disk` blocks.
     */
    readonly storageDataDisks?: kulado.Input<kulado.Input<{ caching?: kulado.Input<string>, createOption: kulado.Input<string>, diskSizeGb?: kulado.Input<number>, lun: kulado.Input<number>, managedDiskId?: kulado.Input<string>, managedDiskType?: kulado.Input<string>, name: kulado.Input<string>, vhdUri?: kulado.Input<string>, writeAcceleratorEnabled?: kulado.Input<boolean> }>[]>;
    /**
     * A `storage_image_reference` block.
     */
    readonly storageImageReference?: kulado.Input<{ id?: kulado.Input<string>, offer?: kulado.Input<string>, publisher?: kulado.Input<string>, sku?: kulado.Input<string>, version?: kulado.Input<string> }>;
    /**
     * A `storage_os_disk` block.
     */
    readonly storageOsDisk: kulado.Input<{ caching?: kulado.Input<string>, createOption: kulado.Input<string>, diskSizeGb?: kulado.Input<number>, imageUri?: kulado.Input<string>, managedDiskId?: kulado.Input<string>, managedDiskType?: kulado.Input<string>, name: kulado.Input<string>, osType?: kulado.Input<string>, vhdUri?: kulado.Input<string>, writeAcceleratorEnabled?: kulado.Input<boolean> }>;
    /**
     * A mapping of tags to assign to the Virtual Machine.
     */
    readonly tags?: kulado.Input<{[key: string]: any}>;
    /**
     * Specifies the [size of the Virtual Machine](https://azure.microsoft.com/en-us/documentation/articles/virtual-machines-size-specs/).
     */
    readonly vmSize: kulado.Input<string>;
    /**
     * A list of a single item of the Availability Zone which the Virtual Machine should be allocated in.
     */
    readonly zones?: kulado.Input<string>;
}
