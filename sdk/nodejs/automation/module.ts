// *** WARNING: this file was generated by the Kulado Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as kulado from "@kulado/kulado";
import * as utilities from "../utilities";

/**
 * Manages a Automation Module.
 * 
 * ## Example Usage
 * 
 * ```typescript
 * import * as kulado from "@kulado/kulado";
 * import * as azure from "@kulado/azure";
 * 
 * const exampleResourceGroup = new azure.core.ResourceGroup("example", {
 *     location: "West Europe",
 *     name: "resourceGroup1",
 * });
 * const exampleAccount = new azure.automation.Account("example", {
 *     location: exampleResourceGroup.location,
 *     name: "account1",
 *     resourceGroupName: exampleResourceGroup.name,
 *     sku: {
 *         name: "Basic",
 *     },
 * });
 * const exampleModule = new azure.automation.Module("example", {
 *     automationAccountName: exampleAccount.name,
 *     moduleLink: {
 *         uri: "https://devopsgallerystorage.blob.core.windows.net/packages/xactivedirectory.2.19.0.nupkg",
 *     },
 *     name: "xActiveDirectory",
 *     resourceGroupName: exampleResourceGroup.name,
 * });
 * ```
 *
 * > This content is derived from https://github.com/terraform-providers/terraform-provider-azurerm/blob/master/website/docs/r/automation_module.html.markdown.
 */
export class Module extends kulado.CustomResource {
    /**
     * Get an existing Module resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     */
    public static get(name: string, id: kulado.Input<kulado.ID>, state?: ModuleState, opts?: kulado.CustomResourceOptions): Module {
        return new Module(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __kuladoType = 'azure:automation/module:Module';

    /**
     * Returns true if the given object is an instance of Module.  This is designed to work even
     * when multiple copies of the Kulado SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Module {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__kuladoType'] === Module.__kuladoType;
    }

    /**
     * The name of the automation account in which the Module is created. Changing this forces a new resource to be created.
     */
    public readonly automationAccountName!: kulado.Output<string>;
    /**
     * The published Module link.
     */
    public readonly moduleLink!: kulado.Output<{ hash?: { algorithm: string, value: string }, uri: string }>;
    /**
     * Specifies the name of the Module. Changing this forces a new resource to be created.
     */
    public readonly name!: kulado.Output<string>;
    /**
     * The name of the resource group in which the Module is created. Changing this forces a new resource to be created.
     */
    public readonly resourceGroupName!: kulado.Output<string>;

    /**
     * Create a Module resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ModuleArgs, opts?: kulado.CustomResourceOptions)
    constructor(name: string, argsOrState?: ModuleArgs | ModuleState, opts?: kulado.CustomResourceOptions) {
        let inputs: kulado.Inputs = {};
        if (opts && opts.id) {
            const state = argsOrState as ModuleState | undefined;
            inputs["automationAccountName"] = state ? state.automationAccountName : undefined;
            inputs["moduleLink"] = state ? state.moduleLink : undefined;
            inputs["name"] = state ? state.name : undefined;
            inputs["resourceGroupName"] = state ? state.resourceGroupName : undefined;
        } else {
            const args = argsOrState as ModuleArgs | undefined;
            if (!args || args.automationAccountName === undefined) {
                throw new Error("Missing required property 'automationAccountName'");
            }
            if (!args || args.moduleLink === undefined) {
                throw new Error("Missing required property 'moduleLink'");
            }
            if (!args || args.resourceGroupName === undefined) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            inputs["automationAccountName"] = args ? args.automationAccountName : undefined;
            inputs["moduleLink"] = args ? args.moduleLink : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
        }
        super(Module.__kuladoType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Module resources.
 */
export interface ModuleState {
    /**
     * The name of the automation account in which the Module is created. Changing this forces a new resource to be created.
     */
    readonly automationAccountName?: kulado.Input<string>;
    /**
     * The published Module link.
     */
    readonly moduleLink?: kulado.Input<{ hash?: kulado.Input<{ algorithm: kulado.Input<string>, value: kulado.Input<string> }>, uri: kulado.Input<string> }>;
    /**
     * Specifies the name of the Module. Changing this forces a new resource to be created.
     */
    readonly name?: kulado.Input<string>;
    /**
     * The name of the resource group in which the Module is created. Changing this forces a new resource to be created.
     */
    readonly resourceGroupName?: kulado.Input<string>;
}

/**
 * The set of arguments for constructing a Module resource.
 */
export interface ModuleArgs {
    /**
     * The name of the automation account in which the Module is created. Changing this forces a new resource to be created.
     */
    readonly automationAccountName: kulado.Input<string>;
    /**
     * The published Module link.
     */
    readonly moduleLink: kulado.Input<{ hash?: kulado.Input<{ algorithm: kulado.Input<string>, value: kulado.Input<string> }>, uri: kulado.Input<string> }>;
    /**
     * Specifies the name of the Module. Changing this forces a new resource to be created.
     */
    readonly name?: kulado.Input<string>;
    /**
     * The name of the resource group in which the Module is created. Changing this forces a new resource to be created.
     */
    readonly resourceGroupName: kulado.Input<string>;
}
