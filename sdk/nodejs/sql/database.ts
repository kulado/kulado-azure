// *** WARNING: this file was generated by the Kulado Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as kulado from "@kulado/kulado";
import * as utilities from "../utilities";

/**
 * Allows you to manage an Azure SQL Database
 * 
 * ## Example Usage
 * 
 * ```typescript
 * import * as kulado from "@kulado/kulado";
 * import * as azure from "@kulado/azure";
 * 
 * const testResourceGroup = new azure.core.ResourceGroup("test", {
 *     location: "West US",
 *     name: "acceptanceTestResourceGroup1",
 * });
 * const testSqlServer = new azure.sql.SqlServer("test", {
 *     administratorLogin: "4dm1n157r470r",
 *     administratorLoginPassword: "4-v3ry-53cr37-p455w0rd",
 *     location: "West US",
 *     name: "mysqlserver",
 *     resourceGroupName: testResourceGroup.name,
 *     version: "12.0",
 * });
 * const testDatabase = new azure.sql.Database("test", {
 *     location: "West US",
 *     name: "mysqldatabase",
 *     resourceGroupName: testResourceGroup.name,
 *     serverName: testSqlServer.name,
 *     tags: {
 *         environment: "production",
 *     },
 * });
 * ```
 *
 * > This content is derived from https://github.com/terraform-providers/terraform-provider-azurerm/blob/master/website/docs/r/sql_database.html.markdown.
 */
export class Database extends kulado.CustomResource {
    /**
     * Get an existing Database resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     */
    public static get(name: string, id: kulado.Input<kulado.ID>, state?: DatabaseState, opts?: kulado.CustomResourceOptions): Database {
        return new Database(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __kuladoType = 'azure:sql/database:Database';

    /**
     * Returns true if the given object is an instance of Database.  This is designed to work even
     * when multiple copies of the Kulado SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Database {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__kuladoType'] === Database.__kuladoType;
    }

    /**
     * The name of the collation. Applies only if `create_mode` is `Default`.  Azure default is `SQL_LATIN1_GENERAL_CP1_CI_AS`. Changing this forces a new resource to be created.
     */
    public readonly collation!: kulado.Output<string>;
    /**
     * Specifies how to create the database. Must be either `Default` to create a new database or `PointInTimeRestore` to restore from a snapshot. Defaults to `Default`.
     */
    public readonly createMode!: kulado.Output<string | undefined>;
    /**
     * The creation date of the SQL Database.
     */
    public /*out*/ readonly creationDate!: kulado.Output<string>;
    /**
     * The default secondary location of the SQL Database.
     */
    public /*out*/ readonly defaultSecondaryLocation!: kulado.Output<string>;
    /**
     * The edition of the database to be created. Applies only if `create_mode` is `Default`. Valid values are: `Basic`, `Standard`, `Premium`, `DataWarehouse`, `Business`, `BusinessCritical`, `Free`, `GeneralPurpose`, `Hyperscale`, `Premium`, `PremiumRS`, `Standard`, `Stretch`, `System`, `System2`, or `Web`. Please see [Azure SQL Database Service Tiers](https://azure.microsoft.com/en-gb/documentation/articles/sql-database-service-tiers/).
     */
    public readonly edition!: kulado.Output<string>;
    /**
     * The name of the elastic database pool.
     */
    public readonly elasticPoolName!: kulado.Output<string>;
    public /*out*/ readonly encryption!: kulado.Output<string>;
    /**
     * A Database Import block as documented below. `create_mode` must be set to `Default`.
     */
    public readonly import!: kulado.Output<{ administratorLogin: string, administratorLoginPassword: string, authenticationType: string, operationMode?: string, storageKey: string, storageKeyType: string, storageUri: string } | undefined>;
    /**
     * Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
     */
    public readonly location!: kulado.Output<string>;
    /**
     * The maximum size that the database can grow to. Applies only if `create_mode` is `Default`.  Please see [Azure SQL Database Service Tiers](https://azure.microsoft.com/en-gb/documentation/articles/sql-database-service-tiers/).
     */
    public readonly maxSizeBytes!: kulado.Output<string>;
    /**
     * The name of the database.
     */
    public readonly name!: kulado.Output<string>;
    /**
     * Read-only connections will be redirected to a high-available replica. Please see [Use read-only replicas to load-balance read-only query workloads](https://docs.microsoft.com/en-us/azure/sql-database/sql-database-read-scale-out).
     */
    public readonly readScale!: kulado.Output<boolean | undefined>;
    /**
     * Use `requested_service_objective_id` or `requested_service_objective_name` to set the performance level for the database.
     * Please see [Azure SQL Database Service Tiers](https://azure.microsoft.com/en-gb/documentation/articles/sql-database-service-tiers/).
     */
    public readonly requestedServiceObjectiveId!: kulado.Output<string>;
    /**
     * Use `requested_service_objective_name` or `requested_service_objective_id` to set the performance level for the database. Valid values are: `S0`, `S1`, `S2`, `S3`, `P1`, `P2`, `P4`, `P6`, `P11` and `ElasticPool`.  Please see [Azure SQL Database Service Tiers](https://azure.microsoft.com/en-gb/documentation/articles/sql-database-service-tiers/).
     */
    public readonly requestedServiceObjectiveName!: kulado.Output<string>;
    /**
     * The name of the resource group in which to create the database.  This must be the same as Database Server resource group currently.
     */
    public readonly resourceGroupName!: kulado.Output<string>;
    /**
     * The point in time for the restore. Only applies if `create_mode` is `PointInTimeRestore` e.g. 2013-11-08T22:00:40Z
     */
    public readonly restorePointInTime!: kulado.Output<string>;
    /**
     * The name of the SQL Server on which to create the database.
     */
    public readonly serverName!: kulado.Output<string>;
    /**
     * The deletion date time of the source database. Only applies to deleted databases where `create_mode` is `PointInTimeRestore`.
     */
    public readonly sourceDatabaseDeletionDate!: kulado.Output<string>;
    /**
     * The URI of the source database if `create_mode` value is not `Default`.
     */
    public readonly sourceDatabaseId!: kulado.Output<string>;
    /**
     * A mapping of tags to assign to the resource.
     */
    public readonly tags!: kulado.Output<{[key: string]: any}>;
    /**
     * Threat detection policy configuration. The `threat_detection_policy` block supports fields documented below.
     */
    public readonly threatDetectionPolicy!: kulado.Output<{ disabledAlerts?: string[], emailAccountAdmins?: string, emailAddresses?: string[], retentionDays?: number, state?: string, storageAccountAccessKey?: string, storageEndpoint?: string, useServerDefault?: string }>;

    /**
     * Create a Database resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DatabaseArgs, opts?: kulado.CustomResourceOptions)
    constructor(name: string, argsOrState?: DatabaseArgs | DatabaseState, opts?: kulado.CustomResourceOptions) {
        let inputs: kulado.Inputs = {};
        if (opts && opts.id) {
            const state = argsOrState as DatabaseState | undefined;
            inputs["collation"] = state ? state.collation : undefined;
            inputs["createMode"] = state ? state.createMode : undefined;
            inputs["creationDate"] = state ? state.creationDate : undefined;
            inputs["defaultSecondaryLocation"] = state ? state.defaultSecondaryLocation : undefined;
            inputs["edition"] = state ? state.edition : undefined;
            inputs["elasticPoolName"] = state ? state.elasticPoolName : undefined;
            inputs["encryption"] = state ? state.encryption : undefined;
            inputs["import"] = state ? state.import : undefined;
            inputs["location"] = state ? state.location : undefined;
            inputs["maxSizeBytes"] = state ? state.maxSizeBytes : undefined;
            inputs["name"] = state ? state.name : undefined;
            inputs["readScale"] = state ? state.readScale : undefined;
            inputs["requestedServiceObjectiveId"] = state ? state.requestedServiceObjectiveId : undefined;
            inputs["requestedServiceObjectiveName"] = state ? state.requestedServiceObjectiveName : undefined;
            inputs["resourceGroupName"] = state ? state.resourceGroupName : undefined;
            inputs["restorePointInTime"] = state ? state.restorePointInTime : undefined;
            inputs["serverName"] = state ? state.serverName : undefined;
            inputs["sourceDatabaseDeletionDate"] = state ? state.sourceDatabaseDeletionDate : undefined;
            inputs["sourceDatabaseId"] = state ? state.sourceDatabaseId : undefined;
            inputs["tags"] = state ? state.tags : undefined;
            inputs["threatDetectionPolicy"] = state ? state.threatDetectionPolicy : undefined;
        } else {
            const args = argsOrState as DatabaseArgs | undefined;
            if (!args || args.resourceGroupName === undefined) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            if (!args || args.serverName === undefined) {
                throw new Error("Missing required property 'serverName'");
            }
            inputs["collation"] = args ? args.collation : undefined;
            inputs["createMode"] = args ? args.createMode : undefined;
            inputs["edition"] = args ? args.edition : undefined;
            inputs["elasticPoolName"] = args ? args.elasticPoolName : undefined;
            inputs["import"] = args ? args.import : undefined;
            inputs["location"] = args ? args.location : undefined;
            inputs["maxSizeBytes"] = args ? args.maxSizeBytes : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["readScale"] = args ? args.readScale : undefined;
            inputs["requestedServiceObjectiveId"] = args ? args.requestedServiceObjectiveId : undefined;
            inputs["requestedServiceObjectiveName"] = args ? args.requestedServiceObjectiveName : undefined;
            inputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            inputs["restorePointInTime"] = args ? args.restorePointInTime : undefined;
            inputs["serverName"] = args ? args.serverName : undefined;
            inputs["sourceDatabaseDeletionDate"] = args ? args.sourceDatabaseDeletionDate : undefined;
            inputs["sourceDatabaseId"] = args ? args.sourceDatabaseId : undefined;
            inputs["tags"] = args ? args.tags : undefined;
            inputs["threatDetectionPolicy"] = args ? args.threatDetectionPolicy : undefined;
            inputs["creationDate"] = undefined /*out*/;
            inputs["defaultSecondaryLocation"] = undefined /*out*/;
            inputs["encryption"] = undefined /*out*/;
        }
        super(Database.__kuladoType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Database resources.
 */
export interface DatabaseState {
    /**
     * The name of the collation. Applies only if `create_mode` is `Default`.  Azure default is `SQL_LATIN1_GENERAL_CP1_CI_AS`. Changing this forces a new resource to be created.
     */
    readonly collation?: kulado.Input<string>;
    /**
     * Specifies how to create the database. Must be either `Default` to create a new database or `PointInTimeRestore` to restore from a snapshot. Defaults to `Default`.
     */
    readonly createMode?: kulado.Input<string>;
    /**
     * The creation date of the SQL Database.
     */
    readonly creationDate?: kulado.Input<string>;
    /**
     * The default secondary location of the SQL Database.
     */
    readonly defaultSecondaryLocation?: kulado.Input<string>;
    /**
     * The edition of the database to be created. Applies only if `create_mode` is `Default`. Valid values are: `Basic`, `Standard`, `Premium`, `DataWarehouse`, `Business`, `BusinessCritical`, `Free`, `GeneralPurpose`, `Hyperscale`, `Premium`, `PremiumRS`, `Standard`, `Stretch`, `System`, `System2`, or `Web`. Please see [Azure SQL Database Service Tiers](https://azure.microsoft.com/en-gb/documentation/articles/sql-database-service-tiers/).
     */
    readonly edition?: kulado.Input<string>;
    /**
     * The name of the elastic database pool.
     */
    readonly elasticPoolName?: kulado.Input<string>;
    readonly encryption?: kulado.Input<string>;
    /**
     * A Database Import block as documented below. `create_mode` must be set to `Default`.
     */
    readonly import?: kulado.Input<{ administratorLogin: kulado.Input<string>, administratorLoginPassword: kulado.Input<string>, authenticationType: kulado.Input<string>, operationMode?: kulado.Input<string>, storageKey: kulado.Input<string>, storageKeyType: kulado.Input<string>, storageUri: kulado.Input<string> }>;
    /**
     * Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
     */
    readonly location?: kulado.Input<string>;
    /**
     * The maximum size that the database can grow to. Applies only if `create_mode` is `Default`.  Please see [Azure SQL Database Service Tiers](https://azure.microsoft.com/en-gb/documentation/articles/sql-database-service-tiers/).
     */
    readonly maxSizeBytes?: kulado.Input<string>;
    /**
     * The name of the database.
     */
    readonly name?: kulado.Input<string>;
    /**
     * Read-only connections will be redirected to a high-available replica. Please see [Use read-only replicas to load-balance read-only query workloads](https://docs.microsoft.com/en-us/azure/sql-database/sql-database-read-scale-out).
     */
    readonly readScale?: kulado.Input<boolean>;
    /**
     * Use `requested_service_objective_id` or `requested_service_objective_name` to set the performance level for the database.
     * Please see [Azure SQL Database Service Tiers](https://azure.microsoft.com/en-gb/documentation/articles/sql-database-service-tiers/).
     */
    readonly requestedServiceObjectiveId?: kulado.Input<string>;
    /**
     * Use `requested_service_objective_name` or `requested_service_objective_id` to set the performance level for the database. Valid values are: `S0`, `S1`, `S2`, `S3`, `P1`, `P2`, `P4`, `P6`, `P11` and `ElasticPool`.  Please see [Azure SQL Database Service Tiers](https://azure.microsoft.com/en-gb/documentation/articles/sql-database-service-tiers/).
     */
    readonly requestedServiceObjectiveName?: kulado.Input<string>;
    /**
     * The name of the resource group in which to create the database.  This must be the same as Database Server resource group currently.
     */
    readonly resourceGroupName?: kulado.Input<string>;
    /**
     * The point in time for the restore. Only applies if `create_mode` is `PointInTimeRestore` e.g. 2013-11-08T22:00:40Z
     */
    readonly restorePointInTime?: kulado.Input<string>;
    /**
     * The name of the SQL Server on which to create the database.
     */
    readonly serverName?: kulado.Input<string>;
    /**
     * The deletion date time of the source database. Only applies to deleted databases where `create_mode` is `PointInTimeRestore`.
     */
    readonly sourceDatabaseDeletionDate?: kulado.Input<string>;
    /**
     * The URI of the source database if `create_mode` value is not `Default`.
     */
    readonly sourceDatabaseId?: kulado.Input<string>;
    /**
     * A mapping of tags to assign to the resource.
     */
    readonly tags?: kulado.Input<{[key: string]: any}>;
    /**
     * Threat detection policy configuration. The `threat_detection_policy` block supports fields documented below.
     */
    readonly threatDetectionPolicy?: kulado.Input<{ disabledAlerts?: kulado.Input<kulado.Input<string>[]>, emailAccountAdmins?: kulado.Input<string>, emailAddresses?: kulado.Input<kulado.Input<string>[]>, retentionDays?: kulado.Input<number>, state?: kulado.Input<string>, storageAccountAccessKey?: kulado.Input<string>, storageEndpoint?: kulado.Input<string>, useServerDefault?: kulado.Input<string> }>;
}

/**
 * The set of arguments for constructing a Database resource.
 */
export interface DatabaseArgs {
    /**
     * The name of the collation. Applies only if `create_mode` is `Default`.  Azure default is `SQL_LATIN1_GENERAL_CP1_CI_AS`. Changing this forces a new resource to be created.
     */
    readonly collation?: kulado.Input<string>;
    /**
     * Specifies how to create the database. Must be either `Default` to create a new database or `PointInTimeRestore` to restore from a snapshot. Defaults to `Default`.
     */
    readonly createMode?: kulado.Input<string>;
    /**
     * The edition of the database to be created. Applies only if `create_mode` is `Default`. Valid values are: `Basic`, `Standard`, `Premium`, `DataWarehouse`, `Business`, `BusinessCritical`, `Free`, `GeneralPurpose`, `Hyperscale`, `Premium`, `PremiumRS`, `Standard`, `Stretch`, `System`, `System2`, or `Web`. Please see [Azure SQL Database Service Tiers](https://azure.microsoft.com/en-gb/documentation/articles/sql-database-service-tiers/).
     */
    readonly edition?: kulado.Input<string>;
    /**
     * The name of the elastic database pool.
     */
    readonly elasticPoolName?: kulado.Input<string>;
    /**
     * A Database Import block as documented below. `create_mode` must be set to `Default`.
     */
    readonly import?: kulado.Input<{ administratorLogin: kulado.Input<string>, administratorLoginPassword: kulado.Input<string>, authenticationType: kulado.Input<string>, operationMode?: kulado.Input<string>, storageKey: kulado.Input<string>, storageKeyType: kulado.Input<string>, storageUri: kulado.Input<string> }>;
    /**
     * Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
     */
    readonly location?: kulado.Input<string>;
    /**
     * The maximum size that the database can grow to. Applies only if `create_mode` is `Default`.  Please see [Azure SQL Database Service Tiers](https://azure.microsoft.com/en-gb/documentation/articles/sql-database-service-tiers/).
     */
    readonly maxSizeBytes?: kulado.Input<string>;
    /**
     * The name of the database.
     */
    readonly name?: kulado.Input<string>;
    /**
     * Read-only connections will be redirected to a high-available replica. Please see [Use read-only replicas to load-balance read-only query workloads](https://docs.microsoft.com/en-us/azure/sql-database/sql-database-read-scale-out).
     */
    readonly readScale?: kulado.Input<boolean>;
    /**
     * Use `requested_service_objective_id` or `requested_service_objective_name` to set the performance level for the database.
     * Please see [Azure SQL Database Service Tiers](https://azure.microsoft.com/en-gb/documentation/articles/sql-database-service-tiers/).
     */
    readonly requestedServiceObjectiveId?: kulado.Input<string>;
    /**
     * Use `requested_service_objective_name` or `requested_service_objective_id` to set the performance level for the database. Valid values are: `S0`, `S1`, `S2`, `S3`, `P1`, `P2`, `P4`, `P6`, `P11` and `ElasticPool`.  Please see [Azure SQL Database Service Tiers](https://azure.microsoft.com/en-gb/documentation/articles/sql-database-service-tiers/).
     */
    readonly requestedServiceObjectiveName?: kulado.Input<string>;
    /**
     * The name of the resource group in which to create the database.  This must be the same as Database Server resource group currently.
     */
    readonly resourceGroupName: kulado.Input<string>;
    /**
     * The point in time for the restore. Only applies if `create_mode` is `PointInTimeRestore` e.g. 2013-11-08T22:00:40Z
     */
    readonly restorePointInTime?: kulado.Input<string>;
    /**
     * The name of the SQL Server on which to create the database.
     */
    readonly serverName: kulado.Input<string>;
    /**
     * The deletion date time of the source database. Only applies to deleted databases where `create_mode` is `PointInTimeRestore`.
     */
    readonly sourceDatabaseDeletionDate?: kulado.Input<string>;
    /**
     * The URI of the source database if `create_mode` value is not `Default`.
     */
    readonly sourceDatabaseId?: kulado.Input<string>;
    /**
     * A mapping of tags to assign to the resource.
     */
    readonly tags?: kulado.Input<{[key: string]: any}>;
    /**
     * Threat detection policy configuration. The `threat_detection_policy` block supports fields documented below.
     */
    readonly threatDetectionPolicy?: kulado.Input<{ disabledAlerts?: kulado.Input<kulado.Input<string>[]>, emailAccountAdmins?: kulado.Input<string>, emailAddresses?: kulado.Input<kulado.Input<string>[]>, retentionDays?: kulado.Input<number>, state?: kulado.Input<string>, storageAccountAccessKey?: kulado.Input<string>, storageEndpoint?: kulado.Input<string>, useServerDefault?: kulado.Input<string> }>;
}
