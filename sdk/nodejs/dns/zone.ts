// *** WARNING: this file was generated by the Kulado Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as kulado from "@kulado/kulado";
import * as utilities from "../utilities";

/**
 * Enables you to manage DNS zones within Azure DNS. These zones are hosted on Azure's name servers to which you can delegate the zone from the parent domain.
 * 
 * ## Example Usage
 * 
 * ```typescript
 * import * as kulado from "@kulado/kulado";
 * import * as azure from "@kulado/azure";
 * 
 * const testResourceGroup = new azure.core.ResourceGroup("test", {
 *     location: "West US",
 *     name: "acceptanceTestResourceGroup1",
 * });
 * const testZone = new azure.dns.Zone("test", {
 *     name: "mydomain.com",
 *     resourceGroupName: testResourceGroup.name,
 *     zoneType: "Public",
 * });
 * const testPrivate = new azure.dns.Zone("test_private", {
 *     name: "mydomain.com",
 *     resourceGroupName: testResourceGroup.name,
 *     zoneType: "Private",
 * });
 * ```
 *
 * > This content is derived from https://github.com/terraform-providers/terraform-provider-azurerm/blob/master/website/docs/r/dns_zone.html.markdown.
 */
export class Zone extends kulado.CustomResource {
    /**
     * Get an existing Zone resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     */
    public static get(name: string, id: kulado.Input<kulado.ID>, state?: ZoneState, opts?: kulado.CustomResourceOptions): Zone {
        return new Zone(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __kuladoType = 'azure:dns/zone:Zone';

    /**
     * Returns true if the given object is an instance of Zone.  This is designed to work even
     * when multiple copies of the Kulado SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Zone {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__kuladoType'] === Zone.__kuladoType;
    }

    /**
     * (Optional) Maximum number of Records in the zone. Defaults to `1000`.
     */
    public /*out*/ readonly maxNumberOfRecordSets!: kulado.Output<number>;
    /**
     * The name of the DNS Zone. Must be a valid domain name.
     */
    public readonly name!: kulado.Output<string>;
    /**
     * (Optional) A list of values that make up the NS record for the zone.
     */
    public /*out*/ readonly nameServers!: kulado.Output<string[]>;
    /**
     * (Optional) The number of records already in the zone.
     */
    public /*out*/ readonly numberOfRecordSets!: kulado.Output<number>;
    /**
     * A list of Virtual Network ID's that register hostnames in this DNS zone. This field can only be set when `zone_type` is set to `Private`.
     */
    public readonly registrationVirtualNetworkIds!: kulado.Output<string[] | undefined>;
    /**
     * A list of Virtual Network ID's that resolve records in this DNS zone. This field can only be set when `zone_type` is set to `Private`.
     */
    public readonly resolutionVirtualNetworkIds!: kulado.Output<string[] | undefined>;
    /**
     * Specifies the resource group where the resource exists. Changing this forces a new resource to be created.
     */
    public readonly resourceGroupName!: kulado.Output<string>;
    /**
     * A mapping of tags to assign to the resource.
     */
    public readonly tags!: kulado.Output<{[key: string]: any}>;
    /**
     * Specifies the type of this DNS zone. Possible values are `Public` or `Private` (Defaults to `Public`).
     */
    public readonly zoneType!: kulado.Output<string | undefined>;

    /**
     * Create a Zone resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ZoneArgs, opts?: kulado.CustomResourceOptions)
    constructor(name: string, argsOrState?: ZoneArgs | ZoneState, opts?: kulado.CustomResourceOptions) {
        let inputs: kulado.Inputs = {};
        if (opts && opts.id) {
            const state = argsOrState as ZoneState | undefined;
            inputs["maxNumberOfRecordSets"] = state ? state.maxNumberOfRecordSets : undefined;
            inputs["name"] = state ? state.name : undefined;
            inputs["nameServers"] = state ? state.nameServers : undefined;
            inputs["numberOfRecordSets"] = state ? state.numberOfRecordSets : undefined;
            inputs["registrationVirtualNetworkIds"] = state ? state.registrationVirtualNetworkIds : undefined;
            inputs["resolutionVirtualNetworkIds"] = state ? state.resolutionVirtualNetworkIds : undefined;
            inputs["resourceGroupName"] = state ? state.resourceGroupName : undefined;
            inputs["tags"] = state ? state.tags : undefined;
            inputs["zoneType"] = state ? state.zoneType : undefined;
        } else {
            const args = argsOrState as ZoneArgs | undefined;
            if (!args || args.resourceGroupName === undefined) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            inputs["name"] = args ? args.name : undefined;
            inputs["registrationVirtualNetworkIds"] = args ? args.registrationVirtualNetworkIds : undefined;
            inputs["resolutionVirtualNetworkIds"] = args ? args.resolutionVirtualNetworkIds : undefined;
            inputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            inputs["tags"] = args ? args.tags : undefined;
            inputs["zoneType"] = args ? args.zoneType : undefined;
            inputs["maxNumberOfRecordSets"] = undefined /*out*/;
            inputs["nameServers"] = undefined /*out*/;
            inputs["numberOfRecordSets"] = undefined /*out*/;
        }
        super(Zone.__kuladoType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Zone resources.
 */
export interface ZoneState {
    /**
     * (Optional) Maximum number of Records in the zone. Defaults to `1000`.
     */
    readonly maxNumberOfRecordSets?: kulado.Input<number>;
    /**
     * The name of the DNS Zone. Must be a valid domain name.
     */
    readonly name?: kulado.Input<string>;
    /**
     * (Optional) A list of values that make up the NS record for the zone.
     */
    readonly nameServers?: kulado.Input<kulado.Input<string>[]>;
    /**
     * (Optional) The number of records already in the zone.
     */
    readonly numberOfRecordSets?: kulado.Input<number>;
    /**
     * A list of Virtual Network ID's that register hostnames in this DNS zone. This field can only be set when `zone_type` is set to `Private`.
     */
    readonly registrationVirtualNetworkIds?: kulado.Input<kulado.Input<string>[]>;
    /**
     * A list of Virtual Network ID's that resolve records in this DNS zone. This field can only be set when `zone_type` is set to `Private`.
     */
    readonly resolutionVirtualNetworkIds?: kulado.Input<kulado.Input<string>[]>;
    /**
     * Specifies the resource group where the resource exists. Changing this forces a new resource to be created.
     */
    readonly resourceGroupName?: kulado.Input<string>;
    /**
     * A mapping of tags to assign to the resource.
     */
    readonly tags?: kulado.Input<{[key: string]: any}>;
    /**
     * Specifies the type of this DNS zone. Possible values are `Public` or `Private` (Defaults to `Public`).
     */
    readonly zoneType?: kulado.Input<string>;
}

/**
 * The set of arguments for constructing a Zone resource.
 */
export interface ZoneArgs {
    /**
     * The name of the DNS Zone. Must be a valid domain name.
     */
    readonly name?: kulado.Input<string>;
    /**
     * A list of Virtual Network ID's that register hostnames in this DNS zone. This field can only be set when `zone_type` is set to `Private`.
     */
    readonly registrationVirtualNetworkIds?: kulado.Input<kulado.Input<string>[]>;
    /**
     * A list of Virtual Network ID's that resolve records in this DNS zone. This field can only be set when `zone_type` is set to `Private`.
     */
    readonly resolutionVirtualNetworkIds?: kulado.Input<kulado.Input<string>[]>;
    /**
     * Specifies the resource group where the resource exists. Changing this forces a new resource to be created.
     */
    readonly resourceGroupName: kulado.Input<string>;
    /**
     * A mapping of tags to assign to the resource.
     */
    readonly tags?: kulado.Input<{[key: string]: any}>;
    /**
     * Specifies the type of this DNS zone. Possible values are `Public` or `Private` (Defaults to `Public`).
     */
    readonly zoneType?: kulado.Input<string>;
}
