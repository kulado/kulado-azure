// *** WARNING: this file was generated by the Kulado Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as kulado from "@kulado/kulado";
import * as utilities from "../utilities";

/**
 * Manage a Pipeline inside a Azure Data Factory.
 * 
 * ## Example Usage
 * 
 * ```typescript
 * import * as kulado from "@kulado/kulado";
 * import * as azure from "@kulado/azure";
 * 
 * const exampleResourceGroup = new azure.core.ResourceGroup("example", {
 *     location: "northeurope",
 *     name: "example",
 * });
 * const exampleFactory = new azure.datafactory.Factory("example", {
 *     location: exampleResourceGroup.location,
 *     name: "example",
 *     resourceGroupName: exampleResourceGroup.name,
 * });
 * const examplePipeline = new azure.datafactory.Pipeline("example", {
 *     dataFactoryName: exampleFactory.name,
 *     name: "example",
 *     resourceGroupName: exampleResourceGroup.name,
 * });
 * ```
 *
 * > This content is derived from https://github.com/terraform-providers/terraform-provider-azurerm/blob/master/website/docs/r/data_factory_pipeline.html.markdown.
 */
export class Pipeline extends kulado.CustomResource {
    /**
     * Get an existing Pipeline resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     */
    public static get(name: string, id: kulado.Input<kulado.ID>, state?: PipelineState, opts?: kulado.CustomResourceOptions): Pipeline {
        return new Pipeline(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __kuladoType = 'azure:datafactory/pipeline:Pipeline';

    /**
     * Returns true if the given object is an instance of Pipeline.  This is designed to work even
     * when multiple copies of the Kulado SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Pipeline {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__kuladoType'] === Pipeline.__kuladoType;
    }

    /**
     * List of tags that can be used for describing the Data Factory Pipeline.
     */
    public readonly annotations!: kulado.Output<string[] | undefined>;
    /**
     * The Data Factory name in which to associate the Pipeline with. Changing this forces a new resource.
     */
    public readonly dataFactoryName!: kulado.Output<string>;
    /**
     * The description for the Data Factory Pipeline.
     */
    public readonly description!: kulado.Output<string | undefined>;
    /**
     * Specifies the name of the Data Factory Pipeline. Changing this forces a new resource to be created. Must be globally unique. See the [Microsoft documentation](https://docs.microsoft.com/en-us/azure/data-factory/naming-rules) for all restrictions.
     */
    public readonly name!: kulado.Output<string>;
    /**
     * A map of parameters to associate with the Data Factory Pipeline.
     */
    public readonly parameters!: kulado.Output<{[key: string]: any} | undefined>;
    /**
     * The name of the resource group in which to create the Data Factory Pipeline. Changing this forces a new resource
     */
    public readonly resourceGroupName!: kulado.Output<string>;
    /**
     * A map of variables to associate with the Data Factory Pipeline.
     */
    public readonly variables!: kulado.Output<{[key: string]: any} | undefined>;

    /**
     * Create a Pipeline resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: PipelineArgs, opts?: kulado.CustomResourceOptions)
    constructor(name: string, argsOrState?: PipelineArgs | PipelineState, opts?: kulado.CustomResourceOptions) {
        let inputs: kulado.Inputs = {};
        if (opts && opts.id) {
            const state = argsOrState as PipelineState | undefined;
            inputs["annotations"] = state ? state.annotations : undefined;
            inputs["dataFactoryName"] = state ? state.dataFactoryName : undefined;
            inputs["description"] = state ? state.description : undefined;
            inputs["name"] = state ? state.name : undefined;
            inputs["parameters"] = state ? state.parameters : undefined;
            inputs["resourceGroupName"] = state ? state.resourceGroupName : undefined;
            inputs["variables"] = state ? state.variables : undefined;
        } else {
            const args = argsOrState as PipelineArgs | undefined;
            if (!args || args.dataFactoryName === undefined) {
                throw new Error("Missing required property 'dataFactoryName'");
            }
            if (!args || args.resourceGroupName === undefined) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            inputs["annotations"] = args ? args.annotations : undefined;
            inputs["dataFactoryName"] = args ? args.dataFactoryName : undefined;
            inputs["description"] = args ? args.description : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["parameters"] = args ? args.parameters : undefined;
            inputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            inputs["variables"] = args ? args.variables : undefined;
        }
        super(Pipeline.__kuladoType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Pipeline resources.
 */
export interface PipelineState {
    /**
     * List of tags that can be used for describing the Data Factory Pipeline.
     */
    readonly annotations?: kulado.Input<kulado.Input<string>[]>;
    /**
     * The Data Factory name in which to associate the Pipeline with. Changing this forces a new resource.
     */
    readonly dataFactoryName?: kulado.Input<string>;
    /**
     * The description for the Data Factory Pipeline.
     */
    readonly description?: kulado.Input<string>;
    /**
     * Specifies the name of the Data Factory Pipeline. Changing this forces a new resource to be created. Must be globally unique. See the [Microsoft documentation](https://docs.microsoft.com/en-us/azure/data-factory/naming-rules) for all restrictions.
     */
    readonly name?: kulado.Input<string>;
    /**
     * A map of parameters to associate with the Data Factory Pipeline.
     */
    readonly parameters?: kulado.Input<{[key: string]: any}>;
    /**
     * The name of the resource group in which to create the Data Factory Pipeline. Changing this forces a new resource
     */
    readonly resourceGroupName?: kulado.Input<string>;
    /**
     * A map of variables to associate with the Data Factory Pipeline.
     */
    readonly variables?: kulado.Input<{[key: string]: any}>;
}

/**
 * The set of arguments for constructing a Pipeline resource.
 */
export interface PipelineArgs {
    /**
     * List of tags that can be used for describing the Data Factory Pipeline.
     */
    readonly annotations?: kulado.Input<kulado.Input<string>[]>;
    /**
     * The Data Factory name in which to associate the Pipeline with. Changing this forces a new resource.
     */
    readonly dataFactoryName: kulado.Input<string>;
    /**
     * The description for the Data Factory Pipeline.
     */
    readonly description?: kulado.Input<string>;
    /**
     * Specifies the name of the Data Factory Pipeline. Changing this forces a new resource to be created. Must be globally unique. See the [Microsoft documentation](https://docs.microsoft.com/en-us/azure/data-factory/naming-rules) for all restrictions.
     */
    readonly name?: kulado.Input<string>;
    /**
     * A map of parameters to associate with the Data Factory Pipeline.
     */
    readonly parameters?: kulado.Input<{[key: string]: any}>;
    /**
     * The name of the resource group in which to create the Data Factory Pipeline. Changing this forces a new resource
     */
    readonly resourceGroupName: kulado.Input<string>;
    /**
     * A map of variables to associate with the Data Factory Pipeline.
     */
    readonly variables?: kulado.Input<{[key: string]: any}>;
}
