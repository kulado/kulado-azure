// *** WARNING: this file was generated by the Kulado Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as kulado from "@kulado/kulado";
import * as utilities from "../utilities";

/**
 * Manages a AutoScale Setting which can be applied to Virtual Machine Scale Sets, App Services and other scalable resources.
 * 
 * ## Example Usage
 * 
 * ```typescript
 * import * as kulado from "@kulado/kulado";
 * import * as azure from "@kulado/azure";
 * 
 * const testResourceGroup = new azure.core.ResourceGroup("test", {
 *     location: "West US",
 *     name: "autoscalingTest",
 * });
 * const testScaleSet = new azure.compute.ScaleSet("test", {});
 * const testAutoscaleSetting = new azure.monitoring.AutoscaleSetting("test", {
 *     location: testResourceGroup.location,
 *     name: "myAutoscaleSetting",
 *     notification: {
 *         email: {
 *             customEmails: ["admin@contoso.com"],
 *             sendToSubscriptionAdministrator: true,
 *             sendToSubscriptionCoAdministrator: true,
 *         },
 *     },
 *     profiles: [{
 *         capacity: {
 *             default: 1,
 *             maximum: 10,
 *             minimum: 1,
 *         },
 *         name: "defaultProfile",
 *         rules: [
 *             {
 *                 metricTrigger: {
 *                     metricName: "Percentage CPU",
 *                     metricResourceId: testScaleSet.id,
 *                     operator: "GreaterThan",
 *                     statistic: "Average",
 *                     threshold: 75,
 *                     timeAggregation: "Average",
 *                     timeGrain: "PT1M",
 *                     timeWindow: "PT5M",
 *                 },
 *                 scaleAction: {
 *                     cooldown: "PT1M",
 *                     direction: "Increase",
 *                     type: "ChangeCount",
 *                     value: 1,
 *                 },
 *             },
 *             {
 *                 metricTrigger: {
 *                     metricName: "Percentage CPU",
 *                     metricResourceId: testScaleSet.id,
 *                     operator: "LessThan",
 *                     statistic: "Average",
 *                     threshold: 25,
 *                     timeAggregation: "Average",
 *                     timeGrain: "PT1M",
 *                     timeWindow: "PT5M",
 *                 },
 *                 scaleAction: {
 *                     cooldown: "PT1M",
 *                     direction: "Decrease",
 *                     type: "ChangeCount",
 *                     value: 1,
 *                 },
 *             },
 *         ],
 *     }],
 *     resourceGroupName: testResourceGroup.name,
 *     targetResourceId: testScaleSet.id,
 * });
 * ```
 * 
 * ## Example Usage (repeating on weekends)
 * 
 * ```typescript
 * import * as kulado from "@kulado/kulado";
 * import * as azure from "@kulado/azure";
 * 
 * const testResourceGroup = new azure.core.ResourceGroup("test", {
 *     location: "West US",
 *     name: "autoscalingTest",
 * });
 * const testScaleSet = new azure.compute.ScaleSet("test", {});
 * const testAutoscaleSetting = new azure.monitoring.AutoscaleSetting("test", {
 *     location: testResourceGroup.location,
 *     name: "myAutoscaleSetting",
 *     notification: {
 *         email: {
 *             customEmails: ["admin@contoso.com"],
 *             sendToSubscriptionAdministrator: true,
 *             sendToSubscriptionCoAdministrator: true,
 *         },
 *     },
 *     profiles: [{
 *         capacity: {
 *             default: 1,
 *             maximum: 10,
 *             minimum: 1,
 *         },
 *         name: "Weekends",
 *         recurrence: {
 *             days: [
 *                 "Saturday",
 *                 "Sunday",
 *             ],
 *             frequency: "Week",
 *             hours: 12,
 *             minutes: 0,
 *             timezone: "Pacific Standard Time",
 *         },
 *         rules: [
 *             {
 *                 metricTrigger: {
 *                     metricName: "Percentage CPU",
 *                     metricResourceId: testScaleSet.id,
 *                     operator: "GreaterThan",
 *                     statistic: "Average",
 *                     threshold: 90,
 *                     timeAggregation: "Average",
 *                     timeGrain: "PT1M",
 *                     timeWindow: "PT5M",
 *                 },
 *                 scaleAction: {
 *                     cooldown: "PT1M",
 *                     direction: "Increase",
 *                     type: "ChangeCount",
 *                     value: 2,
 *                 },
 *             },
 *             {
 *                 metricTrigger: {
 *                     metricName: "Percentage CPU",
 *                     metricResourceId: testScaleSet.id,
 *                     operator: "LessThan",
 *                     statistic: "Average",
 *                     threshold: 10,
 *                     timeAggregation: "Average",
 *                     timeGrain: "PT1M",
 *                     timeWindow: "PT5M",
 *                 },
 *                 scaleAction: {
 *                     cooldown: "PT1M",
 *                     direction: "Decrease",
 *                     type: "ChangeCount",
 *                     value: 2,
 *                 },
 *             },
 *         ],
 *     }],
 *     resourceGroupName: testResourceGroup.name,
 *     targetResourceId: testScaleSet.id,
 * });
 * ```
 * 
 * ## Example Usage (for fixed dates)
 * 
 * ```typescript
 * import * as kulado from "@kulado/kulado";
 * import * as azure from "@kulado/azure";
 * 
 * const testResourceGroup = new azure.core.ResourceGroup("test", {
 *     location: "West US",
 *     name: "autoscalingTest",
 * });
 * const testScaleSet = new azure.compute.ScaleSet("test", {});
 * const testAutoscaleSetting = new azure.monitoring.AutoscaleSetting("test", {
 *     enabled: true,
 *     location: testResourceGroup.location,
 *     name: "myAutoscaleSetting",
 *     notification: {
 *         email: {
 *             customEmails: ["admin@contoso.com"],
 *             sendToSubscriptionAdministrator: true,
 *             sendToSubscriptionCoAdministrator: true,
 *         },
 *     },
 *     profiles: [{
 *         capacity: {
 *             default: 1,
 *             maximum: 10,
 *             minimum: 1,
 *         },
 *         fixedDate: {
 *             end: "2020-07-31T23:59:59Z",
 *             start: "2020-07-01T00:00:00Z",
 *             timezone: "Pacific Standard Time",
 *         },
 *         name: "forJuly",
 *         rules: [
 *             {
 *                 metricTrigger: {
 *                     metricName: "Percentage CPU",
 *                     metricResourceId: testScaleSet.id,
 *                     operator: "GreaterThan",
 *                     statistic: "Average",
 *                     threshold: 90,
 *                     timeAggregation: "Average",
 *                     timeGrain: "PT1M",
 *                     timeWindow: "PT5M",
 *                 },
 *                 scaleAction: {
 *                     cooldown: "PT1M",
 *                     direction: "Increase",
 *                     type: "ChangeCount",
 *                     value: 2,
 *                 },
 *             },
 *             {
 *                 metricTrigger: {
 *                     metricName: "Percentage CPU",
 *                     metricResourceId: testScaleSet.id,
 *                     operator: "LessThan",
 *                     statistic: "Average",
 *                     threshold: 10,
 *                     timeAggregation: "Average",
 *                     timeGrain: "PT1M",
 *                     timeWindow: "PT5M",
 *                 },
 *                 scaleAction: {
 *                     cooldown: "PT1M",
 *                     direction: "Decrease",
 *                     type: "ChangeCount",
 *                     value: 2,
 *                 },
 *             },
 *         ],
 *     }],
 *     resourceGroupName: testResourceGroup.name,
 *     targetResourceId: testScaleSet.id,
 * });
 * ```
 *
 * > This content is derived from https://github.com/terraform-providers/terraform-provider-azurerm/blob/master/website/docs/r/monitor_autoscale_setting.html.markdown.
 */
export class AutoscaleSetting extends kulado.CustomResource {
    /**
     * Get an existing AutoscaleSetting resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     */
    public static get(name: string, id: kulado.Input<kulado.ID>, state?: AutoscaleSettingState, opts?: kulado.CustomResourceOptions): AutoscaleSetting {
        return new AutoscaleSetting(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __kuladoType = 'azure:monitoring/autoscaleSetting:AutoscaleSetting';

    /**
     * Returns true if the given object is an instance of AutoscaleSetting.  This is designed to work even
     * when multiple copies of the Kulado SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AutoscaleSetting {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__kuladoType'] === AutoscaleSetting.__kuladoType;
    }

    /**
     * Specifies whether automatic scaling is enabled for the target resource. Defaults to `true`.
     */
    public readonly enabled!: kulado.Output<boolean | undefined>;
    /**
     * Specifies the supported Azure location where the AutoScale Setting should exist. Changing this forces a new resource to be created.
     */
    public readonly location!: kulado.Output<string>;
    /**
     * The name of the AutoScale Setting. Changing this forces a new resource to be created.
     */
    public readonly name!: kulado.Output<string>;
    /**
     * Specifies a `notification` block as defined below.
     */
    public readonly notification!: kulado.Output<{ email?: { customEmails?: string[], sendToSubscriptionAdministrator?: boolean, sendToSubscriptionCoAdministrator?: boolean }, webhooks?: { properties?: {[key: string]: any}, serviceUri: string }[] } | undefined>;
    /**
     * Specifies one or more (up to 20) `profile` blocks as defined below.
     */
    public readonly profiles!: kulado.Output<{ capacity: { default: number, maximum: number, minimum: number }, fixedDate?: { end: string, start: string, timezone?: string }, name: string, recurrence?: { days: string[], hours: number, minutes: number, timezone?: string }, rules?: { metricTrigger: { metricName: string, metricResourceId: string, operator: string, statistic: string, threshold: number, timeAggregation: string, timeGrain: string, timeWindow: string }, scaleAction: { cooldown: string, direction: string, type: string, value: number } }[] }[]>;
    /**
     * The name of the Resource Group in the AutoScale Setting should be created. Changing this forces a new resource to be created.
     */
    public readonly resourceGroupName!: kulado.Output<string>;
    /**
     * A mapping of tags to assign to the resource.
     */
    public readonly tags!: kulado.Output<{[key: string]: any}>;
    /**
     * Specifies the resource ID of the resource that the autoscale setting should be added to.
     */
    public readonly targetResourceId!: kulado.Output<string>;

    /**
     * Create a AutoscaleSetting resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AutoscaleSettingArgs, opts?: kulado.CustomResourceOptions)
    constructor(name: string, argsOrState?: AutoscaleSettingArgs | AutoscaleSettingState, opts?: kulado.CustomResourceOptions) {
        let inputs: kulado.Inputs = {};
        if (opts && opts.id) {
            const state = argsOrState as AutoscaleSettingState | undefined;
            inputs["enabled"] = state ? state.enabled : undefined;
            inputs["location"] = state ? state.location : undefined;
            inputs["name"] = state ? state.name : undefined;
            inputs["notification"] = state ? state.notification : undefined;
            inputs["profiles"] = state ? state.profiles : undefined;
            inputs["resourceGroupName"] = state ? state.resourceGroupName : undefined;
            inputs["tags"] = state ? state.tags : undefined;
            inputs["targetResourceId"] = state ? state.targetResourceId : undefined;
        } else {
            const args = argsOrState as AutoscaleSettingArgs | undefined;
            if (!args || args.profiles === undefined) {
                throw new Error("Missing required property 'profiles'");
            }
            if (!args || args.resourceGroupName === undefined) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            if (!args || args.targetResourceId === undefined) {
                throw new Error("Missing required property 'targetResourceId'");
            }
            inputs["enabled"] = args ? args.enabled : undefined;
            inputs["location"] = args ? args.location : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["notification"] = args ? args.notification : undefined;
            inputs["profiles"] = args ? args.profiles : undefined;
            inputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            inputs["tags"] = args ? args.tags : undefined;
            inputs["targetResourceId"] = args ? args.targetResourceId : undefined;
        }
        super(AutoscaleSetting.__kuladoType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering AutoscaleSetting resources.
 */
export interface AutoscaleSettingState {
    /**
     * Specifies whether automatic scaling is enabled for the target resource. Defaults to `true`.
     */
    readonly enabled?: kulado.Input<boolean>;
    /**
     * Specifies the supported Azure location where the AutoScale Setting should exist. Changing this forces a new resource to be created.
     */
    readonly location?: kulado.Input<string>;
    /**
     * The name of the AutoScale Setting. Changing this forces a new resource to be created.
     */
    readonly name?: kulado.Input<string>;
    /**
     * Specifies a `notification` block as defined below.
     */
    readonly notification?: kulado.Input<{ email?: kulado.Input<{ customEmails?: kulado.Input<kulado.Input<string>[]>, sendToSubscriptionAdministrator?: kulado.Input<boolean>, sendToSubscriptionCoAdministrator?: kulado.Input<boolean> }>, webhooks?: kulado.Input<kulado.Input<{ properties?: kulado.Input<{[key: string]: any}>, serviceUri: kulado.Input<string> }>[]> }>;
    /**
     * Specifies one or more (up to 20) `profile` blocks as defined below.
     */
    readonly profiles?: kulado.Input<kulado.Input<{ capacity: kulado.Input<{ default: kulado.Input<number>, maximum: kulado.Input<number>, minimum: kulado.Input<number> }>, fixedDate?: kulado.Input<{ end: kulado.Input<string>, start: kulado.Input<string>, timezone?: kulado.Input<string> }>, name: kulado.Input<string>, recurrence?: kulado.Input<{ days: kulado.Input<kulado.Input<string>[]>, hours: kulado.Input<number>, minutes: kulado.Input<number>, timezone?: kulado.Input<string> }>, rules?: kulado.Input<kulado.Input<{ metricTrigger: kulado.Input<{ metricName: kulado.Input<string>, metricResourceId: kulado.Input<string>, operator: kulado.Input<string>, statistic: kulado.Input<string>, threshold: kulado.Input<number>, timeAggregation: kulado.Input<string>, timeGrain: kulado.Input<string>, timeWindow: kulado.Input<string> }>, scaleAction: kulado.Input<{ cooldown: kulado.Input<string>, direction: kulado.Input<string>, type: kulado.Input<string>, value: kulado.Input<number> }> }>[]> }>[]>;
    /**
     * The name of the Resource Group in the AutoScale Setting should be created. Changing this forces a new resource to be created.
     */
    readonly resourceGroupName?: kulado.Input<string>;
    /**
     * A mapping of tags to assign to the resource.
     */
    readonly tags?: kulado.Input<{[key: string]: any}>;
    /**
     * Specifies the resource ID of the resource that the autoscale setting should be added to.
     */
    readonly targetResourceId?: kulado.Input<string>;
}

/**
 * The set of arguments for constructing a AutoscaleSetting resource.
 */
export interface AutoscaleSettingArgs {
    /**
     * Specifies whether automatic scaling is enabled for the target resource. Defaults to `true`.
     */
    readonly enabled?: kulado.Input<boolean>;
    /**
     * Specifies the supported Azure location where the AutoScale Setting should exist. Changing this forces a new resource to be created.
     */
    readonly location?: kulado.Input<string>;
    /**
     * The name of the AutoScale Setting. Changing this forces a new resource to be created.
     */
    readonly name?: kulado.Input<string>;
    /**
     * Specifies a `notification` block as defined below.
     */
    readonly notification?: kulado.Input<{ email?: kulado.Input<{ customEmails?: kulado.Input<kulado.Input<string>[]>, sendToSubscriptionAdministrator?: kulado.Input<boolean>, sendToSubscriptionCoAdministrator?: kulado.Input<boolean> }>, webhooks?: kulado.Input<kulado.Input<{ properties?: kulado.Input<{[key: string]: any}>, serviceUri: kulado.Input<string> }>[]> }>;
    /**
     * Specifies one or more (up to 20) `profile` blocks as defined below.
     */
    readonly profiles: kulado.Input<kulado.Input<{ capacity: kulado.Input<{ default: kulado.Input<number>, maximum: kulado.Input<number>, minimum: kulado.Input<number> }>, fixedDate?: kulado.Input<{ end: kulado.Input<string>, start: kulado.Input<string>, timezone?: kulado.Input<string> }>, name: kulado.Input<string>, recurrence?: kulado.Input<{ days: kulado.Input<kulado.Input<string>[]>, hours: kulado.Input<number>, minutes: kulado.Input<number>, timezone?: kulado.Input<string> }>, rules?: kulado.Input<kulado.Input<{ metricTrigger: kulado.Input<{ metricName: kulado.Input<string>, metricResourceId: kulado.Input<string>, operator: kulado.Input<string>, statistic: kulado.Input<string>, threshold: kulado.Input<number>, timeAggregation: kulado.Input<string>, timeGrain: kulado.Input<string>, timeWindow: kulado.Input<string> }>, scaleAction: kulado.Input<{ cooldown: kulado.Input<string>, direction: kulado.Input<string>, type: kulado.Input<string>, value: kulado.Input<number> }> }>[]> }>[]>;
    /**
     * The name of the Resource Group in the AutoScale Setting should be created. Changing this forces a new resource to be created.
     */
    readonly resourceGroupName: kulado.Input<string>;
    /**
     * A mapping of tags to assign to the resource.
     */
    readonly tags?: kulado.Input<{[key: string]: any}>;
    /**
     * Specifies the resource ID of the resource that the autoscale setting should be added to.
     */
    readonly targetResourceId: kulado.Input<string>;
}
