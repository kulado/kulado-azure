// *** WARNING: this file was generated by the Kulado Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as kulado from "@kulado/kulado";
import * as utilities from "../utilities";

/**
 * Manages a JavaScript UDF Function within Stream Analytics Streaming Job.
 * 
 * ## Example Usage
 * 
 * ```typescript
 * import * as kulado from "@kulado/kulado";
 * import * as azure from "@kulado/azure";
 * 
 * const exampleResourceGroup = kulado.output(azure.core.getResourceGroup({
 *     name: "example-resources",
 * }));
 * const exampleJob = azurerm_resource_group_example.name.apply(name => azure.streamanalytics.getJob({
 *     name: "example-job",
 *     resourceGroupName: name,
 * }));
 * const test = new azure.streamanalytics.FunctionJavaScriptUDF("test", {
 *     inputs: [{
 *         type: "bigint",
 *     }],
 *     name: "example-javascript-function",
 *     output: {
 *         type: "bigint",
 *     },
 *     resourceGroupName: exampleJob.resourceGroupName,
 *     script: `function getRandomNumber(in) {
 *   return in;
 * }
 * `,
 *     streamAnalyticsJobName: exampleJob.name,
 * });
 * ```
 *
 * > This content is derived from https://github.com/terraform-providers/terraform-provider-azurerm/blob/master/website/docs/r/stream_analytics_function_javascript_udf.html.markdown.
 */
export class FunctionJavaScriptUDF extends kulado.CustomResource {
    /**
     * Get an existing FunctionJavaScriptUDF resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     */
    public static get(name: string, id: kulado.Input<kulado.ID>, state?: FunctionJavaScriptUDFState, opts?: kulado.CustomResourceOptions): FunctionJavaScriptUDF {
        return new FunctionJavaScriptUDF(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __kuladoType = 'azure:streamanalytics/functionJavaScriptUDF:FunctionJavaScriptUDF';

    /**
     * Returns true if the given object is an instance of FunctionJavaScriptUDF.  This is designed to work even
     * when multiple copies of the Kulado SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is FunctionJavaScriptUDF {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__kuladoType'] === FunctionJavaScriptUDF.__kuladoType;
    }

    /**
     * One or more `input` blocks as defined below.
     */
    public readonly inputs!: kulado.Output<{ type: string }[]>;
    /**
     * The name of the JavaScript UDF Function. Changing this forces a new resource to be created.
     */
    public readonly name!: kulado.Output<string>;
    /**
     * An `output` blocks as defined below.
     */
    public readonly output!: kulado.Output<{ type: string }>;
    /**
     * The name of the Resource Group where the Stream Analytics Job exists. Changing this forces a new resource to be created.
     */
    public readonly resourceGroupName!: kulado.Output<string>;
    /**
     * The JavaScript of this UDF Function.
     */
    public readonly script!: kulado.Output<string>;
    /**
     * The name of the Stream Analytics Job where this Function should be created. Changing this forces a new resource to be created.
     */
    public readonly streamAnalyticsJobName!: kulado.Output<string>;

    /**
     * Create a FunctionJavaScriptUDF resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: FunctionJavaScriptUDFArgs, opts?: kulado.CustomResourceOptions)
    constructor(name: string, argsOrState?: FunctionJavaScriptUDFArgs | FunctionJavaScriptUDFState, opts?: kulado.CustomResourceOptions) {
        let inputs: kulado.Inputs = {};
        if (opts && opts.id) {
            const state = argsOrState as FunctionJavaScriptUDFState | undefined;
            inputs["inputs"] = state ? state.inputs : undefined;
            inputs["name"] = state ? state.name : undefined;
            inputs["output"] = state ? state.output : undefined;
            inputs["resourceGroupName"] = state ? state.resourceGroupName : undefined;
            inputs["script"] = state ? state.script : undefined;
            inputs["streamAnalyticsJobName"] = state ? state.streamAnalyticsJobName : undefined;
        } else {
            const args = argsOrState as FunctionJavaScriptUDFArgs | undefined;
            if (!args || args.inputs === undefined) {
                throw new Error("Missing required property 'inputs'");
            }
            if (!args || args.output === undefined) {
                throw new Error("Missing required property 'output'");
            }
            if (!args || args.resourceGroupName === undefined) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            if (!args || args.script === undefined) {
                throw new Error("Missing required property 'script'");
            }
            if (!args || args.streamAnalyticsJobName === undefined) {
                throw new Error("Missing required property 'streamAnalyticsJobName'");
            }
            inputs["inputs"] = args ? args.inputs : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["output"] = args ? args.output : undefined;
            inputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            inputs["script"] = args ? args.script : undefined;
            inputs["streamAnalyticsJobName"] = args ? args.streamAnalyticsJobName : undefined;
        }
        super(FunctionJavaScriptUDF.__kuladoType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering FunctionJavaScriptUDF resources.
 */
export interface FunctionJavaScriptUDFState {
    /**
     * One or more `input` blocks as defined below.
     */
    readonly inputs?: kulado.Input<kulado.Input<{ type: kulado.Input<string> }>[]>;
    /**
     * The name of the JavaScript UDF Function. Changing this forces a new resource to be created.
     */
    readonly name?: kulado.Input<string>;
    /**
     * An `output` blocks as defined below.
     */
    readonly output?: kulado.Input<{ type: kulado.Input<string> }>;
    /**
     * The name of the Resource Group where the Stream Analytics Job exists. Changing this forces a new resource to be created.
     */
    readonly resourceGroupName?: kulado.Input<string>;
    /**
     * The JavaScript of this UDF Function.
     */
    readonly script?: kulado.Input<string>;
    /**
     * The name of the Stream Analytics Job where this Function should be created. Changing this forces a new resource to be created.
     */
    readonly streamAnalyticsJobName?: kulado.Input<string>;
}

/**
 * The set of arguments for constructing a FunctionJavaScriptUDF resource.
 */
export interface FunctionJavaScriptUDFArgs {
    /**
     * One or more `input` blocks as defined below.
     */
    readonly inputs: kulado.Input<kulado.Input<{ type: kulado.Input<string> }>[]>;
    /**
     * The name of the JavaScript UDF Function. Changing this forces a new resource to be created.
     */
    readonly name?: kulado.Input<string>;
    /**
     * An `output` blocks as defined below.
     */
    readonly output: kulado.Input<{ type: kulado.Input<string> }>;
    /**
     * The name of the Resource Group where the Stream Analytics Job exists. Changing this forces a new resource to be created.
     */
    readonly resourceGroupName: kulado.Input<string>;
    /**
     * The JavaScript of this UDF Function.
     */
    readonly script: kulado.Input<string>;
    /**
     * The name of the Stream Analytics Job where this Function should be created. Changing this forces a new resource to be created.
     */
    readonly streamAnalyticsJobName: kulado.Input<string>;
}
