// *** WARNING: this file was generated by the Kulado Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as kulado from "@kulado/kulado";
import * as utilities from "../utilities";

/**
 * Manage a Service Fabric Cluster.
 * 
 * ## Example Usage
 * 
 * ```typescript
 * import * as kulado from "@kulado/kulado";
 * import * as azure from "@kulado/azure";
 * 
 * const testResourceGroup = new azure.core.ResourceGroup("test", {
 *     location: "West Europe",
 *     name: "example-resources",
 * });
 * const testCluster = new azure.servicefabric.Cluster("test", {
 *     clusterCodeVersion: "6.3.176.9494",
 *     location: testResourceGroup.location,
 *     managementEndpoint: "https://example:80",
 *     name: "example-servicefabric",
 *     nodeTypes: [{
 *         clientEndpointPort: 2020,
 *         httpEndpointPort: 80,
 *         instanceCount: 3,
 *         isPrimary: true,
 *         name: "first",
 *     }],
 *     reliabilityLevel: "Bronze",
 *     resourceGroupName: testResourceGroup.name,
 *     upgradeMode: "Manual",
 *     vmImage: "Windows",
 * });
 * ```
 *
 * > This content is derived from https://github.com/terraform-providers/terraform-provider-azurerm/blob/master/website/docs/r/service_fabric_cluster.html.markdown.
 */
export class Cluster extends kulado.CustomResource {
    /**
     * Get an existing Cluster resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     */
    public static get(name: string, id: kulado.Input<kulado.ID>, state?: ClusterState, opts?: kulado.CustomResourceOptions): Cluster {
        return new Cluster(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __kuladoType = 'azure:servicefabric/cluster:Cluster';

    /**
     * Returns true if the given object is an instance of Cluster.  This is designed to work even
     * when multiple copies of the Kulado SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Cluster {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__kuladoType'] === Cluster.__kuladoType;
    }

    /**
     * A List of one or more features which should be enabled, such as `DnsService`.
     */
    public readonly addOnFeatures!: kulado.Output<string[] | undefined>;
    /**
     * An `azure_active_directory` block as defined below.
     */
    public readonly azureActiveDirectory!: kulado.Output<{ clientApplicationId: string, clusterApplicationId: string, tenantId: string } | undefined>;
    /**
     * A `certificate` block as defined below. Conflicts with `certificate_common_names`.
     */
    public readonly certificate!: kulado.Output<{ thumbprint: string, thumbprintSecondary?: string, x509StoreName: string } | undefined>;
    /**
     * A `certificate_common_names` block as defined below. Conflicts with `certificate`.
     */
    public readonly certificateCommonNames!: kulado.Output<{ commonNames: { certificateCommonName: string, certificateIssuerThumbprint?: string }[], x509StoreName: string } | undefined>;
    /**
     * One or two `client_certificate_thumbprint` blocks as defined below.
     */
    public readonly clientCertificateThumbprints!: kulado.Output<{ isAdmin: boolean, thumbprint: string }[] | undefined>;
    /**
     * Required if Upgrade Mode set to `Manual`, Specifies the Version of the Cluster Code of the cluster.
     */
    public readonly clusterCodeVersion!: kulado.Output<string>;
    /**
     * The Cluster Endpoint for this Service Fabric Cluster.
     */
    public /*out*/ readonly clusterEndpoint!: kulado.Output<string>;
    /**
     * A `diagnostics_config` block as defined below. Changing this forces a new resource to be created.
     */
    public readonly diagnosticsConfig!: kulado.Output<{ blobEndpoint: string, protectedAccountKeyName: string, queueEndpoint: string, storageAccountName: string, tableEndpoint: string } | undefined>;
    /**
     * One or more `fabric_settings` blocks as defined below.
     */
    public readonly fabricSettings!: kulado.Output<{ name: string, parameters?: {[key: string]: any} }[] | undefined>;
    /**
     * Specifies the Azure Region where the Service Fabric Cluster should exist. Changing this forces a new resource to be created.
     */
    public readonly location!: kulado.Output<string>;
    /**
     * Specifies the Management Endpoint of the cluster such as `http://example.com`. Changing this forces a new resource to be created.
     */
    public readonly managementEndpoint!: kulado.Output<string>;
    /**
     * The name of the Service Fabric Cluster. Changing this forces a new resource to be created.
     */
    public readonly name!: kulado.Output<string>;
    /**
     * One or more `node_type` blocks as defined below.
     */
    public readonly nodeTypes!: kulado.Output<{ applicationPorts: { endPort: number, startPort: number }, capacities?: {[key: string]: any}, clientEndpointPort: number, durabilityLevel?: string, ephemeralPorts: { endPort: number, startPort: number }, httpEndpointPort: number, instanceCount: number, isPrimary: boolean, name: string, placementProperties?: {[key: string]: any}, reverseProxyEndpointPort?: number }[]>;
    /**
     * Specifies the Reliability Level of the Cluster. Possible values include `None`, `Bronze`, `Silver`, `Gold` and `Platinum`.
     */
    public readonly reliabilityLevel!: kulado.Output<string>;
    /**
     * The name of the Resource Group in which the Service Fabric Cluster exists. Changing this forces a new resource to be created.
     */
    public readonly resourceGroupName!: kulado.Output<string>;
    /**
     * A `reverse_proxy_certificate` block as defined below.
     */
    public readonly reverseProxyCertificate!: kulado.Output<{ thumbprint: string, thumbprintSecondary?: string, x509StoreName: string } | undefined>;
    /**
     * A mapping of tags to assign to the resource.
     */
    public readonly tags!: kulado.Output<{[key: string]: any}>;
    /**
     * Specifies the Upgrade Mode of the cluster. Possible values are `Automatic` or `Manual`.
     */
    public readonly upgradeMode!: kulado.Output<string>;
    /**
     * Specifies the Image expected for the Service Fabric Cluster, such as `Windows`. Changing this forces a new resource to be created.
     */
    public readonly vmImage!: kulado.Output<string>;

    /**
     * Create a Cluster resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ClusterArgs, opts?: kulado.CustomResourceOptions)
    constructor(name: string, argsOrState?: ClusterArgs | ClusterState, opts?: kulado.CustomResourceOptions) {
        let inputs: kulado.Inputs = {};
        if (opts && opts.id) {
            const state = argsOrState as ClusterState | undefined;
            inputs["addOnFeatures"] = state ? state.addOnFeatures : undefined;
            inputs["azureActiveDirectory"] = state ? state.azureActiveDirectory : undefined;
            inputs["certificate"] = state ? state.certificate : undefined;
            inputs["certificateCommonNames"] = state ? state.certificateCommonNames : undefined;
            inputs["clientCertificateThumbprints"] = state ? state.clientCertificateThumbprints : undefined;
            inputs["clusterCodeVersion"] = state ? state.clusterCodeVersion : undefined;
            inputs["clusterEndpoint"] = state ? state.clusterEndpoint : undefined;
            inputs["diagnosticsConfig"] = state ? state.diagnosticsConfig : undefined;
            inputs["fabricSettings"] = state ? state.fabricSettings : undefined;
            inputs["location"] = state ? state.location : undefined;
            inputs["managementEndpoint"] = state ? state.managementEndpoint : undefined;
            inputs["name"] = state ? state.name : undefined;
            inputs["nodeTypes"] = state ? state.nodeTypes : undefined;
            inputs["reliabilityLevel"] = state ? state.reliabilityLevel : undefined;
            inputs["resourceGroupName"] = state ? state.resourceGroupName : undefined;
            inputs["reverseProxyCertificate"] = state ? state.reverseProxyCertificate : undefined;
            inputs["tags"] = state ? state.tags : undefined;
            inputs["upgradeMode"] = state ? state.upgradeMode : undefined;
            inputs["vmImage"] = state ? state.vmImage : undefined;
        } else {
            const args = argsOrState as ClusterArgs | undefined;
            if (!args || args.managementEndpoint === undefined) {
                throw new Error("Missing required property 'managementEndpoint'");
            }
            if (!args || args.nodeTypes === undefined) {
                throw new Error("Missing required property 'nodeTypes'");
            }
            if (!args || args.reliabilityLevel === undefined) {
                throw new Error("Missing required property 'reliabilityLevel'");
            }
            if (!args || args.resourceGroupName === undefined) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            if (!args || args.upgradeMode === undefined) {
                throw new Error("Missing required property 'upgradeMode'");
            }
            if (!args || args.vmImage === undefined) {
                throw new Error("Missing required property 'vmImage'");
            }
            inputs["addOnFeatures"] = args ? args.addOnFeatures : undefined;
            inputs["azureActiveDirectory"] = args ? args.azureActiveDirectory : undefined;
            inputs["certificate"] = args ? args.certificate : undefined;
            inputs["certificateCommonNames"] = args ? args.certificateCommonNames : undefined;
            inputs["clientCertificateThumbprints"] = args ? args.clientCertificateThumbprints : undefined;
            inputs["clusterCodeVersion"] = args ? args.clusterCodeVersion : undefined;
            inputs["diagnosticsConfig"] = args ? args.diagnosticsConfig : undefined;
            inputs["fabricSettings"] = args ? args.fabricSettings : undefined;
            inputs["location"] = args ? args.location : undefined;
            inputs["managementEndpoint"] = args ? args.managementEndpoint : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["nodeTypes"] = args ? args.nodeTypes : undefined;
            inputs["reliabilityLevel"] = args ? args.reliabilityLevel : undefined;
            inputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            inputs["reverseProxyCertificate"] = args ? args.reverseProxyCertificate : undefined;
            inputs["tags"] = args ? args.tags : undefined;
            inputs["upgradeMode"] = args ? args.upgradeMode : undefined;
            inputs["vmImage"] = args ? args.vmImage : undefined;
            inputs["clusterEndpoint"] = undefined /*out*/;
        }
        super(Cluster.__kuladoType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Cluster resources.
 */
export interface ClusterState {
    /**
     * A List of one or more features which should be enabled, such as `DnsService`.
     */
    readonly addOnFeatures?: kulado.Input<kulado.Input<string>[]>;
    /**
     * An `azure_active_directory` block as defined below.
     */
    readonly azureActiveDirectory?: kulado.Input<{ clientApplicationId: kulado.Input<string>, clusterApplicationId: kulado.Input<string>, tenantId: kulado.Input<string> }>;
    /**
     * A `certificate` block as defined below. Conflicts with `certificate_common_names`.
     */
    readonly certificate?: kulado.Input<{ thumbprint: kulado.Input<string>, thumbprintSecondary?: kulado.Input<string>, x509StoreName: kulado.Input<string> }>;
    /**
     * A `certificate_common_names` block as defined below. Conflicts with `certificate`.
     */
    readonly certificateCommonNames?: kulado.Input<{ commonNames: kulado.Input<kulado.Input<{ certificateCommonName: kulado.Input<string>, certificateIssuerThumbprint?: kulado.Input<string> }>[]>, x509StoreName: kulado.Input<string> }>;
    /**
     * One or two `client_certificate_thumbprint` blocks as defined below.
     */
    readonly clientCertificateThumbprints?: kulado.Input<kulado.Input<{ isAdmin: kulado.Input<boolean>, thumbprint: kulado.Input<string> }>[]>;
    /**
     * Required if Upgrade Mode set to `Manual`, Specifies the Version of the Cluster Code of the cluster.
     */
    readonly clusterCodeVersion?: kulado.Input<string>;
    /**
     * The Cluster Endpoint for this Service Fabric Cluster.
     */
    readonly clusterEndpoint?: kulado.Input<string>;
    /**
     * A `diagnostics_config` block as defined below. Changing this forces a new resource to be created.
     */
    readonly diagnosticsConfig?: kulado.Input<{ blobEndpoint: kulado.Input<string>, protectedAccountKeyName: kulado.Input<string>, queueEndpoint: kulado.Input<string>, storageAccountName: kulado.Input<string>, tableEndpoint: kulado.Input<string> }>;
    /**
     * One or more `fabric_settings` blocks as defined below.
     */
    readonly fabricSettings?: kulado.Input<kulado.Input<{ name: kulado.Input<string>, parameters?: kulado.Input<{[key: string]: any}> }>[]>;
    /**
     * Specifies the Azure Region where the Service Fabric Cluster should exist. Changing this forces a new resource to be created.
     */
    readonly location?: kulado.Input<string>;
    /**
     * Specifies the Management Endpoint of the cluster such as `http://example.com`. Changing this forces a new resource to be created.
     */
    readonly managementEndpoint?: kulado.Input<string>;
    /**
     * The name of the Service Fabric Cluster. Changing this forces a new resource to be created.
     */
    readonly name?: kulado.Input<string>;
    /**
     * One or more `node_type` blocks as defined below.
     */
    readonly nodeTypes?: kulado.Input<kulado.Input<{ applicationPorts?: kulado.Input<{ endPort: kulado.Input<number>, startPort: kulado.Input<number> }>, capacities?: kulado.Input<{[key: string]: any}>, clientEndpointPort: kulado.Input<number>, durabilityLevel?: kulado.Input<string>, ephemeralPorts?: kulado.Input<{ endPort: kulado.Input<number>, startPort: kulado.Input<number> }>, httpEndpointPort: kulado.Input<number>, instanceCount: kulado.Input<number>, isPrimary: kulado.Input<boolean>, name: kulado.Input<string>, placementProperties?: kulado.Input<{[key: string]: any}>, reverseProxyEndpointPort?: kulado.Input<number> }>[]>;
    /**
     * Specifies the Reliability Level of the Cluster. Possible values include `None`, `Bronze`, `Silver`, `Gold` and `Platinum`.
     */
    readonly reliabilityLevel?: kulado.Input<string>;
    /**
     * The name of the Resource Group in which the Service Fabric Cluster exists. Changing this forces a new resource to be created.
     */
    readonly resourceGroupName?: kulado.Input<string>;
    /**
     * A `reverse_proxy_certificate` block as defined below.
     */
    readonly reverseProxyCertificate?: kulado.Input<{ thumbprint: kulado.Input<string>, thumbprintSecondary?: kulado.Input<string>, x509StoreName: kulado.Input<string> }>;
    /**
     * A mapping of tags to assign to the resource.
     */
    readonly tags?: kulado.Input<{[key: string]: any}>;
    /**
     * Specifies the Upgrade Mode of the cluster. Possible values are `Automatic` or `Manual`.
     */
    readonly upgradeMode?: kulado.Input<string>;
    /**
     * Specifies the Image expected for the Service Fabric Cluster, such as `Windows`. Changing this forces a new resource to be created.
     */
    readonly vmImage?: kulado.Input<string>;
}

/**
 * The set of arguments for constructing a Cluster resource.
 */
export interface ClusterArgs {
    /**
     * A List of one or more features which should be enabled, such as `DnsService`.
     */
    readonly addOnFeatures?: kulado.Input<kulado.Input<string>[]>;
    /**
     * An `azure_active_directory` block as defined below.
     */
    readonly azureActiveDirectory?: kulado.Input<{ clientApplicationId: kulado.Input<string>, clusterApplicationId: kulado.Input<string>, tenantId: kulado.Input<string> }>;
    /**
     * A `certificate` block as defined below. Conflicts with `certificate_common_names`.
     */
    readonly certificate?: kulado.Input<{ thumbprint: kulado.Input<string>, thumbprintSecondary?: kulado.Input<string>, x509StoreName: kulado.Input<string> }>;
    /**
     * A `certificate_common_names` block as defined below. Conflicts with `certificate`.
     */
    readonly certificateCommonNames?: kulado.Input<{ commonNames: kulado.Input<kulado.Input<{ certificateCommonName: kulado.Input<string>, certificateIssuerThumbprint?: kulado.Input<string> }>[]>, x509StoreName: kulado.Input<string> }>;
    /**
     * One or two `client_certificate_thumbprint` blocks as defined below.
     */
    readonly clientCertificateThumbprints?: kulado.Input<kulado.Input<{ isAdmin: kulado.Input<boolean>, thumbprint: kulado.Input<string> }>[]>;
    /**
     * Required if Upgrade Mode set to `Manual`, Specifies the Version of the Cluster Code of the cluster.
     */
    readonly clusterCodeVersion?: kulado.Input<string>;
    /**
     * A `diagnostics_config` block as defined below. Changing this forces a new resource to be created.
     */
    readonly diagnosticsConfig?: kulado.Input<{ blobEndpoint: kulado.Input<string>, protectedAccountKeyName: kulado.Input<string>, queueEndpoint: kulado.Input<string>, storageAccountName: kulado.Input<string>, tableEndpoint: kulado.Input<string> }>;
    /**
     * One or more `fabric_settings` blocks as defined below.
     */
    readonly fabricSettings?: kulado.Input<kulado.Input<{ name: kulado.Input<string>, parameters?: kulado.Input<{[key: string]: any}> }>[]>;
    /**
     * Specifies the Azure Region where the Service Fabric Cluster should exist. Changing this forces a new resource to be created.
     */
    readonly location?: kulado.Input<string>;
    /**
     * Specifies the Management Endpoint of the cluster such as `http://example.com`. Changing this forces a new resource to be created.
     */
    readonly managementEndpoint: kulado.Input<string>;
    /**
     * The name of the Service Fabric Cluster. Changing this forces a new resource to be created.
     */
    readonly name?: kulado.Input<string>;
    /**
     * One or more `node_type` blocks as defined below.
     */
    readonly nodeTypes: kulado.Input<kulado.Input<{ applicationPorts?: kulado.Input<{ endPort: kulado.Input<number>, startPort: kulado.Input<number> }>, capacities?: kulado.Input<{[key: string]: any}>, clientEndpointPort: kulado.Input<number>, durabilityLevel?: kulado.Input<string>, ephemeralPorts?: kulado.Input<{ endPort: kulado.Input<number>, startPort: kulado.Input<number> }>, httpEndpointPort: kulado.Input<number>, instanceCount: kulado.Input<number>, isPrimary: kulado.Input<boolean>, name: kulado.Input<string>, placementProperties?: kulado.Input<{[key: string]: any}>, reverseProxyEndpointPort?: kulado.Input<number> }>[]>;
    /**
     * Specifies the Reliability Level of the Cluster. Possible values include `None`, `Bronze`, `Silver`, `Gold` and `Platinum`.
     */
    readonly reliabilityLevel: kulado.Input<string>;
    /**
     * The name of the Resource Group in which the Service Fabric Cluster exists. Changing this forces a new resource to be created.
     */
    readonly resourceGroupName: kulado.Input<string>;
    /**
     * A `reverse_proxy_certificate` block as defined below.
     */
    readonly reverseProxyCertificate?: kulado.Input<{ thumbprint: kulado.Input<string>, thumbprintSecondary?: kulado.Input<string>, x509StoreName: kulado.Input<string> }>;
    /**
     * A mapping of tags to assign to the resource.
     */
    readonly tags?: kulado.Input<{[key: string]: any}>;
    /**
     * Specifies the Upgrade Mode of the cluster. Possible values are `Automatic` or `Manual`.
     */
    readonly upgradeMode: kulado.Input<string>;
    /**
     * Specifies the Image expected for the Service Fabric Cluster, such as `Windows`. Changing this forces a new resource to be created.
     */
    readonly vmImage: kulado.Input<string>;
}
