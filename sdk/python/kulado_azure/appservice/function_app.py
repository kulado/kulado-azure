# coding=utf-8
# *** WARNING: this file was generated by the Kulado Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import json
import warnings
import kulado
import kulado.runtime
from .. import utilities, tables

class FunctionApp(kulado.CustomResource):
    app_service_plan_id: kulado.Output[str]
    """
    The ID of the App Service Plan within which to create this Function App. Changing this forces a new resource to be created.
    """
    app_settings: kulado.Output[dict]
    """
    A key-value pair of App Settings.
    """
    client_affinity_enabled: kulado.Output[bool]
    """
    Should the Function App send session affinity cookies, which route client requests in the same session to the same instance?
    """
    connection_strings: kulado.Output[list]
    """
    An `connection_string` block as defined below.
    """
    default_hostname: kulado.Output[str]
    """
    The default hostname associated with the Function App - such as `mysite.azurewebsites.net`
    """
    enable_builtin_logging: kulado.Output[bool]
    """
    Should the built-in logging of this Function App be enabled? Defaults to `true`.
    """
    enabled: kulado.Output[bool]
    """
    Is the Function App enabled?
    """
    https_only: kulado.Output[bool]
    """
    Can the Function App only be accessed via HTTPS? Defaults to `false`.
    """
    identity: kulado.Output[dict]
    """
    An `identity` block as defined below.
    """
    kind: kulado.Output[str]
    """
    The Function App kind - such as `functionapp,linux,container`
    """
    location: kulado.Output[str]
    """
    Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
    """
    name: kulado.Output[str]
    """
    The name of the Connection String.
    """
    outbound_ip_addresses: kulado.Output[str]
    """
    A comma separated list of outbound IP addresses - such as `52.23.25.3,52.143.43.12`
    """
    possible_outbound_ip_addresses: kulado.Output[str]
    """
    A comma separated list of outbound IP addresses - such as `52.23.25.3,52.143.43.12,52.143.43.17` - not all of which are necessarily in use. Superset of `outbound_ip_addresses`.
    """
    resource_group_name: kulado.Output[str]
    """
    The name of the resource group in which to create the Function App.
    """
    site_config: kulado.Output[dict]
    """
    A `site_config` object as defined below.
    """
    site_credential: kulado.Output[dict]
    """
    A `site_credential` block as defined below, which contains the site-level credentials used to publish to this App Service.
    """
    storage_connection_string: kulado.Output[str]
    """
    The connection string of the backend storage account which will be used by this Function App (such as the dashboard, logs).
    """
    tags: kulado.Output[dict]
    """
    A mapping of tags to assign to the resource.
    """
    version: kulado.Output[str]
    """
    The runtime version associated with the Function App. Defaults to `~1`.
    """
    def __init__(__self__, resource_name, opts=None, app_service_plan_id=None, app_settings=None, client_affinity_enabled=None, connection_strings=None, enable_builtin_logging=None, enabled=None, https_only=None, identity=None, location=None, name=None, resource_group_name=None, site_config=None, storage_connection_string=None, tags=None, version=None, __name__=None, __opts__=None):
        """
        Manages a Function App.
        
        :param str resource_name: The name of the resource.
        :param kulado.ResourceOptions opts: Options for the resource.
        :param kulado.Input[str] app_service_plan_id: The ID of the App Service Plan within which to create this Function App. Changing this forces a new resource to be created.
        :param kulado.Input[dict] app_settings: A key-value pair of App Settings.
        :param kulado.Input[bool] client_affinity_enabled: Should the Function App send session affinity cookies, which route client requests in the same session to the same instance?
        :param kulado.Input[list] connection_strings: An `connection_string` block as defined below.
        :param kulado.Input[bool] enable_builtin_logging: Should the built-in logging of this Function App be enabled? Defaults to `true`.
        :param kulado.Input[bool] enabled: Is the Function App enabled?
        :param kulado.Input[bool] https_only: Can the Function App only be accessed via HTTPS? Defaults to `false`.
        :param kulado.Input[dict] identity: An `identity` block as defined below.
        :param kulado.Input[str] location: Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
        :param kulado.Input[str] name: The name of the Connection String.
        :param kulado.Input[str] resource_group_name: The name of the resource group in which to create the Function App.
        :param kulado.Input[dict] site_config: A `site_config` object as defined below.
        :param kulado.Input[str] storage_connection_string: The connection string of the backend storage account which will be used by this Function App (such as the dashboard, logs).
        :param kulado.Input[dict] tags: A mapping of tags to assign to the resource.
        :param kulado.Input[str] version: The runtime version associated with the Function App. Defaults to `~1`.

        > This content is derived from https://github.com/terraform-providers/terraform-provider-azurerm/blob/master/website/docs/r/function_app.html.markdown.
        """
        if __name__ is not None:
            warnings.warn("explicit use of __name__ is deprecated", DeprecationWarning)
            resource_name = __name__
        if __opts__ is not None:
            warnings.warn("explicit use of __opts__ is deprecated, use 'opts' instead", DeprecationWarning)
            opts = __opts__
        if not resource_name:
            raise TypeError('Missing resource name argument (for URN creation)')
        if not isinstance(resource_name, str):
            raise TypeError('Expected resource name to be a string')
        if opts and not isinstance(opts, kulado.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')

        __props__ = dict()

        if app_service_plan_id is None:
            raise TypeError("Missing required property 'app_service_plan_id'")
        __props__['app_service_plan_id'] = app_service_plan_id

        __props__['app_settings'] = app_settings

        __props__['client_affinity_enabled'] = client_affinity_enabled

        __props__['connection_strings'] = connection_strings

        __props__['enable_builtin_logging'] = enable_builtin_logging

        __props__['enabled'] = enabled

        __props__['https_only'] = https_only

        __props__['identity'] = identity

        __props__['location'] = location

        __props__['name'] = name

        if resource_group_name is None:
            raise TypeError("Missing required property 'resource_group_name'")
        __props__['resource_group_name'] = resource_group_name

        __props__['site_config'] = site_config

        if storage_connection_string is None:
            raise TypeError("Missing required property 'storage_connection_string'")
        __props__['storage_connection_string'] = storage_connection_string

        __props__['tags'] = tags

        __props__['version'] = version

        __props__['default_hostname'] = None
        __props__['kind'] = None
        __props__['outbound_ip_addresses'] = None
        __props__['possible_outbound_ip_addresses'] = None
        __props__['site_credential'] = None

        super(FunctionApp, __self__).__init__(
            'azure:appservice/functionApp:FunctionApp',
            resource_name,
            __props__,
            opts)


    def translate_output_property(self, prop):
        return tables._CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop

    def translate_input_property(self, prop):
        return tables._SNAKE_TO_CAMEL_CASE_TABLE.get(prop) or prop

