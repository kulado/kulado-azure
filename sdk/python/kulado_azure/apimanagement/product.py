# coding=utf-8
# *** WARNING: this file was generated by the Kulado Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import json
import warnings
import kulado
import kulado.runtime
from .. import utilities, tables

class Product(kulado.CustomResource):
    api_management_name: kulado.Output[str]
    """
    The name of the API Management Service. Changing this forces a new resource to be created.
    """
    approval_required: kulado.Output[bool]
    """
    Do subscribers need to be approved prior to being able to use the Product?
    """
    description: kulado.Output[str]
    """
    A description of this Product, which may include HTML formatting tags.
    """
    display_name: kulado.Output[str]
    """
    The Display Name for this API Management Product.
    """
    product_id: kulado.Output[str]
    """
    The Identifier for this Product, which must be unique within the API Management Service. Changing this forces a new resource to be created.
    """
    published: kulado.Output[bool]
    """
    Is this Product Published?
    """
    resource_group_name: kulado.Output[str]
    """
    The name of the Resource Group in which the API Management Service should be exist. Changing this forces a new resource to be created.
    """
    subscription_required: kulado.Output[bool]
    """
    Is a Subscription required to access API's included in this Product?
    """
    subscriptions_limit: kulado.Output[float]
    """
    The number of subscriptions a user can have to this Product at the same time.
    """
    terms: kulado.Output[str]
    """
    The Terms and Conditions for this Product, which must be accepted by Developers before they can begin the Subscription process.
    """
    def __init__(__self__, resource_name, opts=None, api_management_name=None, approval_required=None, description=None, display_name=None, product_id=None, published=None, resource_group_name=None, subscription_required=None, subscriptions_limit=None, terms=None, __name__=None, __opts__=None):
        """
        Manages an API Management Product.
        
        :param str resource_name: The name of the resource.
        :param kulado.ResourceOptions opts: Options for the resource.
        :param kulado.Input[str] api_management_name: The name of the API Management Service. Changing this forces a new resource to be created.
        :param kulado.Input[bool] approval_required: Do subscribers need to be approved prior to being able to use the Product?
        :param kulado.Input[str] description: A description of this Product, which may include HTML formatting tags.
        :param kulado.Input[str] display_name: The Display Name for this API Management Product.
        :param kulado.Input[str] product_id: The Identifier for this Product, which must be unique within the API Management Service. Changing this forces a new resource to be created.
        :param kulado.Input[bool] published: Is this Product Published?
        :param kulado.Input[str] resource_group_name: The name of the Resource Group in which the API Management Service should be exist. Changing this forces a new resource to be created.
        :param kulado.Input[bool] subscription_required: Is a Subscription required to access API's included in this Product?
        :param kulado.Input[float] subscriptions_limit: The number of subscriptions a user can have to this Product at the same time.
        :param kulado.Input[str] terms: The Terms and Conditions for this Product, which must be accepted by Developers before they can begin the Subscription process.

        > This content is derived from https://github.com/terraform-providers/terraform-provider-azurerm/blob/master/website/docs/r/api_management_product.html.markdown.
        """
        if __name__ is not None:
            warnings.warn("explicit use of __name__ is deprecated", DeprecationWarning)
            resource_name = __name__
        if __opts__ is not None:
            warnings.warn("explicit use of __opts__ is deprecated, use 'opts' instead", DeprecationWarning)
            opts = __opts__
        if not resource_name:
            raise TypeError('Missing resource name argument (for URN creation)')
        if not isinstance(resource_name, str):
            raise TypeError('Expected resource name to be a string')
        if opts and not isinstance(opts, kulado.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')

        __props__ = dict()

        if api_management_name is None:
            raise TypeError("Missing required property 'api_management_name'")
        __props__['api_management_name'] = api_management_name

        __props__['approval_required'] = approval_required

        __props__['description'] = description

        if display_name is None:
            raise TypeError("Missing required property 'display_name'")
        __props__['display_name'] = display_name

        if product_id is None:
            raise TypeError("Missing required property 'product_id'")
        __props__['product_id'] = product_id

        if published is None:
            raise TypeError("Missing required property 'published'")
        __props__['published'] = published

        if resource_group_name is None:
            raise TypeError("Missing required property 'resource_group_name'")
        __props__['resource_group_name'] = resource_group_name

        if subscription_required is None:
            raise TypeError("Missing required property 'subscription_required'")
        __props__['subscription_required'] = subscription_required

        __props__['subscriptions_limit'] = subscriptions_limit

        __props__['terms'] = terms

        super(Product, __self__).__init__(
            'azure:apimanagement/product:Product',
            resource_name,
            __props__,
            opts)


    def translate_output_property(self, prop):
        return tables._CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop

    def translate_input_property(self, prop):
        return tables._SNAKE_TO_CAMEL_CASE_TABLE.get(prop) or prop

